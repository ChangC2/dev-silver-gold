[{"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\index.js":"1","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\App.js":"2","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\redux\\store.js":"3","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\navigation\\RouterConfig.js":"4","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\utils\\dropConsole.js":"5","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\navigation\\ProvideAuth.js":"6","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\redux\\reducers\\index.js":"7","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\navigation\\useProvideAuth.js":"8","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\navigation\\CONSTANTS.js":"9","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\pages\\NotFound.js":"10","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\services\\global.js":"11","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\pages\\LoginPage\\LoginPage.js":"12","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\redux\\actions\\appActions.js":"13","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\redux\\reducers\\userReducer.js":"14","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\redux\\reducers\\appReducer.js":"15","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\MainLayout\\MainLayout.js":"16","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\services\\apiCall.js":"17","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\services\\CONSTANTS.js":"18","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\redux\\actions\\userActions.js":"19","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\pages\\Maintenance\\Maintenance.js":"20","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\pages\\Settings\\Settings.js":"21","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\pages\\ProcessMonitor\\ProcessMonitor.js":"22","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\pages\\InstallConfig\\InstallConfig.js":"23","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\ContentLayout\\ContentLayout.js":"24","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\pages\\Dashboard\\Dashboard.js":"25","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\TopLayout\\TopLayout.js":"26","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\InputWidgets\\InputNormal\\InputNormal.js":"27","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\ButtonWidgets\\NormalButton\\NormalButton.js":"28","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\InputWidgets\\InputPassword\\InputPassword.js":"29","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\BottomLayout\\BottomLayout.js":"30","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\UserInfoLayout\\UserInfoLayout.js":"31","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SidebarMenu\\SidebarMenu.js":"32","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\TextWithIcon\\TextWithIcon.js":"33","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\DashboardUtilizationLayout\\DashboardUtilizationLayout.js":"34","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\DashboardMachineInfoLayout\\DashboardMachineInfoLayout.js":"35","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\DashboardOEELayout\\DashboardOEELayout.js":"36","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\IndicatorDots.js":"37","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\DashboardChartLayout\\DashboardChartLayout.js":"38","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\GoodBadWidget\\GoodBadWidget.js":"39","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\DashboardMachineInfoLayout\\JobIDModal\\JobIDModal.js":"40","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\LogoutModal\\LogoutModal.js":"41","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\LoginIDModal\\LoginIDModal.js":"42","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\IndicatorItem\\IndicatorItem.js":"43","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\OneGantt\\OneGantt.js":"44","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\InputModeModal\\InputModeModal.js":"45","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\pages\\LanguageModal\\LanguageModal.js":"46","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\RadialInput\\RadialInput.js":"47","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\TextInput\\TextInput.js":"48","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\InstallConfigTopLayout\\InstallConfigTopLayout.js":"49","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\GoodBadModal\\GoodBadModal.js":"50","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\TimeLoggerLayout\\TimeLoggerLayout.js":"51","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\AssemblyStation137Layout\\AssemblyStation137Layout.js":"52","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\QualityLayout\\QualityLayout.js":"53","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\PaintStationLayout\\PaintStationLayout.js":"54","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\AssemblyStation136Layout\\AssemblyStation136Layout.js":"55","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\CleaningStationLayout\\CleaningStationLayout.js":"56","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\BlastStationLayout\\BlastStationLayout.js":"57","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\AssemblyStation3Layout\\AssemblyStation3Layout.js":"58","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingsTopLayout\\SettingsTopLayout.js":"59","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingsServerInfoLayout\\SettingsServerInfoLayout.js":"60","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingsInCycleSignalFromLayout\\SettingsInCycleSignalFromLayout.js":"61","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingsAppInfoLayout\\SettingsAppInfoLayout.js":"62","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingTempDataSourceLayout\\SettingTempDataSourceLayout.js":"63","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingGanttChartLayout\\SettingGanttChartLayout.js":"64","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingProcessMonitorLayout\\SettingProcessMonitorLayout.js":"65","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingTimeLayout\\SettingTimeLayout.js":"66","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingDowntimeLayout\\SettingDowntimeLayout.js":"67","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingAuxDataLayout\\SettingAuxDataLayout.js":"68","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingCycleStopAlertLayout\\SettingCycleStopAlertLayout.js":"69","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingShiftTimeLayout\\SettingShiftTimeLayout.js":"70","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\MaintenanceTopLayout\\MaintenanceTopLayout.js":"71","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingCSLockLayout\\SettingCSLockLayout.js":"72","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingAutomaticCounterLayout\\SettingAutomaticCounterLayout.js":"73","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingMachineInfoLayout\\SettingMachineInfoLayout.js":"74","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingMachineInfoLayout\\AccountIDModal\\AccountIDModal.js":"75","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingGanttChartLayout\\SettingGanttChartCalcLayout\\SettingGanttChartCalcLayout.js":"76","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\TankTimeWidget\\TankTimeWidget.js":"77","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\TextInputGroup\\TextInputGroup.js":"78","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\RadialInputGroup\\RadialInputGroup.js":"79","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\SliderInput\\SliderInput.js":"80","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\CycleAlertInfo\\CycleAlertInfoModal.js":"81","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\OptionInput\\OptionInput.js":"82","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\TextInputArrayModal\\TextInputArrayModal.js":"83","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\PartIDModal\\PartIDModal.js":"84","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\PartIDInputLayout\\PartIDInputLayout.js":"85","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\CurrentPartProcessingTimeWidget\\CurrentPartProcessingTimeWidget.js":"86","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\UsageWidget\\UsageWidget.js":"87","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\CurrentPartNotesWidget\\CurrentPartNotesWidget.js":"88","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\AmbientPaintWidget\\AmbientPaintWidget.js":"89","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\RejectReasonsModal\\RejectReasonsModal.js":"90","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\RecordPhosphateTestInfoModal\\RecordPhosphateTestInfoModal.js":"91","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\redux\\reducers\\factoryReducer.js":"92","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\redux\\actions\\factoryActions.js":"93","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\pages\\MachineStatus\\MachineStatus.js":"94","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\MachineStatusButton\\MachineStatusButton.js":"95"},{"size":214,"mtime":1686953132601,"results":"96","hashOfConfig":"97"},{"size":1335,"mtime":1686939764424,"results":"98","hashOfConfig":"97"},{"size":913,"mtime":1626497555686,"results":"99","hashOfConfig":"97"},{"size":2358,"mtime":1686948770409,"results":"100","hashOfConfig":"97"},{"size":1169,"mtime":1690223864097,"results":"101","hashOfConfig":"97"},{"size":803,"mtime":1620420662309,"results":"102","hashOfConfig":"97"},{"size":538,"mtime":1689958674683,"results":"103","hashOfConfig":"97"},{"size":692,"mtime":1686949880550,"results":"104","hashOfConfig":"97"},{"size":302,"mtime":1686692424755,"results":"105","hashOfConfig":"97"},{"size":301,"mtime":1682663627628,"results":"106","hashOfConfig":"97"},{"size":11756,"mtime":1689971742715,"results":"107","hashOfConfig":"97"},{"size":4253,"mtime":1686949840908,"results":"108","hashOfConfig":"97"},{"size":366,"mtime":1689886422113,"results":"109","hashOfConfig":"97"},{"size":811,"mtime":1689878134799,"results":"110","hashOfConfig":"97"},{"size":1917,"mtime":1689964462322,"results":"111","hashOfConfig":"97"},{"size":2442,"mtime":1690223888962,"results":"112","hashOfConfig":"97"},{"size":23431,"mtime":1690223856272,"results":"113","hashOfConfig":"97"},{"size":1160,"mtime":1690192183556,"results":"114","hashOfConfig":"97"},{"size":374,"mtime":1689842434379,"results":"115","hashOfConfig":"97"},{"size":531,"mtime":1686946743222,"results":"116","hashOfConfig":"97"},{"size":7271,"mtime":1690021631219,"results":"117","hashOfConfig":"97"},{"size":1697,"mtime":1686947052601,"results":"118","hashOfConfig":"97"},{"size":7727,"mtime":1686947472864,"results":"119","hashOfConfig":"97"},{"size":498,"mtime":1686947786289,"results":"120","hashOfConfig":"97"},{"size":3328,"mtime":1689887829412,"results":"121","hashOfConfig":"97"},{"size":3260,"mtime":1689964919943,"results":"122","hashOfConfig":"97"},{"size":916,"mtime":1682703292021,"results":"123","hashOfConfig":"97"},{"size":444,"mtime":1623881665142,"results":"124","hashOfConfig":"97"},{"size":865,"mtime":1682704341015,"results":"125","hashOfConfig":"97"},{"size":3581,"mtime":1690231689525,"results":"126","hashOfConfig":"97"},{"size":3255,"mtime":1689973182348,"results":"127","hashOfConfig":"97"},{"size":3875,"mtime":1687201642730,"results":"128","hashOfConfig":"97"},{"size":965,"mtime":1686948238273,"results":"129","hashOfConfig":"97"},{"size":3468,"mtime":1686947690544,"results":"130","hashOfConfig":"97"},{"size":5584,"mtime":1689963753939,"results":"131","hashOfConfig":"97"},{"size":1271,"mtime":1686947882216,"results":"132","hashOfConfig":"97"},{"size":921,"mtime":1682991837577,"results":"133","hashOfConfig":"97"},{"size":712,"mtime":1686948207689,"results":"134","hashOfConfig":"97"},{"size":2174,"mtime":1687204822467,"results":"135","hashOfConfig":"97"},{"size":2554,"mtime":1687160230353,"results":"136","hashOfConfig":"97"},{"size":1832,"mtime":1686948106801,"results":"137","hashOfConfig":"97"},{"size":3005,"mtime":1687160246049,"results":"138","hashOfConfig":"97"},{"size":1520,"mtime":1683064197588,"results":"139","hashOfConfig":"97"},{"size":42036,"mtime":1686946787777,"results":"140","hashOfConfig":"97"},{"size":3251,"mtime":1686947799561,"results":"141","hashOfConfig":"97"},{"size":1212,"mtime":1686947370758,"results":"142","hashOfConfig":"97"},{"size":493,"mtime":1686946743955,"results":"143","hashOfConfig":"97"},{"size":1184,"mtime":1686948249688,"results":"144","hashOfConfig":"97"},{"size":1436,"mtime":1686948587245,"results":"145","hashOfConfig":"97"},{"size":2587,"mtime":1687895747240,"results":"146","hashOfConfig":"97"},{"size":14083,"mtime":1689971735236,"results":"147","hashOfConfig":"97"},{"size":12536,"mtime":1689974640812,"results":"148","hashOfConfig":"97"},{"size":10400,"mtime":1689976742108,"results":"149","hashOfConfig":"97"},{"size":10806,"mtime":1689975292467,"results":"150","hashOfConfig":"97"},{"size":16333,"mtime":1689975830159,"results":"151","hashOfConfig":"97"},{"size":7115,"mtime":1689971379727,"results":"152","hashOfConfig":"97"},{"size":7750,"mtime":1689975304952,"results":"153","hashOfConfig":"97"},{"size":9863,"mtime":1689975910117,"results":"154","hashOfConfig":"97"},{"size":1285,"mtime":1686948744209,"results":"155","hashOfConfig":"97"},{"size":1353,"mtime":1686947926217,"results":"156","hashOfConfig":"97"},{"size":1349,"mtime":1689872766407,"results":"157","hashOfConfig":"97"},{"size":1062,"mtime":1686947856112,"results":"158","hashOfConfig":"97"},{"size":1925,"mtime":1689873247053,"results":"159","hashOfConfig":"97"},{"size":1691,"mtime":1689930310059,"results":"160","hashOfConfig":"97"},{"size":1882,"mtime":1689872617593,"results":"161","hashOfConfig":"97"},{"size":2569,"mtime":1689925820601,"results":"162","hashOfConfig":"97"},{"size":1807,"mtime":1689873679968,"results":"163","hashOfConfig":"97"},{"size":1317,"mtime":1689890106716,"results":"164","hashOfConfig":"97"},{"size":4417,"mtime":1689895985165,"results":"165","hashOfConfig":"97"},{"size":2620,"mtime":1689895389704,"results":"166","hashOfConfig":"97"},{"size":1404,"mtime":1686948597671,"results":"167","hashOfConfig":"97"},{"size":1848,"mtime":1689889480074,"results":"168","hashOfConfig":"97"},{"size":2074,"mtime":1689928912855,"results":"169","hashOfConfig":"97"},{"size":2966,"mtime":1689964126081,"results":"170","hashOfConfig":"97"},{"size":3393,"mtime":1689963409306,"results":"171","hashOfConfig":"97"},{"size":3344,"mtime":1689962789167,"results":"172","hashOfConfig":"97"},{"size":1260,"mtime":1688071237201,"results":"173","hashOfConfig":"97"},{"size":1519,"mtime":1689928837247,"results":"174","hashOfConfig":"97"},{"size":644,"mtime":1686946743828,"results":"175","hashOfConfig":"97"},{"size":707,"mtime":1689900780869,"results":"176","hashOfConfig":"97"},{"size":2710,"mtime":1686947887825,"results":"177","hashOfConfig":"97"},{"size":955,"mtime":1683222518385,"results":"178","hashOfConfig":"97"},{"size":3173,"mtime":1689974226140,"results":"179","hashOfConfig":"97"},{"size":2397,"mtime":1686947843794,"results":"180","hashOfConfig":"97"},{"size":1225,"mtime":1687167378821,"results":"181","hashOfConfig":"97"},{"size":1117,"mtime":1687249253559,"results":"182","hashOfConfig":"97"},{"size":1961,"mtime":1689972554362,"results":"183","hashOfConfig":"97"},{"size":657,"mtime":1687206292411,"results":"184","hashOfConfig":"97"},{"size":1054,"mtime":1686946959393,"results":"185","hashOfConfig":"97"},{"size":2622,"mtime":1687380842239,"results":"186","hashOfConfig":"97"},{"size":7663,"mtime":1689963509075,"results":"187","hashOfConfig":"97"},{"size":604,"mtime":1689963375840,"results":"188","hashOfConfig":"97"},{"size":169,"mtime":1689963322352,"results":"189","hashOfConfig":"97"},{"size":4915,"mtime":1690015084104,"results":"190","hashOfConfig":"97"},{"size":1452,"mtime":1686779988948,"results":"191","hashOfConfig":"97"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},"q7b0fw",{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"194"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"194"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"194"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"194"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"194"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"194"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"194"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"194"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"194"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"194"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"194"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"194"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"194"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"194"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"194"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"194"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"194"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"194"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"194"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"194"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"194"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"194"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"194"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"194"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"194"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"194"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"194"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"194"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"194"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"194"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"194"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"194"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"194"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"194"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"194"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"194"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"194"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"194"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"194"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"194"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"194"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"194"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"194"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"194"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"194"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"194"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"194"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"194"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"194"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"194"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"194"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":1,"source":"432","usedDeprecatedRules":"194"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"194"},"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\index.js",[],["436","437"],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\App.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\redux\\store.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\navigation\\RouterConfig.js",["438"],"import {\r\n  ROOT,\r\n  ROUTE_LOGIN\r\n} from \"navigation/CONSTANTS\";\r\nimport { NotFound } from \"pages/NotFound\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport { setAppDataStore } from \"redux/actions/appActions\";\r\n\r\nimport { Spin } from \"antd\";\r\nimport MainLayout from \"layouts/MainLayout/MainLayout\";\r\nimport LoginPage from \"pages/LoginPage/LoginPage\";\r\nimport { appData } from \"services/global\";\r\n// // import LoginPage from \"pages/LoginPage/LoginPage\";\r\n// const LoginPage = React.lazy(() => import(\"pages/LoginPage/LoginPage\"));\r\n\r\nexport const RouterConfig = () => {\r\n  const screenSize = useWindowSize();\r\n  const dispatch = useDispatch();\r\n  const { isSpinning } = useSelector((x) => x.appDataStore);\r\n\r\n  useEffect(() => {\r\n    if (screenSize === undefined || screenSize.width === undefined) return;\r\n    appData.width = screenSize.width;\r\n    appData.height = screenSize.height;\r\n    dispatch(setAppDataStore(appData));\r\n  }, [screenSize]);\r\n\r\n  return (\r\n    <Spin size={\"large\"} spinning={isSpinning}>\r\n      <Switch>\r\n        <Route exact path={ROOT} component={MainLayout} />\r\n        <Route exact path={ROUTE_LOGIN} component={LoginPage} />\r\n        {/* List a generic 404-Not Found route here */}\r\n        <Route path=\"*\" component={NotFound} />\r\n      </Switch>\r\n    </Spin>\r\n  );\r\n};\r\n\r\nfunction useWindowSize() {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n    function handleResize() {\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n\r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize();\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n\r\n  return windowSize;\r\n}\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\utils\\dropConsole.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\navigation\\ProvideAuth.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\redux\\reducers\\index.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\navigation\\useProvideAuth.js",["439"],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport { apiCallForLogin } from \"services/apiCall\";\r\n\r\nexport function useProvideAuth() {\r\n  const { userData } = useSelector((x) => x.userDataStore);\r\n  const dispatch = useDispatch();\r\n  // signin method: It can either return a promise or execute a callback function.\r\n  // You can prefer to keep this in userServices.js\r\n  const signin = (userDetail) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiCallForLogin(userDetail)\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n        });\r\n    });\r\n  };\r\n\r\n  return {\r\n    userData,\r\n    signin,\r\n  };\r\n}\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\navigation\\CONSTANTS.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\pages\\NotFound.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\services\\global.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\pages\\LoginPage\\LoginPage.js",["440"],"// @flow strict\r\n\r\nimport { Col, Row, message } from \"antd\";\r\nimport { ROOT } from \"navigation/CONSTANTS\";\r\nimport { useAuth } from \"navigation/ProvideAuth\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setFromUrl } from \"redux/actions/userActions\";\r\nimport \"./LoginPage.css\";\r\n\r\nimport NormalButton from \"components/ButtonWidgets/NormalButton/NormalButton\";\r\nimport InputNormal from \"components/InputWidgets/InputNormal/InputNormal\";\r\nimport InputPassword from \"components/InputWidgets/InputPassword/InputPassword\";\r\nimport { setUserDataStore } from \"redux/actions/userActions\";\r\nimport { logoUrl } from \"services/CONSTANTS\";\r\nimport { setUserData, userData, validatePassword } from \"services/global\";\r\n\r\nfunction LoginPage(props) {\r\n  const history = useHistory();\r\n  const auth = useAuth();\r\n  const dispatch = useDispatch();\r\n  const [isBusy, setIsBusy] = useState(false);\r\n  const { userDataStore } = useSelector((x) => x.userDataStore);\r\n  const [userDetail, setUserDetail] = useState({\r\n    name: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [wrongList, setWrongList] = useState([]);\r\n\r\n  const validateFields = () => {\r\n    const { name, password } = userDetail;\r\n    let tmpWrongList = [];\r\n    if (name === undefined || name === \"\") {\r\n      tmpWrongList.push(\"name\");\r\n    }\r\n    if (validatePassword(password) === false) tmpWrongList.push(\"password\");\r\n    setWrongList(tmpWrongList);\r\n    return tmpWrongList.length === 0;\r\n  };\r\n\r\n  const onClickNext = () => {\r\n    if (validateFields() === false) {\r\n      return;\r\n    }\r\n    onClickLogin();\r\n  };\r\n\r\n  useEffect(() => {\r\n    userData.name = \"\";\r\n    userData.photo = \"\";\r\n    dispatch(setUserDataStore(userData));\r\n  }, []);\r\n\r\n  const onClickLogin = () => {\r\n    setIsBusy(true);\r\n    auth\r\n      .signin(userDetail)\r\n      .then((res) => {\r\n        const { status } = res;\r\n        if (status === undefined || status === false) {\r\n          setIsBusy(false);\r\n          message.error(\"Login Fail\");\r\n        } else {\r\n          setIsBusy(false);\r\n          onSuccessLogin(res);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsBusy(false);\r\n        message.error(\"Login Fail\");\r\n      });\r\n\r\n    setIsBusy(false);\r\n    onSuccessLogin(userDetail);\r\n  };\r\n\r\n  const onSuccessLogin = (info) => {\r\n    if (info.name === undefined || info.password === undefined) {\r\n      return;\r\n    }\r\n    setUserData(info);\r\n    dispatch(setUserDataStore(userData));\r\n    const fromUrl = userDataStore.fromUrl;\r\n    setTimeout(() => {\r\n      if (fromUrl === undefined || fromUrl.pathname === undefined) {\r\n        history.replace(ROOT);\r\n      } else {\r\n        dispatch(setFromUrl(undefined));\r\n        history.replace(fromUrl.pathname);\r\n      }\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <Row className=\"auth-dialog-row\">\r\n        <Col className=\"auth-dialog-widget\">\r\n          <div>\r\n            <div className=\"auth-logo-container\">\r\n              <img className=\"auth-logo\" src={logoUrl} alt=\"logo\" />\r\n            </div>\r\n            <div style={{ marginTop: 40 }}>\r\n              <InputNormal\r\n                userDetail={userDetail}\r\n                setUserDetail={setUserDetail}\r\n                placeholder=\"Enter Name\"\r\n                field=\"name\"\r\n                title=\"Username\"\r\n                wrongList={wrongList}\r\n                setWrongList={setWrongList}\r\n              />\r\n            </div>\r\n            <div style={{ marginTop: 20 }}>\r\n              <InputPassword\r\n                userDetail={userDetail}\r\n                setUserDetail={setUserDetail}\r\n                wrongList={wrongList}\r\n                setWrongList={setWrongList}\r\n                onPressEnter={onClickNext}\r\n              />\r\n            </div>\r\n            <div style={{ marginTop: 30 }}>\r\n              <NormalButton\r\n                style={{ backgroundColor: \"var(--blueColor)\" }}\r\n                onClick={onClickNext}\r\n                isBusy={isBusy}\r\n              >\r\n                Login\r\n              </NormalButton>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\redux\\actions\\appActions.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\redux\\reducers\\userReducer.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\redux\\reducers\\appReducer.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\MainLayout\\MainLayout.js",["441"],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\services\\apiCall.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\services\\CONSTANTS.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\redux\\actions\\userActions.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\pages\\Maintenance\\Maintenance.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\pages\\Settings\\Settings.js",["442","443"],"// @flow strict\r\n\r\nimport { Col, Row, message } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./Settings.css\";\r\n\r\nimport SettingAutomaticCounterLayout from \"layouts/SettingAutomaticCounterLayout/SettingAutomaticCounterLayout\";\r\nimport SettingAuxDataLayout from \"layouts/SettingAuxDataLayout/SettingAuxDataLayout\";\r\nimport SettingCSLockLayout from \"layouts/SettingCSLockLayout/SettingCSLockLayout\";\r\nimport SettingCycleStopAlertLayout from \"layouts/SettingCycleStopAlertLayout/SettingCycleStopAlertLayout\";\r\nimport SettingDowntimeLayout from \"layouts/SettingDowntimeLayout/SettingDowntimeLayout\";\r\nimport SettingGanttChartLayout from \"layouts/SettingGanttChartLayout/SettingGanttChartLayout\";\r\nimport SettingMachineInfoLayout from \"layouts/SettingMachineInfoLayout/SettingMachineInfoLayout\";\r\nimport SettingProcessMonitorLayout from \"layouts/SettingProcessMonitorLayout/SettingProcessMonitorLayout\";\r\nimport SettingShiftTimeLayout from \"layouts/SettingShiftTimeLayout/SettingShiftTimeLayout\";\r\nimport SettingTempDataSourceLayout from \"layouts/SettingTempDataSourceLayout/SettingTempDataSourceLayout\";\r\nimport SettingTimeLayout from \"layouts/SettingTimeLayout/SettingTimeLayout\";\r\nimport SettingsAppInfoLayout from \"layouts/SettingsAppInfoLayout/SettingsAppInfoLayout\";\r\nimport SettingsInCycleSignalFromLayout from \"layouts/SettingsInCycleSignalFromLayout/SettingsInCycleSignalFromLayout\";\r\nimport SettingsServerInfoLayout from \"layouts/SettingsServerInfoLayout/SettingsServerInfoLayout\";\r\nimport SettingsTopLayout from \"layouts/SettingsTopLayout/SettingsTopLayout\";\r\nimport { setAppDataStore } from \"redux/actions/appActions\";\r\nimport { LS_ITEMS } from \"services/CONSTANTS\";\r\nimport { appData, isValidTime, setAppData } from \"services/global\";\r\nimport settingsIcon from \"../../assets/icons/ic_settings.png\";\r\n\r\nfunction Settings(props) {\r\n  const dispatch = useDispatch();\r\n  const { appDataStore } = useSelector((x) => x.appDataStore);\r\n  const { pages } = appDataStore;\r\n\r\n  const [appSetting, setAppSetting] = useState({ ...appDataStore });\r\n\r\n  useEffect(() => {\r\n    setAppSetting({ ...appDataStore });\r\n    console.log(\"appData=>\", appData);\r\n    console.log(\"appDataStore=>\", appDataStore);\r\n  }, [\r\n    appDataStore.machineName,\r\n    appDataStore.downtime_reason1,\r\n    appDataStore.downtime_reason2,\r\n    appDataStore.downtime_reason3,\r\n    appDataStore.downtime_reason4,\r\n    appDataStore.downtime_reason5,\r\n    appDataStore.downtime_reason6,\r\n    appDataStore.downtime_reason7,\r\n    appDataStore.downtime_reason8,\r\n\r\n    appDataStore.cslock_cycle,\r\n    appDataStore.cslock_reverse,\r\n    appDataStore.cslock_guest,\r\n    appDataStore.cslock_alert,\r\n\r\n    appDataStore.time_stop,\r\n    appDataStore.time_production,\r\n\r\n    appDataStore.cycle_send_alert,\r\n    appDataStore.cycle_email1,\r\n    appDataStore.cycle_email2,\r\n    appDataStore.cycle_email3,\r\n\r\n    appDataStore.automatic_part,\r\n    appDataStore.automatic_min_time,\r\n    appDataStore.automatic_part_per_cycle,\r\n\r\n    appDataStore.gantt_chart_display,\r\n    appDataStore.calc_chart_title,\r\n    appDataStore.calc_chart_formula,\r\n    appDataStore.calc_chart_option,\r\n    appDataStore.calc_chart_unit,\r\n    appDataStore.calc_chart_disp_mode,\r\n    appDataStore.calc_chart_max_value,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    //console.log(\"appData=>\", appData);\r\n    //console.log(\"appSettingFromChildSettings=>\", appSetting);\r\n  }, [appSetting]);\r\n\r\n  const onClickSave = () => {\r\n    // Check Time Settings Input\r\n    if (\r\n      !isValidTime(appSetting.time_stop) ||\r\n      !isValidTime(appSetting.time_production)\r\n    ) {\r\n      message.error(\"Please input valid time format.\");\r\n      return;\r\n    }\r\n\r\n    // Check Shift PPT Settings Input\r\n    if (appSetting.shift1_ppt === \"\" && !isValidTime(appSetting.shift1_ppt)) {\r\n      message.error(\"Please input valid time format.\");\r\n      return;\r\n    }\r\n    if (appSetting.shift2_ppt === \"\" && !isValidTime(appSetting.shift2_ppt)) {\r\n      message.error(\"Please input valid time format.\");\r\n      return;\r\n    }\r\n    if (appSetting.shift3_ppt === \"\" && !isValidTime(appSetting.shift3_ppt)) {\r\n      message.error(\"Please input valid time format.\");\r\n      return;\r\n    }\r\n\r\n    // Check Automatic Part Counter Settings Input\r\n    let autoPartPertCycle = parseInt(appSetting.automatic_part_per_cycle);\r\n    if (isNaN(autoPartPertCycle) || autoPartPertCycle <= 0) {\r\n      message.error(\"Please input valid auto part counter per cycle.\");\r\n      return;\r\n    }\r\n\r\n    let newPages = [...appData.pages];\r\n    newPages.splice(-1);\r\n\r\n    let newSettings = { ...appData, ...appSetting };\r\n    newSettings.pages = newPages;\r\n\r\n    console.log(\"-------------------------------\");\r\n    console.log(\"appData=>\", { ...appData });\r\n    console.log(\"appSetting=>\", appSetting);\r\n    console.log(\"appNewSetting=>\", newSettings);\r\n\r\n    setAppData(newSettings);\r\n    dispatch(setAppDataStore(appData));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        pages[pages.length - 1] === 2 ? \"settings-page\" : \"display-none\"\r\n      }\r\n    >\r\n      <SettingsTopLayout />\r\n      <div className=\"settings-content\">\r\n        <SettingsAppInfoLayout />\r\n        <SettingsServerInfoLayout />\r\n        <SettingsInCycleSignalFromLayout\r\n          appSetting={appSetting}\r\n          setAppSetting={setAppSetting}\r\n        />\r\n        <SettingProcessMonitorLayout\r\n          appSetting={appSetting}\r\n          setAppSetting={setAppSetting}\r\n        />\r\n        <SettingTempDataSourceLayout\r\n          appSetting={appSetting}\r\n          setAppSetting={setAppSetting}\r\n        />\r\n        <SettingMachineInfoLayout\r\n          appSetting={appSetting}\r\n          setAppSetting={setAppSetting}\r\n        />\r\n        <SettingDowntimeLayout\r\n          appSetting={appSetting}\r\n          setAppSetting={setAppSetting}\r\n        />\r\n        <SettingAuxDataLayout\r\n          appSetting={appSetting}\r\n          setAppSetting={setAppSetting}\r\n        />\r\n        <SettingCSLockLayout\r\n          appSetting={appSetting}\r\n          setAppSetting={setAppSetting}\r\n        />\r\n        <SettingTimeLayout\r\n          appSetting={appSetting}\r\n          setAppSetting={setAppSetting}\r\n        />\r\n        <SettingShiftTimeLayout\r\n          appSetting={appSetting}\r\n          setAppSetting={setAppSetting}\r\n        />\r\n        <SettingCycleStopAlertLayout\r\n          appSetting={appSetting}\r\n          setAppSetting={setAppSetting}\r\n        />\r\n        <SettingAutomaticCounterLayout\r\n          appSetting={appSetting}\r\n          setAppSetting={setAppSetting}\r\n        />\r\n        <SettingGanttChartLayout\r\n          appSetting={appSetting}\r\n          setAppSetting={setAppSetting}\r\n        />\r\n      </div>\r\n      <Row\r\n        align={\"middle\"}\r\n        className=\"settings-save-button\"\r\n        onClick={onClickSave}\r\n      >\r\n        <Col span={4} style={{ textAlign: \"left\" }}>\r\n          <img\r\n            className=\"settings-save-button-icon\"\r\n            src={settingsIcon}\r\n            alt=\"settings\"\r\n          />\r\n        </Col>\r\n        <Col span={16} style={{ textAlign: \"center\" }}>\r\n          {\"Save Settings\"}\r\n        </Col>\r\n        <Col span={4}></Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\pages\\ProcessMonitor\\ProcessMonitor.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\pages\\InstallConfig\\InstallConfig.js",["444"],"// @flow strict\r\n\r\nimport { Col, Row } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport \"./InstallConfig.css\";\r\n\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport RadialInput from \"components/RadialInput/RadialInput\";\r\nimport TextInput from \"components/TextInput/TextInput\";\r\nimport InstallConfigTopLayout from \"layouts/InstallConfigTopLayout/InstallConfigTopLayout\";\r\nimport { useSelector } from \"react-redux\";\r\nimport machinenNameIcon from \"../../assets/icons/ic_machine_name.png\";\r\nimport installConfigIncon from \"../../assets/icons/ic_menu_install.png\";\r\n\r\nfunction InstallConfig(props) {\r\n  const { appDataStore } = useSelector((x) => x.appDataStore);\r\n  const { pages } = appDataStore;\r\n\r\n  const [machineName, setMachineName] = useState(\"\");\r\n  const [serialNumber, setSerialNumber] = useState(\"\");\r\n  const [inCycleSignal, setInCycleSignal] = useState(\"\");\r\n  const [cycleStartInterlock, setCycleStartInterlock] = useState(\"\");\r\n  const [cycleStartOnOff, setCycleStartOnOff] = useState(0);\r\n  const [cycleStartCloseOpen, setCycleStartCloseOpen] = useState(0);\r\n  const [pics, setPics] = useState([\r\n    \"https://slymms.com/backend/images/photo/20230419123228_20230112163511_20221028111250_20191207233715Visser Logo.jpg\",\r\n    \"https://slymms.com/backend/images/photo/20230419123228_20230112163511_20221028111250_20191207233715Visser Logo.jpg\",\r\n    \"https://slymms.com/backend/images/photo/20230419123228_20230112163511_20221028111250_20191207233715Visser Logo.jpg\",\r\n    \"https://slymms.com/backend/images/photo/20230419123228_20230112163511_20221028111250_20191207233715Visser Logo.jpg\",\r\n    \"https://slymms.com/backend/images/photo/20230419123228_20230112163511_20221028111250_20191207233715Visser Logo.jpg\",\r\n    \"https://slymms.com/backend/images/photo/20230419123228_20230112163511_20221028111250_20191207233715Visser Logo.jpg\",\r\n    \"https://slymms.com/backend/images/photo/20230419123228_20230112163511_20221028111250_20191207233715Visser Logo.jpg\",\r\n    \"https://slymms.com/backend/images/photo/20230419123228_20230112163511_20221028111250_20191207233715Visser Logo.jpg\",\r\n    \"https://slymms.com/backend/images/photo/20230419123228_20230112163511_20221028111250_20191207233715Visser Logo.jpg\",\r\n    \"https://slymms.com/backend/images/photo/20230419123228_20230112163511_20221028111250_20191207233715Visser Logo.jpg\",\r\n  ]);\r\n\r\n  const onClickSave = () => {\r\n    \r\n  };\r\n\r\n  const onDropImage = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    var formData = new FormData();\r\n    formData.append(\"file\", files[0]);\r\n    // postRequest(Urls.UPLOAD_USER_IMAGE, formData, (response) => {\r\n    //   if (response.status === true) {\r\n    //     setImageUrl(response.url);\r\n    //     updateImage(response.url);\r\n    //   } else {\r\n    //     message.error(lang(langIndex, \"msg_something_wrong\"));\r\n    //   }\r\n    // });\r\n  };\r\n\r\n  const imagesUI = pics.map((pic, index) => {\r\n    return (\r\n      <img\r\n        className=\"install-config-pic\"\r\n        src={pic}\r\n        key={\"key-\" + index}\r\n        alt={\"key-\" + index}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        pages[pages.length - 1] === 3 ? \"install-config-page\" : \"display-none\"\r\n      }\r\n    >\r\n      <InstallConfigTopLayout />\r\n      <div className=\"install-config-content\">\r\n        <Row>\r\n          <Col span={12} className=\"install-config-grad-background\">\r\n            <div>\r\n              <TextInput\r\n                title={\"Machine Name\"}\r\n                value={machineName}\r\n                setValue={setMachineName}\r\n              />\r\n              <img\r\n                src={machinenNameIcon}\r\n                className=\"install-config-machine-info-icon\"\r\n                alt=\"machine-name\"\r\n              />\r\n            </div>\r\n          </Col>\r\n\r\n          <Col span={12} className=\"install-config-grad-background\">\r\n            <div>\r\n              <TextInput\r\n                title={\"Serial Number\"}\r\n                value={serialNumber}\r\n                setValue={setSerialNumber}\r\n              />\r\n              <img\r\n                src={machinenNameIcon}\r\n                className=\"install-config-machine-info-icon\"\r\n                alt=\"machine-info\"\r\n              />\r\n            </div>\r\n          </Col>\r\n\r\n          <Col span={24} className=\"install-config-grad-background\">\r\n            <div className=\"install-config-title\">{\"Cyle Settings\"}</div>\r\n            <Row>\r\n              <Col span={8}>\r\n                <div className=\"install-config-incyle-signal\">\r\n                  {\"In Cyle Signal\"}\r\n                </div>\r\n                <TextArea\r\n                  className=\"install-config-textarea\"\r\n                  rows={4}\r\n                  max\r\n                  value={inCycleSignal}\r\n                  onChange={(e) => {\r\n                    setInCycleSignal(e.target.value);\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col\r\n                span={8}\r\n                style={{ paddingRight: \"20px\", paddingLeft: \"20px\" }}\r\n              >\r\n                <div className=\"install-config-incyle-signal\">\r\n                  {\"Cyle Start Interlock\"}\r\n                </div>\r\n                <RadialInput\r\n                  value={cycleStartOnOff}\r\n                  title=\"On/Off\"\r\n                  setValue={setCycleStartOnOff}\r\n                />\r\n                <RadialInput\r\n                  value={cycleStartCloseOpen}\r\n                  title=\"Normally Closed/Open\"\r\n                  setValue={setCycleStartCloseOpen}\r\n                />\r\n              </Col>\r\n              <Col span={8}>\r\n                <div className=\"install-config-incyle-signal\">\r\n                  {\"Cyle Start Interlock Interface\"}\r\n                </div>\r\n                <TextArea\r\n                  className=\"install-config-textarea\"\r\n                  rows={4}\r\n                  max\r\n                  value={cycleStartInterlock}\r\n                  onChange={(e) => {\r\n                    setCycleStartInterlock(e.target.value);\r\n                  }}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          <Col span={24}>\r\n            <Row\r\n              align={\"middle\"}\r\n              className=\"install-config-save-button\"\r\n              onClick={onClickSave}\r\n            >\r\n              <Col span={4} style={{ textAlign: \"left\" }}>\r\n                <img\r\n                  className=\"install-config-save-button-icon\"\r\n                  src={installConfigIncon}\r\n                  alt=\"save\"\r\n                />\r\n              </Col>\r\n              <Col span={16} style={{ textAlign: \"center\" }}>\r\n                {\"Save Configuration\"}\r\n              </Col>\r\n              <Col span={4}></Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          <Col span={24} className=\"install-config-grad-background\">\r\n            <div className=\"install-config-title\">{\"Pictures\"}</div>\r\n            <div className=\"install-config-images-container\">\r\n              <label\r\n                className=\"install-config-image-picker\"\r\n                htmlFor=\"upload_customer_image\"\r\n              >\r\n                {\"+\"}\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"upload_customer_image\"\r\n                  name=\"upload_customer_image\"\r\n                  style={{ display: \"none\" }}\r\n                  accept=\"image/x-png,image/gif,image/jpeg\"\r\n                  onChange={onDropImage}\r\n                />\r\n              </label>\r\n              <div className=\"install-config-images\">\r\n                <div>{imagesUI}</div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InstallConfig;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\ContentLayout\\ContentLayout.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\pages\\Dashboard\\Dashboard.js",["445"],"// @flow strict\r\n\r\nimport { Col, Row, message } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./Dashboard.css\";\r\n\r\nimport GoodBadModal from \"components/GoodBadModal/GoodBadModal\";\r\nimport GoodBadWidget from \"components/GoodBadWidget/GoodBadWidget\";\r\nimport IndicatorDots from \"components/IndicatorDots\";\r\nimport DashboardChartLayout from \"layouts/DashboardChartLayout/DashboardChartLayout\";\r\nimport DashboardMachineInfoLayout from \"layouts/DashboardMachineInfoLayout/DashboardMachineInfoLayout\";\r\nimport DashboardOEELayout from \"layouts/DashboardOEELayout/DashboardOEELayout\";\r\nimport DashboardUtilizationLayout from \"layouts/DashboardUtilizationLayout/DashboardUtilizationLayout\";\r\nimport UserInfoLayout from \"layouts/UserInfoLayout/UserInfoLayout\";\r\nimport Carousel from \"re-carousel\";\r\nimport { useEffect } from \"react\";\r\nimport { appData } from \"services/global\";\r\nimport { setAppDataStore } from \"redux/actions/appActions\";\r\n\r\nfunction Dashboard(props) {\r\n  const dispatch = useDispatch();\r\n  const { appDataStore } = useSelector((x) => x.appDataStore);\r\n  const { pages } = appDataStore;\r\n\r\n  const [goodParts, setGoodParts] = useState(\"0\");\r\n  const [badParts, setBadParts] = useState(\"0\");\r\n  const [showGoodBadModal, setShowGoodBadModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setGoodParts(appData.shiftGoodParts);\r\n    setBadParts(appData.shiftBadParts);\r\n  }, [appDataStore.shiftGoodParts, appDataStore.shiftBadParts]);\r\n\r\n  const updateGoodParts = (value) =>{\r\n    appData.shiftGoodParts = parseInt(value);\r\n    dispatch(setAppDataStore(appData));\r\n  }\r\n\r\n  const updateBadParts = (value) => {\r\n    appData.shiftBadParts = parseInt(value);\r\n    dispatch(setAppDataStore(appData));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        pages[pages.length - 1] === 0 ? \"dashboard-page\" : \"display-none\"\r\n      }\r\n    >\r\n      <GoodBadModal\r\n        goodParts={goodParts}\r\n        badParts={badParts}\r\n        setGoodParts={updateGoodParts}\r\n        setBadParts={updateBadParts}\r\n        showModal={showGoodBadModal}\r\n        setShowModal={setShowGoodBadModal}\r\n      />\r\n      <div className=\"dashboard-content-left\">\r\n        <UserInfoLayout />\r\n        <DashboardMachineInfoLayout />\r\n        <div className=\"dashboard-content-left-good-bad\">\r\n          <Row>\r\n            <Col span={12}>\r\n              <GoodBadWidget\r\n                type={0}\r\n                value={goodParts}\r\n                setValue={updateGoodParts}\r\n                setShowModal={setShowGoodBadModal}\r\n              />\r\n            </Col>\r\n            <Col span={12}>\r\n              <GoodBadWidget\r\n                type={1}\r\n                value={badParts}\r\n                setValue={updateBadParts}\r\n                setShowModal={setShowGoodBadModal}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n      <div className=\"dashboard-content-right\">\r\n        <Carousel auto widgets={[IndicatorDots]}>\r\n          <div style={{ height: \"100%\" }}>\r\n            <DashboardOEELayout />\r\n          </div>\r\n          <div style={{ height: \"100%\" }}>\r\n            <DashboardUtilizationLayout />\r\n          </div>\r\n        </Carousel>\r\n      </div>\r\n      <DashboardChartLayout />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\TopLayout\\TopLayout.js",["446","447","448","449","450","451"],"import { Col, Drawer, Row } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./TopLayout.css\";\r\n\r\nimport SidebarMenu from \"layouts/SidebarMenu/SidebarMenu\";\r\nimport menuIcon from \"../../assets/icons/ic_menu.png\";\r\n\r\nimport TextWithIcon from \"components/TextWithIcon/TextWithIcon\";\r\nimport { STATUS_COLORS } from \"services/CONSTANTS\";\r\nimport connectedIcon from \"../../assets/icons/ic_connected.png\";\r\nimport disconnectedIcon from \"../../assets/icons/ic_disconnected.png\";\r\n\r\nconst TopLayout = (props) => {\r\n  const { appDataStore } = useSelector((x) => x.appDataStore);\r\n  const { factoryDataStore } = useSelector((x) => x.factoryDataStore);\r\n\r\n  console.log(\"factoryDataStore=>\", factoryDataStore);\r\n\r\n  const { pages } = appDataStore;\r\n  const [visible, setVisible] = useState(false);\r\n  \r\n  const [plcConnected, setPlcConnected] = useState(false);\r\n  const [serverConnected, setServerConnected] = useState(true);\r\n\r\n  const [machine, setMachine] = useState(appDataStore.machineName);\r\n  const [status, setStatus] = useState(\"Clear Chips\");\r\n  const [statusColor, setStatusColor] = useState(\"#ffffff\");\r\n\r\n  useEffect(() => {\r\n    let cColor = STATUS_COLORS.find((item) => item[\"status\"] === status);\r\n    setStatusColor(cColor[\"color\"] === undefined ? \"#ffffff\" : cColor[\"color\"]);\r\n  }, [status]);\r\n\r\n  useEffect(() => {\r\n    setMachine(appDataStore.machineName)\r\n  }, [appDataStore.machineName]);\r\n\r\n  return (\r\n    <Row\r\n      align=\"middle\"\r\n      className={\r\n        pages[pages.length - 1] === 0 || pages[pages.length - 1] === 1\r\n          ? \"top-layout\"\r\n          : \"display-none\"\r\n      }\r\n    >\r\n      <Col span={6}>\r\n        <a className=\"top-layout-menu-button\" onClick={() => setVisible(true)}>\r\n          <img className=\"top-layout-menu-icon\" src={menuIcon} />\r\n        </a>\r\n        <Drawer\r\n          className=\"custom-drawer\"\r\n          placement=\"left\"\r\n          onClick={() => setVisible(false)}\r\n          onClose={() => setVisible(false)}\r\n          open={visible}\r\n        >\r\n          <SidebarMenu open={setVisible} />\r\n        </Drawer>\r\n        <div className=\"top-layout-machine-status\">\r\n          <span className=\"top-layout-machine\">{machine}</span>\r\n          <span className=\"top-layout-status\" style={{ color: statusColor }}>\r\n            {status}\r\n          </span>\r\n        </div>\r\n      </Col>\r\n      <Col span={12} style={{ textAlign: \"center\" }}>\r\n        {factoryDataStore.customer_details.logo !== undefined && (\r\n          <img className=\"top-logo\" src={factoryDataStore.customer_details.logo} />\r\n        )}\r\n      </Col>\r\n\r\n      <Col span={6} style={{ textAlign: \"right\" }}>\r\n        <TextWithIcon\r\n          text={plcConnected ? \"PLC Connnected\" : \"PLC Disconnected\"}\r\n          icon={plcConnected ? connectedIcon : disconnectedIcon}\r\n          marginLeft={\"5px\"}\r\n          iconBottom={\"1px\"}\r\n        />\r\n        <TextWithIcon\r\n          text={\r\n            serverConnected ? \"Connnected to Server\" : \"Disonnnected to Server\"\r\n          }\r\n          icon={serverConnected ? connectedIcon : disconnectedIcon}\r\n          marginLeft={\"5px\"}\r\n          iconBottom={\"1px\"}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default TopLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\InputWidgets\\InputNormal\\InputNormal.js",["452"],"// @flow strict\r\n\r\nimport { Input } from \"antd\";\r\nimport React from \"react\";\r\nimport \"./InputNormal.css\";\r\nfunction InputNormal(props) {\r\n  const { title, placeholder, field, userDetail, setUserDetail } = props;\r\n  const { wrongList, setWrongList } = props;\r\n  return (\r\n    <div className=\"input-normal\">\r\n      <h3 className=\"input-title\">{title}</h3>\r\n      <Input\r\n        placeholder={placeholder === undefined ? \"\" : placeholder}\r\n        value={userDetail[field] === undefined ? \"\" : userDetail[field]}\r\n        style={{\r\n          border:\r\n            wrongList.includes(field) === true\r\n              ? \"1px solid var(--redColor)\"\r\n              : \"1px solid var(--greyColor)\",\r\n        }}\r\n        onChange={(e) => {\r\n          let temp = userDetail;\r\n          temp[field] = e.target.value;\r\n          setUserDetail({ ...temp });\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputNormal;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\ButtonWidgets\\NormalButton\\NormalButton.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\InputWidgets\\InputPassword\\InputPassword.js",["453"],"// @flow strict\r\n\r\nimport { Input } from \"antd\";\r\nimport React from \"react\";\r\nimport \"./InputPassword.css\";\r\nfunction InputPassword(props) {\r\n  const { userDetail, setUserDetail, onPressEnter } = props;\r\n  const { wrongList, setWrongList } = props;\r\n  return (\r\n    <div className=\"input-password\">\r\n      <h3 className=\"input-title\">Password</h3>\r\n      <Input.Password\r\n        placeholder={\"Password\"}\r\n        value={userDetail.password === undefined ? \"\" : userDetail.password}\r\n        onChange={(e) =>\r\n          setUserDetail({ ...userDetail, password: e.target.value })\r\n        }\r\n        onPressEnter={onPressEnter}\r\n        className={\r\n          wrongList.includes(\"password\") === true\r\n            ? \"phone-input-password-wrong\"\r\n            : \"phone-input-password-correct\"\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputPassword;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\BottomLayout\\BottomLayout.js",["454","455","456","457"],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\UserInfoLayout\\UserInfoLayout.js",["458","459","460"],"import { Col, Row, message } from \"antd\";\r\nimport InputModeModal from \"layouts/InputModeModal/InputModeModal\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUserDataStore } from \"redux/actions/userActions\";\r\nimport { LS_ITEMS } from \"services/CONSTANTS\";\r\nimport accountIcon from \"../../assets/icons/ic_account.png\";\r\nimport logoutIcon from \"../../assets/icons/ic_logout_app.png\";\r\nimport qrCodeIcon from \"../../assets/icons/ic_qrcode_scan.png\";\r\nimport LoginIDModal from \"../LoginIDModal/LoginIDModal\";\r\nimport LogoutModal from \"../LogoutModal/LogoutModal\";\r\nimport \"./UserInfoLayout.css\";\r\nimport { setUserData, userData } from \"services/global\";\r\n\r\nconst UserInfoLayout = (props) => {\r\n  const dispatch = useDispatch();\r\n  const reduceUserData = useSelector((x) => x.userDataStore);\r\n  const { userDataStore, test } = useSelector((x) => x.userDataStore);\r\n  const [showLoginID, setShowLoginID] = useState(false);\r\n  const [showLogout, setShowLogout] = useState(false);\r\n  const [showInputMode, setShowInputMode] = useState(false);\r\n\r\n  const guestUser = {\r\n    id: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    username_full: \"UnAttended\",\r\n    user_picture: \"\",\r\n    security_level: \"\",\r\n    customer_id: \"\",\r\n  };\r\n\r\n  const onQrCode = () => {\r\n    setShowInputMode(true);\r\n  };\r\n\r\n  const onLogout = () => {\r\n    setUserData(guestUser);\r\n    dispatch(setUserDataStore(userData));\r\n    message.info(\"Logout Clicked\");\r\n  };\r\n\r\n  return (\r\n    <Row align=\"middle\" className=\"user-info-layout\">\r\n      <InputModeModal\r\n        title={\"Please Select Login Mode\"}\r\n        showModal={showInputMode}\r\n        setShowModal={setShowInputMode}\r\n        setShowInput={setShowLoginID}\r\n      />\r\n      <LoginIDModal showModal={showLoginID} setShowModal={setShowLoginID} />\r\n      <LogoutModal\r\n        showModal={showLogout}\r\n        setShowModal={setShowLogout}\r\n        onLogout={onLogout}\r\n      />\r\n      <Col span={4}>\r\n        <img\r\n          className=\"user-info-qrcode\"\r\n          src={qrCodeIcon}\r\n          onClick={() => onQrCode()}\r\n          alt=\"qrcode\"\r\n        />\r\n      </Col>\r\n      <Col span={16} className=\"user-info\">\r\n        {userDataStore === undefined ||\r\n        userDataStore.user_picture === \"\" ||\r\n        userDataStore.user_picture === undefined ||\r\n        userDataStore.user_picture === null ? (\r\n          <img\r\n            className=\"user-info-no-photo\"\r\n            src={accountIcon}\r\n            alt=\"user_picture\"\r\n          />\r\n        ) : (\r\n          <img\r\n            className=\"user-info-photo\"\r\n            src={userDataStore.user_picture}\r\n            alt=\"user_picture\"\r\n          />\r\n        )}\r\n        {userDataStore === undefined ||\r\n        userDataStore.username_full === \"\" ||\r\n        userDataStore.username_full === undefined ||\r\n        userDataStore.username_full === null\r\n          ? \"Unattended\"\r\n          : userDataStore.username_full}\r\n      </Col>\r\n      <Col span={4} style={{ textAlign: \"right\" }}>\r\n        <img\r\n          className=\"user-info-logout\"\r\n          src={logoutIcon}\r\n          onClick={() => setShowLogout(true)}\r\n          alt=\"logout\"\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default UserInfoLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SidebarMenu\\SidebarMenu.js",["461","462","463","464","465","466"],"import { Menu } from \"antd\";\r\nimport LanguageModal from \"pages/LanguageModal/LanguageModal\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setAppDataStore } from \"redux/actions/appActions\";\r\nimport { appData } from \"services/global\";\r\nimport ic_oee_dashboard from \"../../assets/icons/ic_menu_dashboard.png\";\r\nimport ic_menu_install from \"../../assets/icons/ic_menu_install.png\";\r\nimport ic_menu_maintenance from \"../../assets/icons/ic_menu_maintenance.png\";\r\nimport ic_menu_setting from \"../../assets/icons/ic_menu_setting.png\";\r\nimport ic_menu_timereport from \"../../assets/icons/ic_menu_timereport.png\";\r\nimport ic_nav_language from \"../../assets/icons/ic_nav_language.png\";\r\nimport logo from \"../../assets/icons/logo.png\";\r\nimport \"./SidebarMenu.css\";\r\n\r\nconst SidebarMenu = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { appDataStore } = useSelector((x) => x.appDataStore);\r\n  const { open } = props;\r\n  const { pages } = appDataStore;\r\n  const [isShowLanguageModal, setIsShowLanguageModal] = useState(false);\r\n\r\n  const onMenuClick = (info) => {\r\n    open(false);\r\n    if (info.page_index === 5) {\r\n      setIsShowLanguageModal(true);\r\n    } else {\r\n      if (info.page_index < 2) {\r\n        appData.pages = [info.page_index];\r\n        console.log(\"SidebarMenu:appData=>\", appData);\r\n        dispatch(setAppDataStore(appData));\r\n      } else {\r\n        let newPages = pages;\r\n        newPages.push(info.page_index);\r\n        appData.pages = newPages;\r\n        dispatch(setAppDataStore(appData));\r\n      }\r\n    }\r\n  };\r\n\r\n  const NAV_MENU_IMTES = [\r\n    {\r\n      page_index: 0,\r\n      title: \"OEE Dashboard\",\r\n      icon: (\r\n        <img\r\n          style={{ width: \"20px\", height: \"20px\", color: \"white\" }}\r\n          src={ic_oee_dashboard}\r\n        />\r\n      ),\r\n      active: true,\r\n    },\r\n    {\r\n      page_index: 1,\r\n      title: \"Process Monitor\",\r\n      icon: (\r\n        <img\r\n          style={{ width: \"20px\", height: \"20px\", color: \"white\" }}\r\n          src={ic_menu_timereport}\r\n        />\r\n      ),\r\n      active: false,\r\n    },\r\n    {\r\n      page_index: 2,\r\n      title: \"Settings\",\r\n      icon: (\r\n        <img\r\n          style={{ width: \"20px\", height: \"20px\", color: \"white\" }}\r\n          src={ic_menu_setting}\r\n        />\r\n      ),\r\n      active: false,\r\n    },\r\n    {\r\n      page_index: 3,\r\n      title: \"Install Configuration\",\r\n      icon: (\r\n        <img\r\n          style={{ width: \"20px\", height: \"20px\", color: \"white\" }}\r\n          src={ic_menu_install}\r\n        />\r\n      ),\r\n      active: false,\r\n    },\r\n    {\r\n      page_index: 4,\r\n      title: \"Maintenance\",\r\n      icon: (\r\n        <img\r\n          style={{ width: \"20px\", height: \"20px\", color: \"white\" }}\r\n          src={ic_menu_maintenance}\r\n        />\r\n      ),\r\n      active: false,\r\n    },\r\n    {\r\n      page_index: 5,\r\n      title: \"Language\",\r\n      icon: (\r\n        <img\r\n          style={{ width: \"20px\", height: \"20px\", color: \"white\" }}\r\n          src={ic_nav_language}\r\n        />\r\n      ),\r\n      active: false,\r\n    },\r\n  ];\r\n\r\n  const menuUI = NAV_MENU_IMTES.map((info, index) => {\r\n    return (\r\n      <Menu.Item\r\n        className=\"c-menu-item\"\r\n        key={info.page_index}\r\n        icon={info.icon}\r\n        onClick={() => {\r\n          onMenuClick(info);\r\n        }}\r\n      >\r\n        {info.title}\r\n      </Menu.Item>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <LanguageModal\r\n        isShowLanguageModal={isShowLanguageModal}\r\n        setIsShowLanguageModal={setIsShowLanguageModal}\r\n      />\r\n      <img\r\n        className=\"drawer-logo\"\r\n        alt=\"logo\"\r\n        src={logo}\r\n        style={{ height: 32 }}\r\n      />\r\n      <Menu theme=\"dark\" mode=\"inline\" className=\"c-menu\">\r\n        {menuUI}\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarMenu;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\TextWithIcon\\TextWithIcon.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\DashboardUtilizationLayout\\DashboardUtilizationLayout.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\DashboardMachineInfoLayout\\DashboardMachineInfoLayout.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\DashboardOEELayout\\DashboardOEELayout.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\IndicatorDots.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\DashboardChartLayout\\DashboardChartLayout.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\GoodBadWidget\\GoodBadWidget.js",["467","468"],"// @flow strict\r\n\r\nimport { Col, Row } from \"antd\";\r\nimport greenDownIcon from \"../../assets/icons/ic_down_green.png\";\r\nimport redDownIcon from \"../../assets/icons/ic_down_red.png\";\r\nimport greenUpIcon from \"../../assets/icons/ic_up_green.png\";\r\nimport redUpIcon from \"../../assets/icons/ic_up_red.png\";\r\nimport \"./GoodBadWidget.css\";\r\n\r\nfunction GoodBadWidget(props) {\r\n  const { type, value, setValue, setShowModal } = props;\r\n\r\n  const onClick = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const onUp = () => {\r\n    let v = value;\r\n    v++;\r\n    setValue(v);\r\n  };\r\n\r\n  const onDown = () => {\r\n    let v = value;\r\n    if (v > 0) v--;\r\n    setValue(v);\r\n  };\r\n\r\n  return (\r\n    <div className=\"good-bad-widget\">\r\n      <span\r\n        className=\"good-bad-widget-title\"\r\n        style={{\r\n          color: type === 0 ? \"rgb(48, 191, 120)\" : \"rgb(244, 102, 74)\",\r\n        }}\r\n      >\r\n        {type === 0 ? \"Good Parts\" : \"Bad Parts\"}\r\n      </span>\r\n\r\n      <Row align=\"middle\" className=\"good-bad-widget-up-down\">\r\n        <Col span={8} style={{ textAlign: \"left\" }}>\r\n          <img\r\n            className=\"good-bad-widget-down\"\r\n            style={{\r\n              borderColor:\r\n                type === 0 ? \"rgb(48, 191, 120)\" : \"rgb(244, 102, 74)\",\r\n            }}\r\n            src={type === 0 ? greenDownIcon : redDownIcon}\r\n            onClick={() => onDown()}\r\n          />\r\n        </Col>\r\n        <Col span={8} style={{ textAlign: \"center\" }} onClick={() => onClick()}>\r\n          <span\r\n            style={{\r\n              color: type === 0 ? \"rgb(48, 191, 120)\" : \"rgb(244, 102, 74)\",\r\n            }}\r\n            className=\"good-bad-widget-value\"\r\n          >\r\n            {value}\r\n          </span>\r\n        </Col>\r\n        <Col span={8} style={{ textAlign: \"right\" }}>\r\n          <img\r\n            className=\"good-bad-widget-up\"\r\n            style={{\r\n              borderColor:\r\n                type === 0 ? \"rgb(48, 191, 120)\" : \"rgb(244, 102, 74)\",\r\n            }}\r\n            src={type === 0 ? greenUpIcon : redUpIcon}\r\n            onClick={() => onUp()}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GoodBadWidget;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\DashboardMachineInfoLayout\\JobIDModal\\JobIDModal.js",["469"],"import { Button, Col, Row } from \"antd\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAppDataStore } from \"redux/actions/appActions\";\r\nimport { LS_ITEMS } from \"services/CONSTANTS\";\r\nimport { appData } from \"services/global\";\r\nimport \"./JobIDModal.css\";\r\n\r\nfunction JobIDModal(props) {\r\n  const dispatch = useDispatch();\r\n  const { showModal, setShowModal } = props;\r\n  const [jobID, setJobID] = useState(\"\");\r\n\r\n  const onCancel = () => {\r\n    setJobID(\"\");\r\n    setShowModal(false);\r\n  };\r\n\r\n  const onOK = () => {\r\n    if (jobID === \"\" || jobID === undefined) return;\r\n    appData.jobId = jobID;\r\n    dispatch(setAppDataStore(appData));\r\n    setJobID(\"\");\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        centered\r\n        open={showModal}\r\n        className=\"job-id-dialog-style\"\r\n        title={null}\r\n        onCancel={() => onCancel()}\r\n        closable={false}\r\n        maskClosable={false}\r\n        destroyOnClose={true}\r\n        header={null}\r\n        footer={null}\r\n      >\r\n        <div>\r\n          <Row align=\"middle\" className=\"job-id-dialog-top\">\r\n            <Col>\r\n              <span className=\"job-id-dialog-title\">Job ID Input</span>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"job-id-dialog-content\">\r\n            <Col span={24} style={{ textAlign: \"center\" }}>\r\n              <span className=\"job-id-dialog-input-desc\">\r\n                Please Input Job ID\r\n              </span>\r\n            </Col>\r\n            <Col span={24}>\r\n              <input\r\n                className=\"job-id-dialog-input\"\r\n                value={jobID}\r\n                onChange={(e) => setJobID(e.target.value)}\r\n                style={{ outlineStyle: \"none\" }}\r\n              />\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n              <Button\r\n                className=\"job-id-dialog-button\"\r\n                style={{ marginRight: \"5px\" }}\r\n                onClick={onCancel}\r\n                type=\"primary\"\r\n              >\r\n                {\"Cancel\"}\r\n              </Button>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Button\r\n                className=\"job-id-dialog-button\"\r\n                style={{ marginLeft: \"5px\" }}\r\n                onClick={onOK}\r\n                type=\"primary\"\r\n              >\r\n                {\"Ok\"}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobIDModal;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\LogoutModal\\LogoutModal.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\LoginIDModal\\LoginIDModal.js",["470"],"import { Button, Col, message, Row } from \"antd\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { isSpinning } from \"redux/actions/appActions\";\r\nimport { setUserDataStore } from \"redux/actions/userActions\";\r\nimport { apiCallForLogin } from \"services/apiCall\";\r\nimport { LS_ITEMS} from \"services/CONSTANTS\";\r\nimport \"./LoginIDModal.css\";\r\nimport { setUserData, userData } from \"services/global\";\r\n\r\nfunction LoginIDModal(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const { showModal, setShowModal } = props;\r\n  const [userID, setUserID] = useState(\"\");\r\n\r\n  const onCancel = () => {\r\n    setUserID(\"\");\r\n    setShowModal(false);\r\n  };\r\n\r\n  const onOK = () => {\r\n    if (userID === \"\" || userID === undefined) return;\r\n    dispatch(isSpinning(true));\r\n    apiCallForLogin(userID, \"\")\r\n      .then((res) => {\r\n        setUserID(\"\");\r\n        setShowModal(false);\r\n        dispatch(isSpinning(false));\r\n        setUserData(res);\r\n        dispatch(setUserDataStore(userData));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(isSpinning(false));\r\n        message.error(\"Login Fail. Please try again.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        centered\r\n        open={showModal}\r\n        className=\"login-id-dialog-style\"\r\n        title={null}\r\n        onCancel={() => onCancel()}\r\n        closable={false}\r\n        maskClosable={false}\r\n        destroyOnClose={true}\r\n        header={null}\r\n        footer={null}\r\n      >\r\n        <div>\r\n          <Row align=\"middle\" className=\"login-id-dialog-top\">\r\n            <Col>\r\n              <span className=\"login-id-dialog-title\">Login ID Input</span>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"login-id-dialog-content\">\r\n            <Col span={24} style={{ textAlign: \"center\" }}>\r\n              <span className=\"login-id-dialog-input-desc\">\r\n                Please Input Login ID\r\n              </span>\r\n            </Col>\r\n            <Col span={24}>\r\n              <input\r\n                className=\"login-id-dialog-input\"\r\n                value={userID}\r\n                onChange={(e) => setUserID(e.target.value)}\r\n                style={{ outlineStyle: \"none\" }}\r\n              />\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n              <Button\r\n                className=\"login-id-dialog-button\"\r\n                style={{ marginRight: \"5px\" }}\r\n                onClick={onCancel}\r\n                type=\"primary\"\r\n              >\r\n                {\"Cancel\"}\r\n              </Button>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Button\r\n                className=\"login-id-dialog-button\"\r\n                style={{ marginLeft: \"5px\" }}\r\n                onClick={onOK}\r\n                type=\"primary\"\r\n              >\r\n                {\"Ok\"}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginIDModal;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\IndicatorItem\\IndicatorItem.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\OneGantt\\OneGantt.js",["471"],"import { Spin } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\n// import {\r\n//   ConvertTimespanToDateBasedOnTimezone,\r\n//   getBetweenTime,\r\n//   GetCustomerCurrentTime,\r\n//   GetTimeWithStyle,\r\n// } from \"../../../../services/common/cnc_functions\";\r\n\r\n// import CommentMgrDlg from \"../../CommentMgrDlg/CommentMgrDlg\";\r\nimport \"./OneGantt.css\";\r\n\r\nfunction OneGantt(props) {\r\n  // const { ganttInfo, security_level } = props;\r\n  // const { machineInfo, customer_id } = props;\r\n  // const { customerInfo, currentDate } = props;\r\n  // const { myGanttList, setMyGanttList } = props;\r\n\r\n  // const [selectedChatItem, setSelectedChatItem] = useState(\"\");\r\n  // const [isVisibleModal, setIsVisibleModal] = useState(false);\r\n  // let identificationList = [];\r\n\r\n  // let status_array = [];\r\n\r\n  const columns = [\r\n    { type: \"string\", id: \"Position\" },\r\n    { type: \"string\", id: \"President\" },\r\n    { type: \"string\", role: \"tooltip\", id: \"tmp\", p: { html: true } },\r\n    { type: \"datetime\", id: \"Start\" },\r\n    { type: \"datetime\", id: \"End\" },\r\n  ];\r\n\r\n  let ganttData = [\r\n    [\r\n      \"Hyundai F650\",\r\n      \"start\",\r\n      \"\",\r\n      new Date(\"2023-05-01T17:00:00.000Z\"),\r\n      new Date(\"2023-05-01T17:00:00.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Idle-Uncategorized\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Idle-Uncategorized</b></span><br><span>Time: <b>06:07:51 am - 06:08:34 am</b></span><br><span>Duration: <b>00:00:43</b></span><br><span>Operator: <b>Collin Bookout</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-01T23:07:51.000Z\"),\r\n      new Date(\"2023-05-01T23:08:34.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>06:08:34 am - 06:28:34 am</b></span><br><span>Duration: <b>00:20:00</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-01T23:08:34.000Z\"),\r\n      new Date(\"2023-05-01T23:28:34.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Idle-Uncategorized\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Idle-Uncategorized</b></span><br><span>Time: <b>06:28:34 am - 06:31:09 am</b></span><br><span>Duration: <b>00:02:35</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-01T23:28:34.000Z\"),\r\n      new Date(\"2023-05-01T23:31:09.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>06:31:09 am - 06:33:40 am</b></span><br><span>Duration: <b>00:02:31</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-01T23:31:09.000Z\"),\r\n      new Date(\"2023-05-01T23:33:40.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Idle-Uncategorized\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Idle-Uncategorized</b></span><br><span>Time: <b>06:33:40 am - 06:34:05 am</b></span><br><span>Duration: <b>00:00:25</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-01T23:33:40.000Z\"),\r\n      new Date(\"2023-05-01T23:34:05.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>06:34:05 am - 06:35:45 am</b></span><br><span>Duration: <b>00:01:40</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-01T23:34:05.000Z\"),\r\n      new Date(\"2023-05-01T23:35:45.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Wait Tooling\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Wait Tooling</b></span><br><span>Time: <b>06:35:45 am - 06:42:36 am</b></span><br><span>Duration: <b>00:06:51</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-01T23:35:45.000Z\"),\r\n      new Date(\"2023-05-01T23:42:36.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>06:42:36 am - 06:54:15 am</b></span><br><span>Duration: <b>00:11:39</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-01T23:42:36.000Z\"),\r\n      new Date(\"2023-05-01T23:54:15.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Idle-Uncategorized\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Idle-Uncategorized</b></span><br><span>Time: <b>06:54:15 am - 06:58:20 am</b></span><br><span>Duration: <b>00:04:05</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-01T23:54:15.000Z\"),\r\n      new Date(\"2023-05-01T23:58:20.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>06:58:20 am - 07:05:06 am</b></span><br><span>Duration: <b>00:06:46</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-01T23:58:20.000Z\"),\r\n      new Date(\"2023-05-02T00:05:06.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Clear Chips\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Clear Chips</b></span><br><span>Time: <b>07:05:06 am - 07:26:42 am</b></span><br><span>Duration: <b>00:21:36</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T00:05:06.000Z\"),\r\n      new Date(\"2023-05-02T00:26:42.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>07:26:42 am - 07:28:42 am</b></span><br><span>Duration: <b>00:02:00</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T00:26:42.000Z\"),\r\n      new Date(\"2023-05-02T00:28:42.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Idle-Uncategorized\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Idle-Uncategorized</b></span><br><span>Time: <b>07:28:42 am - 07:29:02 am</b></span><br><span>Duration: <b>00:00:20</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T00:28:42.000Z\"),\r\n      new Date(\"2023-05-02T00:29:02.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>07:29:02 am - 07:30:38 am</b></span><br><span>Duration: <b>00:01:36</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T00:29:02.000Z\"),\r\n      new Date(\"2023-05-02T00:30:38.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Idle-Uncategorized\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Idle-Uncategorized</b></span><br><span>Time: <b>07:30:38 am - 07:33:18 am</b></span><br><span>Duration: <b>00:02:40</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T00:30:38.000Z\"),\r\n      new Date(\"2023-05-02T00:33:18.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>07:33:18 am - 07:44:55 am</b></span><br><span>Duration: <b>00:11:37</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T00:33:18.000Z\"),\r\n      new Date(\"2023-05-02T00:44:55.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Other\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Other</b></span><br><span>Time: <b>07:44:55 am - 07:52:22 am</b></span><br><span>Duration: <b>00:07:27</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T00:44:55.000Z\"),\r\n      new Date(\"2023-05-02T00:52:22.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>07:52:22 am - 07:52:27 am</b></span><br><span>Duration: <b>00:00:05</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T00:52:22.000Z\"),\r\n      new Date(\"2023-05-02T00:52:27.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Idle-Uncategorized\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Idle-Uncategorized</b></span><br><span>Time: <b>07:52:27 am - 07:54:27 am</b></span><br><span>Duration: <b>00:02:00</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T00:52:27.000Z\"),\r\n      new Date(\"2023-05-02T00:54:27.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>07:54:27 am - 08:01:09 am</b></span><br><span>Duration: <b>00:06:42</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T00:54:27.000Z\"),\r\n      new Date(\"2023-05-02T01:01:09.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Clear Chips\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Clear Chips</b></span><br><span>Time: <b>08:01:09 am - 08:13:36 am</b></span><br><span>Duration: <b>00:12:27</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T01:01:09.000Z\"),\r\n      new Date(\"2023-05-02T01:13:36.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>08:13:36 am - 08:15:42 am</b></span><br><span>Duration: <b>00:02:06</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T01:13:36.000Z\"),\r\n      new Date(\"2023-05-02T01:15:42.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Idle-Uncategorized\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Idle-Uncategorized</b></span><br><span>Time: <b>08:15:42 am - 08:15:57 am</b></span><br><span>Duration: <b>00:00:15</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T01:15:42.000Z\"),\r\n      new Date(\"2023-05-02T01:15:57.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>08:15:57 am - 08:17:32 am</b></span><br><span>Duration: <b>00:01:35</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T01:15:57.000Z\"),\r\n      new Date(\"2023-05-02T01:17:32.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Idle-Uncategorized\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Idle-Uncategorized</b></span><br><span>Time: <b>08:17:32 am - 08:20:43 am</b></span><br><span>Duration: <b>00:03:11</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T01:17:32.000Z\"),\r\n      new Date(\"2023-05-02T01:20:43.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>08:20:43 am - 08:32:20 am</b></span><br><span>Duration: <b>00:11:37</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T01:20:43.000Z\"),\r\n      new Date(\"2023-05-02T01:32:20.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Idle-Uncategorized\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Idle-Uncategorized</b></span><br><span>Time: <b>08:32:20 am - 08:33:20 am</b></span><br><span>Duration: <b>00:01:00</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T01:32:20.000Z\"),\r\n      new Date(\"2023-05-02T01:33:20.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>08:33:20 am - 08:33:25 am</b></span><br><span>Duration: <b>00:00:05</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T01:33:20.000Z\"),\r\n      new Date(\"2023-05-02T01:33:25.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Idle-Uncategorized\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Idle-Uncategorized</b></span><br><span>Time: <b>08:33:25 am - 08:35:15 am</b></span><br><span>Duration: <b>00:01:50</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T01:33:25.000Z\"),\r\n      new Date(\"2023-05-02T01:35:15.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>08:35:15 am - 08:41:57 am</b></span><br><span>Duration: <b>00:06:42</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T01:35:15.000Z\"),\r\n      new Date(\"2023-05-02T01:41:57.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Clear Chips\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Clear Chips</b></span><br><span>Time: <b>08:41:57 am - 08:54:29 am</b></span><br><span>Duration: <b>00:12:32</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T01:41:57.000Z\"),\r\n      new Date(\"2023-05-02T01:54:29.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>08:54:29 am - 08:54:35 am</b></span><br><span>Duration: <b>00:00:06</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T01:54:29.000Z\"),\r\n      new Date(\"2023-05-02T01:54:35.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Idle-Uncategorized\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Idle-Uncategorized</b></span><br><span>Time: <b>08:54:35 am - 08:55:20 am</b></span><br><span>Duration: <b>00:00:45</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T01:54:35.000Z\"),\r\n      new Date(\"2023-05-02T01:55:20.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>08:55:20 am - 08:57:15 am</b></span><br><span>Duration: <b>00:01:55</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T01:55:20.000Z\"),\r\n      new Date(\"2023-05-02T01:57:15.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Idle-Uncategorized\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Idle-Uncategorized</b></span><br><span>Time: <b>08:57:15 am - 08:57:45 am</b></span><br><span>Duration: <b>00:00:30</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T01:57:15.000Z\"),\r\n      new Date(\"2023-05-02T01:57:45.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>08:57:45 am - 08:59:25 am</b></span><br><span>Duration: <b>00:01:40</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T01:57:45.000Z\"),\r\n      new Date(\"2023-05-02T01:59:25.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Idle-Uncategorized\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Idle-Uncategorized</b></span><br><span>Time: <b>08:59:25 am - 09:02:31 am</b></span><br><span>Duration: <b>00:03:06</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T01:59:25.000Z\"),\r\n      new Date(\"2023-05-02T02:02:31.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>09:02:31 am - 09:14:03 am</b></span><br><span>Duration: <b>00:11:32</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T02:02:31.000Z\"),\r\n      new Date(\"2023-05-02T02:14:03.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Idle-Uncategorized\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Idle-Uncategorized</b></span><br><span>Time: <b>09:14:03 am - 09:16:14 am</b></span><br><span>Duration: <b>00:02:11</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T02:14:03.000Z\"),\r\n      new Date(\"2023-05-02T02:16:14.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>09:16:14 am - 09:22:59 am</b></span><br><span>Duration: <b>00:06:45</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T02:16:14.000Z\"),\r\n      new Date(\"2023-05-02T02:22:59.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Other\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Other</b></span><br><span>Time: <b>09:22:59 am - 09:58:54 am</b></span><br><span>Duration: <b>00:35:55</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T02:22:59.000Z\"),\r\n      new Date(\"2023-05-02T02:58:54.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>09:58:54 am - 10:00:59 am</b></span><br><span>Duration: <b>00:02:05</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T02:58:54.000Z\"),\r\n      new Date(\"2023-05-02T03:00:59.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Idle-Uncategorized\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Idle-Uncategorized</b></span><br><span>Time: <b>10:00:59 am - 10:01:09 am</b></span><br><span>Duration: <b>00:00:10</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T03:00:59.000Z\"),\r\n      new Date(\"2023-05-02T03:01:09.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>10:01:09 am - 10:02:44 am</b></span><br><span>Duration: <b>00:01:35</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T03:01:09.000Z\"),\r\n      new Date(\"2023-05-02T03:02:44.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Clear Chips\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Clear Chips</b></span><br><span>Time: <b>10:02:44 am - 10:08:25 am</b></span><br><span>Duration: <b>00:05:41</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T03:02:44.000Z\"),\r\n      new Date(\"2023-05-02T03:08:25.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>10:08:25 am - 10:20:02 am</b></span><br><span>Duration: <b>00:11:37</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T03:08:25.000Z\"),\r\n      new Date(\"2023-05-02T03:20:02.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Idle-Uncategorized\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Idle-Uncategorized</b></span><br><span>Time: <b>10:20:02 am - 10:22:23 am</b></span><br><span>Duration: <b>00:02:21</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T03:20:02.000Z\"),\r\n      new Date(\"2023-05-02T03:22:23.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>10:22:23 am - 10:29:09 am</b></span><br><span>Duration: <b>00:06:46</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T03:22:23.000Z\"),\r\n      new Date(\"2023-05-02T03:29:09.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Clear Chips\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Clear Chips</b></span><br><span>Time: <b>10:29:09 am - 10:59:42 am</b></span><br><span>Duration: <b>00:30:33</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T03:29:09.000Z\"),\r\n      new Date(\"2023-05-02T03:59:42.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>10:59:42 am - 11:03:23 am</b></span><br><span>Duration: <b>00:03:41</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T03:59:42.000Z\"),\r\n      new Date(\"2023-05-02T04:03:23.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Idle-Uncategorized\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Idle-Uncategorized</b></span><br><span>Time: <b>11:03:23 am - 11:06:33 am</b></span><br><span>Duration: <b>00:03:10</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T04:03:23.000Z\"),\r\n      new Date(\"2023-05-02T04:06:33.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>11:06:33 am - 11:18:10 am</b></span><br><span>Duration: <b>00:11:37</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T04:06:33.000Z\"),\r\n      new Date(\"2023-05-02T04:18:10.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Clear Chips\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Clear Chips</b></span><br><span>Time: <b>11:18:10 am - 11:24:47 am</b></span><br><span>Duration: <b>00:06:37</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T04:18:10.000Z\"),\r\n      new Date(\"2023-05-02T04:24:47.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>11:24:47 am - 11:31:28 am</b></span><br><span>Duration: <b>00:06:41</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T04:24:47.000Z\"),\r\n      new Date(\"2023-05-02T04:31:28.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Clear Chips\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Clear Chips</b></span><br><span>Time: <b>11:31:28 am - 11:42:40 am</b></span><br><span>Duration: <b>00:11:12</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T04:31:28.000Z\"),\r\n      new Date(\"2023-05-02T04:42:40.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>11:42:40 am - 11:44:41 am</b></span><br><span>Duration: <b>00:02:01</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T04:42:40.000Z\"),\r\n      new Date(\"2023-05-02T04:44:41.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Idle-Uncategorized\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Idle-Uncategorized</b></span><br><span>Time: <b>11:44:41 am - 11:45:21 am</b></span><br><span>Duration: <b>00:00:40</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T04:44:41.000Z\"),\r\n      new Date(\"2023-05-02T04:45:21.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>11:45:21 am - 11:47:02 am</b></span><br><span>Duration: <b>00:01:41</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T04:45:21.000Z\"),\r\n      new Date(\"2023-05-02T04:47:02.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"Idle-Uncategorized\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>Idle-Uncategorized</b></span><br><span>Time: <b>11:47:02 am - 11:50:28 am</b></span><br><span>Duration: <b>00:03:26</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T04:47:02.000Z\"),\r\n      new Date(\"2023-05-02T04:50:28.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"In Cycle\",\r\n      '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \"><span>Status: <b>In Cycle</b></span><br><span>Time: <b>11:50:28 am - 11:50:29 am</b></span><br><span>Duration: <b>00:00:01</b></span><br><span>Operator: <b>Book, Dean</b></span><br><span>Job ID: <b>MO0000204WK</b></span><br><span>Comment: </span><div style=\"margin-left:20px\"><b></b></div></div>',\r\n      new Date(\"2023-05-02T04:50:28.000Z\"),\r\n      new Date(\"2023-05-02T04:50:29.000Z\"),\r\n    ],\r\n    [\r\n      \"Hyundai F650\",\r\n      \"end\",\r\n      \"\",\r\n      new Date(\"2023-05-02T17:00:00.000Z\"),\r\n      new Date(\"2023-05-02T17:00:00.000Z\"),\r\n    ],\r\n  ];\r\n\r\n  let color_array = [\r\n    \"white\",\r\n    \"#ff0000\",\r\n    \"#46c392\",\r\n    \"#c000db\",\r\n    \"#ffec00\",\r\n    \"#808080\",\r\n    \"white\",\r\n  ];\r\n\r\n   \r\n\r\n  \r\n\r\n  // if (ganttInfo !== undefined && ganttInfo.length > 0) {\r\n  //   const timezone = customerInfo[\"timezone\"];\r\n  //   let startDate = GetCustomerCurrentTime(timezone);\r\n  //   if (currentDate !== undefined && currentDate !== \"\") {\r\n  //     startDate = new Date(currentDate);\r\n  //   } else {\r\n  //     startDate.setHours(0, 0, 0);\r\n  //   }\r\n\r\n  //   let endDate = GetCustomerCurrentTime(timezone);\r\n  //   if (currentDate !== undefined && currentDate !== \"\") {\r\n  //     endDate = new Date(currentDate);\r\n  //   } else {\r\n  //     endDate.setHours(0, 0, 0);\r\n  //   }\r\n\r\n  //   endDate.setDate(endDate.getDate() + 1);\r\n\r\n  //   if (machineInfo[\"machine_id\"] === \"Makino\") {\r\n  //   }\r\n  //   if (startDate.getTime() / 1000 < parseInt(ganttInfo[0].start)) {\r\n  //     status_array.push(\"start\");\r\n  //     color_array.push(\"white\");\r\n  //     ganttData.push([\r\n  //       machineInfo[\"machine_id\"],\r\n  //       \"start\",\r\n  //       \"\",\r\n  //       startDate,\r\n  //       startDate,\r\n  //     ]);\r\n  //     identificationList.push(\"\");\r\n  //   }\r\n\r\n  //   ganttData = ganttData.concat(\r\n  //     ganttInfo.map((item) => [\r\n  //       machineInfo[\"machine_id\"],\r\n  //       item[\"status\"],\r\n  //       createCustomHTMLContent(\r\n  //         item[\"status\"],\r\n  //         ConvertTimespanToDateBasedOnTimezone(item[\"start\"], timezone),\r\n  //         ConvertTimespanToDateBasedOnTimezone(item[\"end\"], timezone),\r\n  //         item[\"Operator\"],\r\n  //         getBetweenTime(item[\"start\"], item[\"end\"]),\r\n  //         item[\"job_id\"] === undefined ? \"\" : item[\"job_id\"],\r\n  //         item[\"comment\"] === null || item[\"comment\"] === undefined\r\n  //           ? \"\"\r\n  //           : item[\"comment\"]\r\n  //       ),\r\n  //       ConvertTimespanToDateBasedOnTimezone(item[\"start\"], timezone),\r\n  //       ConvertTimespanToDateBasedOnTimezone(item[\"end\"], timezone),\r\n  //     ])\r\n  //   );\r\n  //   identificationList = identificationList.concat(\r\n  //     ganttInfo.map((item) => item)\r\n  //   );\r\n\r\n  //   for (var i = 0; i < ganttInfo.length; i++) {\r\n  //     if (\r\n  //       status_array.filter(\r\n  //         (item) => item.toLowerCase() === ganttInfo[i][\"status\"].toLowerCase()\r\n  //       ).length === 0\r\n  //     ) {\r\n  //       status_array.push(ganttInfo[i][\"status\"]);\r\n  //       color_array.push(ganttInfo[i][\"color\"]);\r\n  //     }\r\n  //   }\r\n  //   if (ganttData.length > 0) {\r\n  //     if (endDate > ganttData[ganttData.length - 1][3]) {\r\n  //       status_array.push(\"end\");\r\n  //       color_array.push(\"white\");\r\n  //       ganttData.push([\r\n  //         machineInfo[\"machine_id\"],\r\n  //         \"end\",\r\n  //         \"\",\r\n  //         endDate,\r\n  //         endDate,\r\n  //       ]);\r\n  //       identificationList.push(\"\");\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  // function createCustomHTMLContent(\r\n  //   status,\r\n  //   from,\r\n  //   to,\r\n  //   operator,\r\n  //   duration,\r\n  //   jobId,\r\n  //   comment\r\n  // ) {\r\n  //   return (\r\n  //     '<div style=\"padding:5px 5px 5px 5px; background-color:#1e1e1e; color: #eeeeee; text-align: left;width: 220px; \">' +\r\n  //     \"<span>\" +\r\n  //     lang(langIndex, \"cnc_status\") +\r\n  //     \": <b>\" +\r\n  //     status +\r\n  //     \"</b></span><br>\" +\r\n  //     \"<span>\" +\r\n  //     lang(langIndex, \"cnc_time\") +\r\n  //     \": <b>\" +\r\n  //     GetTimeWithStyle(from) +\r\n  //     \" - \" +\r\n  //     GetTimeWithStyle(to) +\r\n  //     \"</b></span><br>\" +\r\n  //     \"<span>\" +\r\n  //     lang(langIndex, \"cnc_duration\") +\r\n  //     \": <b>\" +\r\n  //     duration +\r\n  //     \"</b></span><br>\" +\r\n  //     \"<span>\" +\r\n  //     lang(langIndex, \"plant_operator\") +\r\n  //     \": <b>\" +\r\n  //     operator +\r\n  //     \"</b></span><br>\" +\r\n  //     \"<span>\" +\r\n  //     lang(langIndex, \"cnc_jobid\") +\r\n  //     \": <b>\" +\r\n  //     jobId +\r\n  //     \"</b></span><br>\" +\r\n  //     \"<span>\" +\r\n  //     lang(langIndex, \"cnc_comment\") +\r\n  //     ': </span><div style=\"margin-left:20px\"><b>' +\r\n  //     comment +\r\n  //     \"</b></div>\" +\r\n  //     \"</div>\"\r\n  //   );\r\n  // }\r\n\r\n  // const chartEvents = [\r\n  //   {\r\n  //     eventName: \"select\",\r\n  //     callback({ chartWrapper }) {\r\n  //       if (customer_id === undefined) return;\r\n  //       var selectedRow = chartWrapper.getChart().getSelection()[0].row;\r\n  //       var identification = identificationList[selectedRow];\r\n  //       setSelectedChatItem(identification);\r\n  //       setIsVisibleModal(true);\r\n  //     },\r\n  //   },\r\n  // ];\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", paddingTop: 20, marginRight:20 }}>\r\n      {/* {isVisibleModal && (\r\n        <CommentMgrDlg\r\n          selectedChatItem={selectedChatItem}\r\n          isVisibleModal={isVisibleModal}\r\n          setIsVisibleModal={setIsVisibleModal}\r\n          customer_id={customer_id}\r\n          myGanttList={myGanttList}\r\n          security_level={security_level}\r\n          setMyGanttList={setMyGanttList}\r\n          timezone={customerInfo[\"timezone\"]}\r\n          ganttInfo={ganttInfo}\r\n          machineInfo={machineInfo}\r\n        />\r\n      )} */}\r\n\r\n      {ganttData.length === 0 ? (\r\n        <Spin size=\"medium\"></Spin>\r\n      ) : (\r\n        <div>\r\n          <Chart\r\n            className=\"one-line-timeline\"\r\n            height={100}\r\n            width={\"100%\"}\r\n            chartType=\"Timeline\"\r\n            data={[columns, ...ganttData]}\r\n            // chartEvents={chartEvents}\r\n            options={{\r\n              showRowNumber: false,\r\n              showBarLabels: false,\r\n              showName: false,\r\n              timeline: { showRowLabels: false, showBarLabels: false },\r\n              backgroundColor: \"transparent\",\r\n              legend: \"none\",\r\n              colors: color_array,\r\n              allowHtml: true,\r\n              tooltip: { isHtml: true },\r\n              hAxis: {\r\n                textStyle: {\r\n                  color: \"#FFFFFF\",\r\n                },\r\n                gridlines: {\r\n                  color: \"#FFFFFF\",\r\n                },\r\n                baselineColor: \"#FFFFFF\",\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OneGantt;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\InputModeModal\\InputModeModal.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\pages\\LanguageModal\\LanguageModal.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\RadialInput\\RadialInput.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\TextInput\\TextInput.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\InstallConfigTopLayout\\InstallConfigTopLayout.js",["472","473"],"import { Col, Row } from \"antd\";\r\nimport \"./InstallConfigTopLayout.css\";\r\n\r\nimport backIcon from \"../../assets/icons/ic_back_arrow_w.png\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setAppDataStore } from \"redux/actions/appActions\";\r\nimport { appData } from \"services/global\";\r\n\r\nconst InstallConfigTopLayout = (props) => {\r\n\r\n  const { appDataStore } = useSelector((x) => x.appDataStore);\r\n  const { pages } = appDataStore;\r\n  const dispatch = useDispatch();\r\n  const onClickBack = () => {\r\n    let newPages = pages;\r\n    newPages.splice(-1);\r\n    appData.pages = newPages;\r\n    dispatch(setAppDataStore(appData));\r\n  };\r\n\r\n  return (\r\n    <div className=\"install-config-top-layout\">\r\n      <Row>\r\n        <Col span={6}>\r\n          <div className=\"install-config-top-layout-left\">\r\n            <a\r\n              className=\"install-config-top-layout-menu-button\"\r\n              onClick={() => onClickBack()}\r\n            >\r\n              <img\r\n                className=\"install-config-top-layout-menu-icon\"\r\n                src={backIcon}\r\n              />\r\n            </a>\r\n\r\n            <div className=\"install-config-top-layout-title-div\">\r\n              <span className=\"install-config-top-layout-title\">\r\n                {\"Install Configuration\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstallConfigTopLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\GoodBadModal\\GoodBadModal.js",["474","475"],"import { Button, Col, message, Row } from \"antd\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./GoodBadModal.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TextInput from \"components/TextInput/TextInput\";\r\n\r\nfunction GoodBadModal(props) {\r\n  const authData = useSelector((x) => x.authService);\r\n  const {\r\n    showModal,\r\n    setShowModal,\r\n    goodParts,\r\n    setGoodParts,\r\n    badParts,\r\n    setBadParts,\r\n  } = props;\r\n  const [gParts, setGParts] = useState(\"0\");\r\n  const [bParts, setBParts] = useState(\"0\");\r\n\r\n  useEffect(() => {\r\n    setGParts(goodParts);\r\n    setBParts(badParts);\r\n  }, [goodParts, badParts]);\r\n\r\n  const onCancel = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n   const onOK = () => {\r\n     setShowModal(false);\r\n     setGoodParts(gParts);\r\n     setBadParts(bParts);\r\n   };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        centered\r\n        open={showModal}\r\n        className=\"good-bad-dialog-style\"\r\n        title={null}\r\n        onCancel={() => onCancel()}\r\n        closable={false}\r\n        maskClosable={false}\r\n        destroyOnClose={true}\r\n        header={null}\r\n        footer={null}\r\n      >\r\n        <div>\r\n          <Row align=\"middle\" className=\"good-bad-dialog-top\">\r\n            <Col>\r\n              <span className=\"good-bad-dialog-title\">{\"Good/Bad Parts\"}</span>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"good-bad-dialog-content\">\r\n            <Col span={12}>\r\n              <TextInput\r\n                value={gParts}\r\n                setValue={setGParts}\r\n                title={\"Good Parts\"}\r\n              />\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n              <TextInput\r\n                value={bParts}\r\n                setValue={setBParts}\r\n                title={\"Bad Parts\"}\r\n              />\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n              <Button\r\n                className=\"good-bad-dialog-button\"\r\n                style={{ marginRight: \"5px\" }}\r\n                onClick={onCancel}\r\n                type=\"primary\"\r\n              >\r\n                {\"Cancel\"}\r\n              </Button>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Button\r\n                className=\"good-bad-dialog-button\"\r\n                style={{ marginLeft: \"5px\" }}\r\n                onClick={onOK}\r\n                type=\"primary\"\r\n              >\r\n                {\"Ok\"}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GoodBadModal;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\TimeLoggerLayout\\TimeLoggerLayout.js",["476","477","478"],"import { Col, Row, message } from \"antd\";\r\nimport InputModeModal from \"layouts/InputModeModal/InputModeModal\";\r\nimport PartIDInputLayout from \"layouts/PartIDInputLayout/PartIDInputLayout\";\r\nimport PartIDModal from \"layouts/PartIDModal/PartIDModal\";\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isSpinning } from \"redux/actions/appActions\";\r\nimport {\r\n  apiCallForGetTankTime,\r\n  apiCallForPostTankTime,\r\n} from \"services/apiCall\";\r\nimport {\r\n  appData,\r\n  secondToTime,\r\n  timeToSecond,\r\n  userData,\r\n  factoryData,\r\n} from \"services/global\";\r\nimport TankTimeWidget from \"../../components/TankTimeWidget/TankTimeWidget\";\r\nimport \"./TimeLoggerLayout.css\";\r\nimport TextInputArrayModal from \"components/TextInputArrayModal/TextInputArrayModal\";\r\nimport RecordPhosphateTestInfo from \"components/RecordPhosphateTestInfoModal/RecordPhosphateTestInfoModal\";\r\n\r\nconst TimeLoggerLayout = (props) => {\r\n  const defaultTimes = [\r\n    \"00:00:00\",\r\n    \"00:00:00\",\r\n    \"00:00:00\",\r\n    \"00:00:00\",\r\n    \"00:00:00\",\r\n    \"00:00:00\",\r\n    \"00:00:00\",\r\n    \"00:00:00\",\r\n    \"00:00:00\",\r\n  ];\r\n\r\n  const titles = [\r\n    \"Oven\",\r\n    \"Tank1\",\r\n    \"Tank2\",\r\n    \"Tank3\",\r\n    \"Tank4\",\r\n    \"Tank5\",\r\n    \"Tank6\",\r\n    \"Tank7\",\r\n    \"Tank8\",\r\n  ];\r\n\r\n  const tankTitles = [\r\n    \"Tank1\",\r\n    \"Tank2\",\r\n    \"Tank3\",\r\n    \"Tank4\",\r\n    \"Tank5\",\r\n    \"Tank6\",\r\n    \"Tank7\",\r\n    \"Tank8\",\r\n  ];\r\n\r\n  const [temps, setTemps] = useState([\r\n    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\r\n  ]);\r\n\r\n  const [tankTemps, setTankTemps] = useState([\r\n    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\r\n  ]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [showInputMode, setShowInputMode] = useState(false);\r\n  const [showPartID, setShowPartID] = useState(false);\r\n  const [showTextInputArrayModal, setShowTextInputArrayModal] = useState(false);\r\n  const [showRecordPhosphateTestInfo, setShowRecordPhosphateTestInfo] =\r\n    useState(false);\r\n\r\n  const [rmrot, setRmrot] = useState(\"\");\r\n  const [partID, setPartID] = useState(\"\");\r\n  const [times, setTimes] = useState(defaultTimes);\r\n\r\n  const [intervalId, setIntervalID] = useState(null);\r\n  const [tick, setTick] = useState(false);\r\n  const timer = () => setTick((t) => !t);\r\n\r\n  const [selectedTankIndex, setSelectedTankIndex] = useState(1);\r\n\r\n  const [isStarted, setIsStarted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isStarted) {\r\n      let tempTimes = [...times];\r\n      tempTimes[selectedTankIndex] = moment(\r\n        times[selectedTankIndex],\r\n        \"HH:mm:ss\"\r\n      )\r\n        .add(1, \"seconds\")\r\n        .format(\"HH:mm:ss\");\r\n      setTimes(tempTimes);\r\n    }\r\n  }, [tick]);\r\n\r\n  const updateTankTemps = (values) => {\r\n    let newValues = [];\r\n    newValues = [temps[0], ...values];\r\n    setTemps(newValues);\r\n    setTankTemps(values);\r\n  };\r\n\r\n  const onStartClick = () => {\r\n    if (!isStarted) {\r\n      setIntervalID(setInterval(timer, 1000));\r\n      setIsStarted(true);\r\n    }\r\n  };\r\n\r\n  const onStopClick = () => {\r\n    clearInterval(intervalId);\r\n    setIsStarted(false);\r\n    if (selectedTankIndex === 0) {\r\n      reportTimes();\r\n    }\r\n  };\r\n\r\n  const reportTimes = () => {\r\n    if (partID === \"\") {\r\n      message.warn(\"Please input Part ID to save times.\");\r\n      return;\r\n    }\r\n\r\n    if (rmrot === \"\") {\r\n      message.warn(\"Please input RM LOT# to save times.\");\r\n      return;\r\n    }\r\n\r\n    if (factoryData.accountId === \"\") {\r\n      message.warn(\"Please login with customer id\");\r\n      return;\r\n    }\r\n\r\n    if (appData.machineName === \"\") {\r\n      message.warn(\"Please input machine name in settings page\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"factoryData=>\", factoryData);\r\n    console.log(\"appData=>\", appData);\r\n\r\n    let param = {\r\n      customer_id: factoryData.accountId,\r\n      machine_id: appData.machineName,\r\n      created_at: moment().format(\"YYYY-MM-DD HH:mm:ss\") + \".000000\",\r\n      timestamp: Date.now(),\r\n      part_id: partID,\r\n      date: moment().format(\"MM/DD/YYYY\"),\r\n      time: moment().format(\"HH:mm:ss\"),\r\n      ttime1: timeToSecond(times[1]),\r\n      ttemp1: temps[1],\r\n      ttime2: timeToSecond(times[2]),\r\n      ttemp2: temps[2],\r\n      ttime3: timeToSecond(times[3]),\r\n      ttemp3: temps[3],\r\n      ttime4: timeToSecond(times[4]),\r\n      ttemp4: temps[4],\r\n      ttime5: timeToSecond(times[5]),\r\n      ttemp5: temps[5],\r\n      ttime6: timeToSecond(times[6]),\r\n      ttemp6: temps[6],\r\n      ttime7: timeToSecond(times[7]),\r\n      ttemp7: temps[7],\r\n      ttime8: timeToSecond(times[8]),\r\n      ttemp8: temps[8],\r\n      toven: timeToSecond(times[0]),\r\n      operator: userData.username_full,\r\n      rm_lot: rmrot,\r\n    };\r\n\r\n    dispatch(isSpinning(true));\r\n    apiCallForPostTankTime(param)\r\n      .then((res) => {\r\n        dispatch(isSpinning(false));\r\n        message.success(\"Success to report times!\");\r\n      })\r\n      .catch((err) => {\r\n        dispatch(isSpinning(false));\r\n        message.error(\"Fail to report times!\");\r\n      });\r\n  };\r\n\r\n  const onPartId = (value) => {\r\n    setPartID(value);\r\n    resetTimers();\r\n    getPartInfo(value);\r\n  };\r\n\r\n  const resetTimers = () => {\r\n    setRmrot(\"\");\r\n    setSelectedTankIndex(1);\r\n    setTimes(defaultTimes);\r\n    setIsStarted(false);\r\n  };\r\n\r\n  const getPartInfo = (value) => {\r\n    if (value === \"\") {\r\n      return;\r\n    }\r\n    let param = {\r\n      customer_id: factoryData.accountId,\r\n      part_id: value,\r\n    };\r\n    dispatch(isSpinning(true));\r\n    apiCallForGetTankTime(param)\r\n      .then((res) => {\r\n        dispatch(isSpinning(false));\r\n        let tankTimes = res[\"tank_time\"];\r\n        setTimes([\r\n          secondToTime(tankTimes[\"toven\"]),\r\n          secondToTime(tankTimes[\"ttime1\"]),\r\n          secondToTime(tankTimes[\"ttime2\"]),\r\n          secondToTime(tankTimes[\"ttime3\"]),\r\n          secondToTime(tankTimes[\"ttime4\"]),\r\n          secondToTime(tankTimes[\"ttime5\"]),\r\n          secondToTime(tankTimes[\"ttime6\"]),\r\n          secondToTime(tankTimes[\"ttime7\"]),\r\n          secondToTime(tankTimes[\"ttime8\"]),\r\n        ]);\r\n        setRmrot(tankTimes[\"rm_lot\"]);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(isSpinning(false));\r\n        //message.error(\"Fail to get times!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"time-logger-layout\">\r\n      <InputModeModal\r\n        title={\"Please Select Input Mode\"}\r\n        showModal={showInputMode}\r\n        setShowModal={setShowInputMode}\r\n        setShowInput={setShowPartID}\r\n      />\r\n      <PartIDModal\r\n        showModal={showPartID}\r\n        setShowModal={setShowPartID}\r\n        partID={partID}\r\n        setPartID={onPartId}\r\n      />\r\n      <TextInputArrayModal\r\n        showModal={showTextInputArrayModal}\r\n        setShowModal={setShowTextInputArrayModal}\r\n        values={tankTemps}\r\n        setValues={updateTankTemps}\r\n        titles={tankTitles}\r\n        title={\"Temperature\"}\r\n        subTitle={\"Please Input Tank Temperature(°F)\"}\r\n        span={6}\r\n      />\r\n      <RecordPhosphateTestInfo\r\n        showModal={showRecordPhosphateTestInfo}\r\n        setShowModal={setShowRecordPhosphateTestInfo}\r\n        partID={partID}\r\n      />\r\n      <Row align={\"middle\"} className=\"time-logger-top-layout\">\r\n        <Col\r\n          flex={\"170px\"}\r\n          className=\"time-logger-top-record-test-info\"\r\n          onClick={() => {\r\n            setShowRecordPhosphateTestInfo(true);\r\n          }}\r\n        >\r\n          {\"Record Test Info\"}\r\n        </Col>\r\n        <Col flex={\"auto\"}>\r\n          <Row>\r\n            <Col span={8}>\r\n              <PartIDInputLayout\r\n                partID={partID}\r\n                setPartID={onPartId}\r\n                setShowInputMode={setShowInputMode}\r\n              />\r\n            </Col>\r\n            <Col span={8}>\r\n              <Row align={\"middle\"} className=\"time-logger-top-rmrot\">\r\n                <Col span={24}>\r\n                  <div className=\"time-logger-top-rmrot-left\">{\"RM LOT#\"}</div>\r\n                  <div className=\"time-logger-top-rmrot-right\">\r\n                    <input\r\n                      className=\"text-input\"\r\n                      value={rmrot}\r\n                      onChange={(e) => setRmrot(e.target.value)}\r\n                      style={{ outlineStyle: \"none\" }}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Row align={\"middle\"} className=\"time-logger-top-oven\">\r\n                <Col flex={\"80px\"}>{titles[0]}</Col>\r\n                <Col\r\n                  flex={\"auto\"}\r\n                  onClick={() => {\r\n                    setSelectedTankIndex(0);\r\n                  }}\r\n                  style={{\r\n                    color: selectedTankIndex === 0 ? \"red\" : \"white\",\r\n                    cursor: \"default\",\r\n                  }}\r\n                >\r\n                  {times[0]}\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <div className=\"time-logger-content\">\r\n        <Row className=\"time-logger-tanktime-row\">\r\n          <Col span={12} style={{ width: \"100%\", height: \"100%\" }}>\r\n            <TankTimeWidget\r\n              title={titles[1]}\r\n              times={times}\r\n              temps={temps}\r\n              setTimes={setTimes}\r\n              selectedTankIndex={selectedTankIndex}\r\n              setSelectedTankIndex={setSelectedTankIndex}\r\n              setShowTemperatureModal={setShowTextInputArrayModal}\r\n              index={1}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={12} style={{ width: \"100%\", height: \"100%\" }}>\r\n            <TankTimeWidget\r\n              title={titles[5]}\r\n              times={times}\r\n              temps={temps}\r\n              setTimes={setTimes}\r\n              selectedTankIndex={selectedTankIndex}\r\n              setSelectedTankIndex={setSelectedTankIndex}\r\n              setShowTemperatureModal={setShowTextInputArrayModal}\r\n              index={5}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"time-logger-tanktime-row\">\r\n          <Col span={12} style={{ width: \"100%\", height: \"100%\" }}>\r\n            <TankTimeWidget\r\n              title={titles[2]}\r\n              times={times}\r\n              temps={temps}\r\n              setTimes={setTimes}\r\n              selectedTankIndex={selectedTankIndex}\r\n              setSelectedTankIndex={setSelectedTankIndex}\r\n              setShowTemperatureModal={setShowTextInputArrayModal}\r\n              index={2}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={12} style={{ width: \"100%\", height: \"100%\" }}>\r\n            <TankTimeWidget\r\n              title={titles[6]}\r\n              times={times}\r\n              temps={temps}\r\n              setTimes={setTimes}\r\n              selectedTankIndex={selectedTankIndex}\r\n              setSelectedTankIndex={setSelectedTankIndex}\r\n              setShowTemperatureModal={setShowTextInputArrayModal}\r\n              index={6}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"time-logger-tanktime-row\">\r\n          <Col span={12} style={{ width: \"100%\", height: \"100%\" }}>\r\n            <TankTimeWidget\r\n              title={titles[3]}\r\n              times={times}\r\n              temps={temps}\r\n              setTimes={setTimes}\r\n              selectedTankIndex={selectedTankIndex}\r\n              setSelectedTankIndex={setSelectedTankIndex}\r\n              setShowTemperatureModal={setShowTextInputArrayModal}\r\n              index={3}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={12} style={{ width: \"100%\", height: \"100%\" }}>\r\n            <TankTimeWidget\r\n              title={titles[7]}\r\n              times={times}\r\n              temps={temps}\r\n              setTimes={setTimes}\r\n              selectedTankIndex={selectedTankIndex}\r\n              setSelectedTankIndex={setSelectedTankIndex}\r\n              setShowTemperatureModal={setShowTextInputArrayModal}\r\n              index={7}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"time-logger-tanktime-row\">\r\n          <Col span={12} style={{ width: \"100%\", height: \"100%\" }}>\r\n            <TankTimeWidget\r\n              title={titles[4]}\r\n              times={times}\r\n              temps={temps}\r\n              setTimes={setTimes}\r\n              selectedTankIndex={selectedTankIndex}\r\n              setSelectedTankIndex={setSelectedTankIndex}\r\n              setShowTemperatureModal={setShowTextInputArrayModal}\r\n              index={4}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={12} style={{ width: \"100%\", height: \"100%\" }}>\r\n            <TankTimeWidget\r\n              title={titles[8]}\r\n              times={times}\r\n              temps={temps}\r\n              setTimes={setTimes}\r\n              selectedTankIndex={selectedTankIndex}\r\n              setSelectedTankIndex={setSelectedTankIndex}\r\n              setShowTemperatureModal={setShowTextInputArrayModal}\r\n              index={8}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div className=\"time-logger-bottom\">\r\n        <Row style={{ height: \"70px\" }}>\r\n          <Col span={8}>\r\n            <div\r\n              className=\"time-logger-bottom-button\"\r\n              style={{ marginRight: \"5px\" }}\r\n              onClick={() => {\r\n                onStartClick();\r\n              }}\r\n            >\r\n              {\"Start\"}\r\n            </div>\r\n          </Col>\r\n          <Col span={8} style={{ paddingLeft: \"10px\" }}>\r\n            <div\r\n              className=\"time-logger-bottom-button\"\r\n              onClick={() => {\r\n                onStopClick();\r\n              }}\r\n            >\r\n              {\"Stop\"}\r\n            </div>\r\n          </Col>\r\n          <Col span={8} style={{ paddingLeft: \"10px\" }}>\r\n            <div className=\"time-logger-bottom-button\">{\"Data Log\"}</div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeLoggerLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\AssemblyStation137Layout\\AssemblyStation137Layout.js",["479","480","481"],"import { Col, Radio, Row, message } from \"antd\";\r\nimport CurrentPartProcessingTimeWidget from \"components/CurrentPartProcessingTimeWidget/CurrentPartProcessingTimeWidget\";\r\nimport GoodBadModal from \"components/GoodBadModal/GoodBadModal\";\r\nimport GoodBadWidget from \"components/GoodBadWidget/GoodBadWidget\";\r\nimport InputModeModal from \"layouts/InputModeModal/InputModeModal\";\r\nimport PartIDInputLayout from \"layouts/PartIDInputLayout/PartIDInputLayout\";\r\nimport PartIDModal from \"layouts/PartIDModal/PartIDModal\";\r\nimport UserInfoLayout from \"layouts/UserInfoLayout/UserInfoLayout\";\r\nimport { useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport \"./AssemblyStation137Layout.css\";\r\nimport { isSpinning, setAppDataStore } from \"redux/actions/appActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { appData, secondToTime, timeToSecond, userData, factoryData } from \"services/global\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  apiCallForGetAssembly1Station,\r\n  apiCallForPostAssembly1Station,\r\n} from \"services/apiCall\";\r\nimport TextInputArrayModal from \"components/TextInputArrayModal/TextInputArrayModal\";\r\n\r\nconst AssemblyStation137Layout = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { appDataStore } = useSelector((x) => x.appDataStore);\r\n  const [showInputMode, setShowInputMode] = useState(false);\r\n  const [showPartID, setShowPartID] = useState(false);\r\n  const [partID, setPartID] = useState(\"\");\r\n\r\n  const [goodParts, setGoodParts] = useState(\"0\");\r\n  const [badParts, setBadParts] = useState(\"0\");\r\n  const [showGoodBadModal, setShowGoodBadModal] = useState(false);\r\n\r\n  const [inputMode, setInputMode] = useState(\"0\");\r\n  const [processingTime, setProcessingTime] = useState(\"00:00:00\");\r\n  const [notes, setNotes] = useState(\"\");\r\n\r\n  const [showInputModal1, setShowInputModal1] = useState(false);\r\n  const [showInputModal2, setShowInputModal2] = useState(false);\r\n\r\n  const titles1 = [\r\n    \"case_number\",\r\n    \"serial\",\r\n    \"shipment\",\r\n    \"empty_wt\",\r\n    \"center_grav\",\r\n    \"aft_ass\",\r\n    \"aft_retain_ring\",\r\n    \"shipping_cover\",\r\n    \"shipping_plug\",\r\n    \"end_cap\",\r\n    \"lugs\",\r\n    \"retain_ring\",\r\n    \"adapt_ring\",\r\n    \"impact_ring\",\r\n    \"total_wt\",\r\n    \"ass_center_grav\",\r\n  ];\r\n  const [values1, setValues1] = useState([\r\n    \"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\",\r\n    \"0.0\",\r\n  ]);\r\n\r\n  const titles2 = [\r\n    \"degrease_sol\",\r\n    \"corrosin_prev_compound\",\r\n    \"ship_cover_oring\",\r\n    \"Oring_grease\",\r\n    \"protective_end_cap\",\r\n    \"end_cap_set_screw\",\r\n    \"lifting_lug_bolt\",\r\n    \"lifting_lug_washer\",\r\n    \"stencil_ink\",\r\n  ];\r\n  const [values2, setValues2] = useState([\r\n    \"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\", \"0.0\",\r\n  ]);\r\n\r\n  const [intervalId, setIntervalID] = useState(null);\r\n  const [tick, setTick] = useState(false);\r\n  const timer = () => setTick((t) => !t);\r\n  const [isStarted, setIsStarted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setGoodParts(appData.shiftGoodParts);\r\n    setBadParts(appData.shiftBadParts);\r\n  }, [appDataStore.shiftGoodParts, appDataStore.shiftBadParts]);\r\n\r\n  const updateGoodParts = (value) => {\r\n    appData.shiftGoodParts = parseInt(value);\r\n    dispatch(setAppDataStore(appData));\r\n  };\r\n\r\n  const updateBadParts = (value) => {\r\n    appData.shiftBadParts = parseInt(value);\r\n    dispatch(setAppDataStore(appData));\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isStarted) {\r\n      setProcessingTime(\r\n        moment(processingTime, \"HH:mm:ss\").add(1, \"seconds\").format(\"HH:mm:ss\")\r\n      );\r\n    }\r\n  }, [tick]);\r\n\r\n  const onPartId = (value) => {\r\n    setPartID(value);\r\n    resetTimers();\r\n    getPartInfo(value);\r\n  };\r\n\r\n  const resetTimers = () => {\r\n    setNotes(\"\");\r\n    setProcessingTime(\"00:00:00\");\r\n    setIsStarted(false);\r\n\r\n    const updatedValue1 = values1.map(() => \"0.0\");\r\n    setValues1(updatedValue1);\r\n\r\n    const updateValue2 = values2.map(() => \"0.0\");\r\n    setValues2(updateValue2);\r\n  };\r\n\r\n  const onStartClick = () => {\r\n    if (!isStarted) {\r\n      setIntervalID(setInterval(timer, 1000));\r\n      setIsStarted(true);\r\n    }\r\n  };\r\n\r\n  const onStopClick = () => {\r\n    clearInterval(intervalId);\r\n    setIsStarted(false);\r\n    reportTimes();\r\n  };\r\n\r\n  const getPartInfo = (value) => {\r\n    if (value === \"\") {\r\n      return;\r\n    }\r\n    let param = {\r\n      customer_id: factoryData.accountId,\r\n      part_id: value,\r\n    };\r\n    dispatch(isSpinning(true));\r\n    apiCallForGetAssembly1Station(param)\r\n      .then((res) => {\r\n        dispatch(isSpinning(false));\r\n        let stationInfo = res[\"station\"];\r\n        setProcessingTime(secondToTime(stationInfo[\"processing_time\"]));\r\n        setValues1([\r\n          stationInfo[\"case_number\"],\r\n          stationInfo[\"serial\"],\r\n          stationInfo[\"shipment\"],\r\n          stationInfo[\"empty_wt\"],\r\n          stationInfo[\"center_grav\"],\r\n          stationInfo[\"aft_ass\"],\r\n          stationInfo[\"aft_retain_ring\"],\r\n          stationInfo[\"shipping_cover\"],\r\n          stationInfo[\"shipping_plug\"],\r\n          stationInfo[\"end_cap\"],\r\n          stationInfo[\"lugs\"],\r\n          stationInfo[\"retain_ring\"],\r\n          stationInfo[\"adapt_ring\"],\r\n          stationInfo[\"impact_ring\"],\r\n          stationInfo[\"total_wt\"],\r\n          stationInfo[\"ass_center_grav\"],\r\n        ]);\r\n\r\n        setValues2([\r\n          stationInfo[\"degrease_sol\"],\r\n          stationInfo[\"corrosin_prev_compound\"],\r\n          stationInfo[\"ship_cover_oring\"],\r\n          stationInfo[\"oring_grease\"],\r\n          stationInfo[\"protective_end_cap\"],\r\n          stationInfo[\"end_cap_set_screw\"],\r\n          stationInfo[\"lifting_lug_bolt\"],\r\n          stationInfo[\"lifting_lug_washer\"],\r\n          stationInfo[\"stencil_ink\"],\r\n        ]);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(isSpinning(false));\r\n        //message.error(\"Fail to get times!\");\r\n      });\r\n  };\r\n\r\n  const reportTimes = () => {\r\n    if (partID === \"\") {\r\n      message.warn(\"Please input Part ID to save times.\");\r\n      return;\r\n    }\r\n\r\n    if (factoryData.accountId === \"\") {\r\n      message.warn(\"Please login with customer id\");\r\n      return;\r\n    }\r\n\r\n    if (appData.machineName === \"\") {\r\n      message.warn(\"Please input machine name in settings page\");\r\n      return;\r\n    }\r\n\r\n    let param = {\r\n      customer_id: factoryData.accountId,\r\n      machine_id: appData.machineName,\r\n      created_at: moment().format(\"YYYY-MM-DD HH:mm:ss\") + \".000000\",\r\n      timestamp: Date.now(),\r\n      operator: userData.username_full,\r\n      part_id: partID,\r\n      date: moment().format(\"MM/DD/YYYY\"),\r\n      time: moment().format(\"HH:mm:ss\"),\r\n      processing_time: timeToSecond(processingTime),\r\n      case_number: values1[0],\r\n      serial: values1[1],\r\n      shipment: values1[2],\r\n      empty_wt: values1[3],\r\n      center_grav: values1[4],\r\n      aft_ass: values1[5],\r\n      aft_retain_ring: values1[6],\r\n      shipping_cover: values1[7],\r\n      shipping_plug: values1[8],\r\n      end_cap: values1[9],\r\n      lugs: values1[10],\r\n      retain_ring: values1[11],\r\n      adapt_ring: values1[12],\r\n      impact_ring: values1[13],\r\n      total_wt: values1[14],\r\n      ass_center_grav: values1[15],\r\n      degrease_sol: values2[0],\r\n      corrosin_prev_compound: values2[1],\r\n      ship_cover_oring: values2[2],\r\n      oring_grease: values2[3],\r\n      protective_end_cap: values2[4],\r\n      end_cap_set_screw: values2[5],\r\n      lifting_lug_bolt: values2[6],\r\n      lifting_lug_washer: values2[7],\r\n      stencil_ink: values2[8],\r\n    };\r\n\r\n    dispatch(isSpinning(true));\r\n    apiCallForPostAssembly1Station(param)\r\n      .then((res) => {\r\n        dispatch(isSpinning(false));\r\n        message.success(\"Success to report times!\");\r\n      })\r\n      .catch((err) => {\r\n        dispatch(isSpinning(false));\r\n        message.error(\"Fail to report times!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"assembly137-station-layout\">\r\n      <InputModeModal\r\n        title={\"Please Select Input Mode\"}\r\n        showModal={showInputMode}\r\n        setShowModal={setShowInputMode}\r\n        setShowInput={setShowPartID}\r\n      />\r\n      <PartIDModal\r\n        showModal={showPartID}\r\n        setShowModal={setShowPartID}\r\n        partID={partID}\r\n        setPartID={onPartId}\r\n      />\r\n      <GoodBadModal\r\n        goodParts={goodParts}\r\n        badParts={badParts}\r\n        setGoodParts={updateGoodParts}\r\n        setBadParts={updateBadParts}\r\n        showModal={showGoodBadModal}\r\n        setShowModal={setShowGoodBadModal}\r\n      />\r\n      <TextInputArrayModal\r\n        showModal={showInputModal1}\r\n        setShowModal={setShowInputModal1}\r\n        values={values1}\r\n        setValues={setValues1}\r\n        titles={titles1}\r\n        title={\"Assembly Usage 1\"}\r\n        subTitle={\"Please input Assembly Usage 1.\"}\r\n        span={6}\r\n      />\r\n      <TextInputArrayModal\r\n        showModal={showInputModal2}\r\n        setShowModal={setShowInputModal2}\r\n        values={values2}\r\n        setValues={setValues2}\r\n        titles={titles2}\r\n        title={\"Assembly Usage 2\"}\r\n        subTitle={\"Please input Assembly Usage 2.\"}\r\n        span={8}\r\n      />\r\n      <div className=\"assembly137-station-title\">\r\n        {\"ASSEMBLY STATION - BLU 137\"}\r\n      </div>\r\n      <div className=\"assembly3-station-top-left\">\r\n        <div className=\"assembly3-station-part-id\">\r\n          <PartIDInputLayout\r\n            partID={partID}\r\n            setPartID={onPartId}\r\n            setShowInputMode={setShowInputMode}\r\n          />\r\n        </div>\r\n        <div className=\"assembly3-station-user-info\">\r\n          <UserInfoLayout />\r\n        </div>\r\n      </div>\r\n      <div className=\"assembly3-station-top-right\">\r\n        <Radio.Group\r\n          // onChange={updateValue}\r\n          value={inputMode}\r\n          className=\"assembly3-station-option\"\r\n          onChange={(e) => {\r\n            setInputMode(e.target.value);\r\n          }}\r\n        >\r\n          <Row align={\"middle\"} style={{ marginTop: \"10px\" }}>\r\n            <Col span={24}>\r\n              <Radio value={\"0\"} style={{ color: \"white\" }}>\r\n                Barcode\r\n              </Radio>\r\n            </Col>\r\n            <Col span={24}>\r\n              <Radio value={\"1\"} style={{ color: \"white\" }}>\r\n                Manual\r\n              </Radio>\r\n            </Col>\r\n          </Row>\r\n        </Radio.Group>\r\n      </div>\r\n      <div className=\"assembly137-station-content\">\r\n        <Row>\r\n          <Col span={12}>\r\n            <CurrentPartProcessingTimeWidget\r\n              time={processingTime}\r\n              setTime={setProcessingTime}\r\n              onStartClick={onStartClick}\r\n              onStopClick={onStopClick}\r\n            />\r\n          </Col>\r\n          <Col span={12} style={{ paddingLeft: \"5px\" }}>\r\n            <Row>\r\n              <Col span={12}>\r\n                <GoodBadWidget\r\n                  type={0}\r\n                  value={goodParts}\r\n                  setValue={updateGoodParts}\r\n                  setShowModal={setShowGoodBadModal}\r\n                />\r\n              </Col>\r\n              <Col span={12}>\r\n                <GoodBadWidget\r\n                  type={1}\r\n                  value={badParts}\r\n                  setValue={updateBadParts}\r\n                  setShowModal={setShowGoodBadModal}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <div className=\"assembly137-station-info\">\r\n          <div className=\"assembly137-station-info-title\">\r\n            {\"Assembly Info\"}\r\n          </div>\r\n          <Row align={\"middle\"} className=\"assembly137-station-info-content\">\r\n            <Col\r\n              span={12}\r\n              onClick={() => {\r\n                setShowInputModal1(true);\r\n              }}\r\n            >\r\n              <div\r\n                className=\"assembly137-station-info-button\"\r\n                style={{ float: \"right\" }}\r\n              >\r\n                {\"Assembly Usage1\"}\r\n              </div>\r\n            </Col>\r\n            <Col\r\n              span={12}\r\n              onClick={() => {\r\n                setShowInputModal2(true);\r\n              }}\r\n            >\r\n              <div className=\"assembly137-station-info-button\">\r\n                {\"Assembly Usage2\"}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssemblyStation137Layout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\QualityLayout\\QualityLayout.js",["482","483"],"import { Col, Row, message } from \"antd\";\r\nimport CurrentPartProcessingTimeWidget from \"components/CurrentPartProcessingTimeWidget/CurrentPartProcessingTimeWidget\";\r\nimport GoodBadModal from \"components/GoodBadModal/GoodBadModal\";\r\nimport GoodBadWidget from \"components/GoodBadWidget/GoodBadWidget\";\r\nimport InputModeModal from \"layouts/InputModeModal/InputModeModal\";\r\nimport PartIDInputLayout from \"layouts/PartIDInputLayout/PartIDInputLayout\";\r\nimport PartIDModal from \"layouts/PartIDModal/PartIDModal\";\r\nimport UserInfoLayout from \"layouts/UserInfoLayout/UserInfoLayout\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./QualityLayout.css\";\r\nimport RejectReasonsModal from \"layouts/RejectReasonsModal/RejectReasonsModal\";\r\nimport RadialInputGroup from \"components/RadialInputGroup/RadialInputGroup\";\r\nimport jobidEditIcon from \"../../assets/icons/ic_jobid_edit.png\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { isSpinning, setAppDataStore } from \"redux/actions/appActions\";\r\nimport { appData, secondToTime, timeToSecond, userData, factoryData } from \"services/global\";\r\nimport {\r\n  apiCallForGetQualityStation,\r\n  apiCallForPostQualityStation,\r\n} from \"services/apiCall\";\r\n\r\nconst QualityLayout = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { appDataStore } = useSelector((x) => x.appDataStore);\r\n  const [showInputMode, setShowInputMode] = useState(false);\r\n  const [showPartID, setShowPartID] = useState(false);\r\n  const [partID, setPartID] = useState(\"\");\r\n\r\n  const [goodParts, setGoodParts] = useState(\"0\");\r\n  const [badParts, setBadParts] = useState(\"0\");\r\n  const [showGoodBadModal, setShowGoodBadModal] = useState(false);\r\n  const [showRejectReasons, setShowRejectReasons] = useState(false);\r\n  const [selectedTitleIndex, setSelectedTitleIndex] = useState(0);\r\n\r\n  const [processingTime, setProcessingTime] = useState(\"00:00:00\");\r\n  const [comments, setComments] = useState(\"\");\r\n\r\n  const [reasons, setReasons] = useState({\r\n    reason1: 0,\r\n    reason2: 0,\r\n    reason3: 0,\r\n    reason4: 0,\r\n    reason5: 0,\r\n    reason6: 0,\r\n    reason7: 0,\r\n    reason8: 0,\r\n    reason9: 0,\r\n    reason10: 0,\r\n  });\r\n\r\n  const [reasonTitles, setReasonTitles] = useState([\r\n    \"FOD in paint\",\r\n    \"FOD in Bituminous\",\r\n    \"Bituminous Separation\",\r\n    \"Missing Phosphate\",\r\n    \"Damaged Product\",\r\n    \"Paperwork not completed\",\r\n    \"Paperwork incorrect\",\r\n    \"Heavy Coatings\",\r\n    \"Rust\",\r\n    \"Light Coatings\",\r\n  ]);\r\n\r\n  const updateReasons = (field, value) => {\r\n    message.warn(\"updateReasons\");\r\n    var newReasons = { ...reasons };\r\n    newReasons[field] = value;\r\n    setReasons({ ...newReasons });\r\n  };\r\n\r\n  const reasonsUI = Object.keys(reasons).map((key, index) => {\r\n    return (\r\n      <Col span={12} key={\"key-\" + index}>\r\n        <RadialInputGroup\r\n          initValue={reasons}\r\n          field={key}\r\n          updateValue={updateReasons}\r\n          title={reasonTitles[index]}\r\n        />\r\n        <img\r\n          className=\"reject-reasons-title-edit\"\r\n          src={jobidEditIcon}\r\n          onClick={() => {\r\n            setSelectedTitleIndex(index);\r\n            setShowRejectReasons(true);\r\n          }}\r\n          alt=\"edit\"\r\n        />\r\n      </Col>\r\n    );\r\n  });\r\n\r\n  const [intervalId, setIntervalID] = useState(null);\r\n  const [tick, setTick] = useState(false);\r\n  const timer = () => setTick((t) => !t);\r\n  const [isStarted, setIsStarted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setGoodParts(appData.shiftGoodParts);\r\n    setBadParts(appData.shiftBadParts);\r\n  }, [appDataStore.shiftGoodParts, appDataStore.shiftBadParts]);\r\n\r\n  const updateGoodParts = (value) => {\r\n    appData.shiftGoodParts = parseInt(value);\r\n    dispatch(setAppDataStore(appData));\r\n  };\r\n\r\n  const updateBadParts = (value) => {\r\n    appData.shiftBadParts = parseInt(value);\r\n    dispatch(setAppDataStore(appData));\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isStarted) {\r\n      setProcessingTime(\r\n        moment(processingTime, \"HH:mm:ss\").add(1, \"seconds\").format(\"HH:mm:ss\")\r\n      );\r\n    }\r\n  }, [tick]);\r\n\r\n  const onPartId = (value) => {\r\n    setPartID(value);\r\n    resetTimers();\r\n    getPartInfo(value);\r\n  };\r\n\r\n  const resetTimers = () => {\r\n    setComments(\"\");\r\n    setProcessingTime(\"00:00:00\");\r\n    setIsStarted(false);\r\n  };\r\n\r\n  const onStartClick = () => {\r\n    if (!isStarted) {\r\n      // Clear Old Timer if exists\r\n      if (intervalId) {\r\n        clearInterval(intervalId);\r\n      }\r\n\r\n      setIntervalID(setInterval(timer, 1000));\r\n      setIsStarted(true);\r\n    }\r\n  };\r\n\r\n  const onStopClick = () => {\r\n    clearInterval(intervalId);\r\n    setIsStarted(false);\r\n    reportTimes();\r\n  };\r\n\r\n  const getPartInfo = (value) => {\r\n    if (value === \"\") {\r\n      return;\r\n    }\r\n    let param = {\r\n      customer_id: factoryData.accountId,\r\n      part_id: value,\r\n    };\r\n    dispatch(isSpinning(true));\r\n    apiCallForGetQualityStation(param)\r\n      .then((res) => {\r\n        dispatch(isSpinning(false));\r\n        let stationInfo = res[\"station\"];\r\n        setProcessingTime(secondToTime(stationInfo[\"processing_time\"]));\r\n        setComments(stationInfo[\"comments\"]);\r\n        let scrapCode = stationInfo[\"scrap_code\"].toLowerCase();\r\n        let newReasons = { ...reasons };\r\n        for (let i = 0; i < reasonTitles.length; i++) {\r\n          if (scrapCode.includes(reasonTitles[i].toLowerCase())) {\r\n            newReasons[Object.keys(newReasons)[i]] = 1;\r\n          } else {\r\n            newReasons[Object.keys(newReasons)[i]] = 0;\r\n          }\r\n        }\r\n        setReasons(newReasons);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(isSpinning(false));\r\n        //message.error(\"Fail to get times!\");\r\n      });\r\n  };\r\n\r\n  const reportTimes = () => {\r\n    if (partID === \"\") {\r\n      message.warn(\"Please input Part ID to save times.\");\r\n      return;\r\n    }\r\n\r\n    if (factoryData.accountId === \"\") {\r\n      message.warn(\"Please login with customer id\");\r\n      return;\r\n    }\r\n\r\n    if (appData.machineName === \"\") {\r\n      message.warn(\"Please input machine name in settings page\");\r\n      return;\r\n    }\r\n\r\n    let scrapCode = \"\";\r\n\r\n    for (let i = 0; i < reasonTitles.length; i++) {\r\n      if (reasons[Object.keys(reasons)[i]] === 1) {\r\n        if (scrapCode === \"\") {\r\n          scrapCode = reasonTitles[i];\r\n        } else {\r\n          scrapCode = scrapCode + \", \" + reasonTitles[i];\r\n        }\r\n      }\r\n    }\r\n\r\n    let param = {\r\n      customer_id: factoryData.accountId,\r\n      machine_id: appData.machineName,\r\n      created_at: moment().format(\"YYYY-MM-DD HH:mm:ss\") + \".000000\",\r\n      timestamp: Date.now(),\r\n      operator: userData.username_full,\r\n      part_id: partID,\r\n      date: moment().format(\"MM/DD/YYYY\"),\r\n      time: moment().format(\"HH:mm:ss\"),\r\n      processing_time: timeToSecond(processingTime),\r\n      comments: comments,\r\n      scrap_code: scrapCode,\r\n    };\r\n\r\n    dispatch(isSpinning(true));\r\n    apiCallForPostQualityStation(param)\r\n      .then((res) => {\r\n        dispatch(isSpinning(false));\r\n        message.success(\"Success to report times!\");\r\n      })\r\n      .catch((err) => {\r\n        dispatch(isSpinning(false));\r\n        message.error(\"Fail to report times!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"quality-station-layout\">\r\n      <InputModeModal\r\n        title={\"Please Select Input Mode\"}\r\n        showModal={showInputMode}\r\n        setShowModal={setShowInputMode}\r\n        setShowInput={setShowPartID}\r\n      />\r\n      <PartIDModal\r\n        showModal={showPartID}\r\n        setShowModal={setShowPartID}\r\n        partID={partID}\r\n        setPartID={onPartId}\r\n      />\r\n      <GoodBadModal\r\n        goodParts={goodParts}\r\n        badParts={badParts}\r\n        setGoodParts={updateGoodParts}\r\n        setBadParts={updateBadParts}\r\n        showModal={showGoodBadModal}\r\n        setShowModal={setShowGoodBadModal}\r\n      />\r\n      <RejectReasonsModal\r\n        showModal={showRejectReasons}\r\n        setShowModal={setShowRejectReasons}\r\n        titles={reasonTitles}\r\n        setTitles={setReasonTitles}\r\n        index={selectedTitleIndex}\r\n      />\r\n      <div className=\"quality-station-title\">{\"Quality STATION\"}</div>\r\n      <div className=\"quality-station-part-id\">\r\n        <PartIDInputLayout\r\n          partID={partID}\r\n          setPartID={onPartId}\r\n          setShowInputMode={setShowInputMode}\r\n        />\r\n      </div>\r\n      <div className=\"quality-station-user-info\">\r\n        <UserInfoLayout />\r\n      </div>\r\n      <div className=\"quality-station-content\">\r\n        <Row>\r\n          <Col span={12}>\r\n            <CurrentPartProcessingTimeWidget\r\n              time={processingTime}\r\n              setTime={setProcessingTime}\r\n              onStartClick={onStartClick}\r\n              onStopClick={onStopClick}\r\n            />\r\n          </Col>\r\n          <Col span={12} style={{ paddingLeft: \"5px\" }}>\r\n            <Row>\r\n              <Col span={12}>\r\n                <GoodBadWidget\r\n                  type={0}\r\n                  value={goodParts}\r\n                  setValue={updateGoodParts}\r\n                  setShowModal={setShowGoodBadModal}\r\n                />\r\n              </Col>\r\n              <Col span={12}>\r\n                <GoodBadWidget\r\n                  type={1}\r\n                  value={badParts}\r\n                  setValue={updateBadParts}\r\n                  setShowModal={setShowGoodBadModal}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <div className=\"quality-station-info\">\r\n          <Row className=\"quality-station-info-content\">\r\n            <Col span={24} className=\"quality-station-reject-reasons\">\r\n              {\"Reject Reasons\"}\r\n            </Col>\r\n            {reasonsUI}\r\n            <Col span={24}>\r\n              <TextArea\r\n                className=\"reject-reasons-comment-textarea\"\r\n                rows={3}\r\n                max\r\n                placeholder=\"Add Comments Here\"\r\n                value={comments}\r\n                onChange={(e) => {\r\n                  setComments(e.target.value);\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QualityLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\PaintStationLayout\\PaintStationLayout.js",["484","485","486"],"import { Col, Row, message } from \"antd\";\r\nimport AmbientPaintWidget from \"components/AmbientPaintWidget/AmbientPaintWidget\";\r\nimport CurrentPartProcessingTimeWidget from \"components/CurrentPartProcessingTimeWidget/CurrentPartProcessingTimeWidget\";\r\nimport GoodBadModal from \"components/GoodBadModal/GoodBadModal\";\r\nimport GoodBadWidget from \"components/GoodBadWidget/GoodBadWidget\";\r\nimport UsageWidget from \"components/UsageWidget/UsageWidget\";\r\nimport InputModeModal from \"layouts/InputModeModal/InputModeModal\";\r\nimport PartIDInputLayout from \"layouts/PartIDInputLayout/PartIDInputLayout\";\r\nimport PartIDModal from \"layouts/PartIDModal/PartIDModal\";\r\nimport UserInfoLayout from \"layouts/UserInfoLayout/UserInfoLayout\";\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isSpinning, setAppDataStore } from \"redux/actions/appActions\";\r\nimport {\r\n  apiCallForGetPaintStation,\r\n  apiCallForGetTankTemperature,\r\n  apiCallForPostPaintStation,\r\n} from \"services/apiCall\";\r\nimport {\r\n  appData,\r\n  secondToTime,\r\n  timeToSecond,\r\n  userData,\r\n  factoryData,\r\n} from \"services/global\";\r\nimport \"./PaintStationLayout.css\";\r\nimport TextInputArrayModal from \"components/TextInputArrayModal/TextInputArrayModal\";\r\n\r\nconst PaintStationLayout = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { appDataStore } = useSelector((x) => x.appDataStore);\r\n  const [showInputMode, setShowInputMode] = useState(false);\r\n  const [showPartID, setShowPartID] = useState(false);\r\n  const [partID, setPartID] = useState(\"\");\r\n  const [processingTime, setProcessingTime] = useState(\"00:00:00\");\r\n  const [showInputModal, setShowInputModal] = useState(false);\r\n  const titles = [\r\n    \"Temp1\",\r\n    \"Humidity1\",\r\n    \"Dew Point1\",\r\n    \"Temp2\",\r\n    \"Humidit2\",\r\n    \"Dew Point2\",\r\n  ];\r\n  const [values, setValues] = useState([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]);\r\n\r\n  const [before, setBefore] = useState(0);\r\n  const [after, setAfter] = useState(0);\r\n  const [used, setUsed] = useState(0);\r\n\r\n  const [goodParts, setGoodParts] = useState(\"0\");\r\n  const [badParts, setBadParts] = useState(\"0\");\r\n  const [showGoodBadModal, setShowGoodBadModal] = useState(false);\r\n\r\n  const [intervalId, setIntervalID] = useState(null);\r\n  const [tick, setTick] = useState(false);\r\n  const timer = () => setTick((t) => !t);\r\n  const [isStarted, setIsStarted] = useState(false);\r\n\r\n  let timeLastTemperatureData = 0;\r\n\r\n  useEffect(() => {\r\n    setGoodParts(appData.shiftGoodParts);\r\n    setBadParts(appData.shiftBadParts);\r\n  }, [appDataStore.shiftGoodParts, appDataStore.shiftBadParts]);\r\n\r\n  useEffect(() => {\r\n    setUsed(before - after);\r\n  }, [before, after]);\r\n\r\n  const updateGoodParts = (value) => {\r\n    appData.shiftGoodParts = parseInt(value);\r\n    dispatch(setAppDataStore(appData));\r\n  };\r\n\r\n  const updateBadParts = (value) => {\r\n    appData.shiftBadParts = parseInt(value);\r\n    dispatch(setAppDataStore(appData));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTemperatureData();\r\n    clearInterval(intervalId);\r\n    setIntervalID(setInterval(timer, 1000));\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (timeLastTemperatureData > 3 * 60 * 1000) {\r\n      timeLastTemperatureData = 0;\r\n      getTemperatureData();\r\n    } else {\r\n      timeLastTemperatureData += 1000;\r\n    }\r\n    if (isStarted) {\r\n      setProcessingTime(\r\n        moment(processingTime, \"HH:mm:ss\").add(1, \"seconds\").format(\"HH:mm:ss\")\r\n      );\r\n    }\r\n  }, [tick]);\r\n\r\n  const onPartId = (value) => {\r\n    setPartID(value);\r\n    resetTimers();\r\n    getPartInfo(value);\r\n  };\r\n\r\n  const resetTimers = () => {\r\n    setBefore(\"\");\r\n    setAfter(\"\");\r\n    setUsed(\"\");\r\n    setProcessingTime(\"00:00:00\");\r\n    setIsStarted(false);\r\n  };\r\n\r\n  const onStartClick = () => {\r\n    if (!isStarted) {\r\n      setIsStarted(true);\r\n    }\r\n  };\r\n\r\n  const onStopClick = () => {\r\n    setIsStarted(false);\r\n    reportTimes();\r\n  };\r\n\r\n  const getPartInfo = (value) => {\r\n    if (value === \"\") {\r\n      return;\r\n    }\r\n    let param = {\r\n      customer_id: factoryData.accountId,\r\n      part_id: value,\r\n    };\r\n    dispatch(isSpinning(true));\r\n    apiCallForGetPaintStation(param)\r\n      .then((res) => {\r\n        dispatch(isSpinning(false));\r\n        let stationInfo = res[\"station\"];\r\n        setProcessingTime(secondToTime(stationInfo[\"processing_time\"]));\r\n        setBefore(stationInfo[\"bitu_wt_before\"]);\r\n        setAfter(stationInfo[\"bitu_wt_after\"]);\r\n        setUsed(stationInfo[\"bitu_used\"]);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(isSpinning(false));\r\n        message.error(\"Fail to get times!\");\r\n      });\r\n  };\r\n\r\n  const getTemperatureData = () => {\r\n    let param = {\r\n      customer_id: factoryData.accountId,\r\n    };\r\n    dispatch(isSpinning(true));\r\n    apiCallForGetTankTemperature(param)\r\n      .then((res) => {\r\n        dispatch(isSpinning(false));\r\n        let sensors = res[\"sensors\"];\r\n        sensors.map((sensor) => {\r\n          let sensorName = sensor[\"sensor_name\"];\r\n          let newValues = [];\r\n          if (sensorName === \"Paint Booth - Internal\") {\r\n            newValues.push(sensor[\"value1\"]);\r\n            newValues.push(sensor[\"value2\"]);\r\n            newValues.push(sensor[\"value3\"]);\r\n          }\r\n\r\n          if (sensorName === \"Paint Booth - Ambient\") {\r\n            newValues.push(sensor[\"value1\"]);\r\n            newValues.push(sensor[\"value2\"]);\r\n            newValues.push(sensor[\"value3\"]);\r\n          }\r\n          setValues(newValues);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch(isSpinning(false));\r\n        message.error(\"Fail to get times!\");\r\n      });\r\n  };\r\n\r\n  const reportTimes = () => {\r\n    if (partID === \"\") {\r\n      message.warn(\"Please input Part ID to save times.\");\r\n      return;\r\n    }\r\n\r\n    if (factoryData.accountId === \"\") {\r\n      message.warn(\"Please login with customer id\");\r\n      return;\r\n    }\r\n\r\n    if (appData.machineName === \"\") {\r\n      message.warn(\"Please input machine name in settings page\");\r\n      return;\r\n    }\r\n\r\n    let param = {\r\n      customer_id: factoryData.accountId,\r\n      machine_id: appData.machineName,\r\n      created_at: moment().format(\"YYYY-MM-DD HH:mm:ss\") + \".000000\",\r\n      timestamp: Date.now(),\r\n      operator: userData.username_full,\r\n      part_id: partID,\r\n      date: moment().format(\"MM/DD/YYYY\"),\r\n      time: moment().format(\"HH:mm:ss\"),\r\n      processing_time: timeToSecond(processingTime),\r\n      bitu_wt_before: before,\r\n      bitu_wt_after: after,\r\n      bitu_used: used,\r\n      ambient_temp: values[0],\r\n      ambient_humidity: values[1],\r\n      ambient_dewpoint: values[2],\r\n      paintbooth_temp: values[3],\r\n      paintbooth_humidity: values[4],\r\n      paintbooth_dewpoint: values[5],\r\n    };\r\n\r\n    dispatch(isSpinning(true));\r\n    apiCallForPostPaintStation(param)\r\n      .then((res) => {\r\n        dispatch(isSpinning(false));\r\n        message.success(\"Success to report times!\");\r\n      })\r\n      .catch((err) => {\r\n        dispatch(isSpinning(false));\r\n        message.error(\"Fail to report times!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"paint-station-layout\">\r\n      <InputModeModal\r\n        title={\"Please Select Input Mode\"}\r\n        showModal={showInputMode}\r\n        setShowModal={setShowInputMode}\r\n        setShowInput={setShowPartID}\r\n      />\r\n      <PartIDModal\r\n        showModal={showPartID}\r\n        setShowModal={setShowPartID}\r\n        partID={partID}\r\n        setPartID={onPartId}\r\n      />\r\n      <GoodBadModal\r\n        goodParts={goodParts}\r\n        badParts={badParts}\r\n        setGoodParts={updateGoodParts}\r\n        setBadParts={updateBadParts}\r\n        showModal={showGoodBadModal}\r\n        setShowModal={setShowGoodBadModal}\r\n      />\r\n      <TextInputArrayModal\r\n        showModal={showInputModal}\r\n        setShowModal={setShowInputModal}\r\n        values={values}\r\n        setValues={setValues}\r\n        titles={titles}\r\n        title={\"Temperature & Humidity & Dew Point\"}\r\n        subTitle={\r\n          \"Please input Temperatures(°F), Humidities(%) and Dew Points(°F).\"\r\n        }\r\n        span={8}\r\n      />\r\n      <div className=\"paint-station-title\">{\"PAINT STATION\"}</div>\r\n      <div className=\"paint-station-part-id\">\r\n        <PartIDInputLayout\r\n          partID={partID}\r\n          setPartID={onPartId}\r\n          setShowInputMode={setShowInputMode}\r\n        />\r\n      </div>\r\n      <div className=\"paint-station-user-info\">\r\n        <UserInfoLayout />\r\n      </div>\r\n      <div className=\"paint-station-content\">\r\n        <Row>\r\n          <Col span={12}>\r\n            <CurrentPartProcessingTimeWidget\r\n              time={processingTime}\r\n              setTime={setProcessingTime}\r\n              onStartClick={onStartClick}\r\n              onStopClick={onStopClick}\r\n            />\r\n            <Row style={{ marginTop: \"20px\" }}>\r\n              <Col\r\n                span={12}\r\n                onClick={() => {\r\n                  setShowInputModal(true);\r\n                }}\r\n              >\r\n                <AmbientPaintWidget\r\n                  title={\"Ambient\"}\r\n                  temp={values[0]}\r\n                  hum={values[1]}\r\n                  dew={values[2]}\r\n                />\r\n              </Col>\r\n              <Col\r\n                span={12}\r\n                onClick={() => {\r\n                  setShowInputModal(true);\r\n                }}\r\n              >\r\n                <AmbientPaintWidget\r\n                  title={\"Paint Booth\"}\r\n                  temp={values[3]}\r\n                  hum={values[4]}\r\n                  dew={values[5]}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col span={12} style={{ paddingLeft: \"5px\" }}>\r\n            <UsageWidget\r\n              title={\"Bitumen Usage\"}\r\n              unit={\"oz\"}\r\n              before={before}\r\n              setBefore={setBefore}\r\n              after={after}\r\n              setAfter={setAfter}\r\n              used={used}\r\n              setUsed={setUsed}\r\n            />\r\n            <Row style={{ marginTop: \"20px\" }}>\r\n              <Col span={12}>\r\n                <GoodBadWidget\r\n                  type={0}\r\n                  value={goodParts}\r\n                  setValue={updateGoodParts}\r\n                  setShowModal={setShowGoodBadModal}\r\n                />\r\n              </Col>\r\n              <Col span={12}>\r\n                <GoodBadWidget\r\n                  type={1}\r\n                  value={badParts}\r\n                  setValue={updateBadParts}\r\n                  setShowModal={setShowGoodBadModal}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaintStationLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\AssemblyStation136Layout\\AssemblyStation136Layout.js",["487","488","489"],"import { Col, Radio, Row, message } from \"antd\";\r\nimport CurrentPartProcessingTimeWidget from \"components/CurrentPartProcessingTimeWidget/CurrentPartProcessingTimeWidget\";\r\nimport GoodBadModal from \"components/GoodBadModal/GoodBadModal\";\r\nimport GoodBadWidget from \"components/GoodBadWidget/GoodBadWidget\";\r\nimport InputModeModal from \"layouts/InputModeModal/InputModeModal\";\r\nimport PartIDInputLayout from \"layouts/PartIDInputLayout/PartIDInputLayout\";\r\nimport PartIDModal from \"layouts/PartIDModal/PartIDModal\";\r\nimport UserInfoLayout from \"layouts/UserInfoLayout/UserInfoLayout\";\r\nimport { useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport \"./AssemblyStation136Layout.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  appData,\r\n  secondToTime,\r\n  timeToSecond,\r\n  userData,\r\n  factoryData,\r\n} from \"services/global\";\r\nimport { isSpinning, setAppDataStore } from \"redux/actions/appActions\";\r\nimport {\r\n  apiCallForGetBlu136Assembly,\r\n  apiCallForPostBlu136Assembly,\r\n} from \"services/apiCall\";\r\nimport { useEffect } from \"react\";\r\nimport TextInputArrayModal from \"components/TextInputArrayModal/TextInputArrayModal\";\r\n\r\nconst AssemblyStation136Layout = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { appDataStore } = useSelector((x) => x.appDataStore);\r\n  const [showInputMode, setShowInputMode] = useState(false);\r\n  const [showPartID, setShowPartID] = useState(false);\r\n  const [partID, setPartID] = useState(\"\");\r\n\r\n  const [goodParts, setGoodParts] = useState(\"0\");\r\n  const [badParts, setBadParts] = useState(\"0\");\r\n  const [showGoodBadModal, setShowGoodBadModal] = useState(false);\r\n\r\n  const [inputMode, setInputMode] = useState(\"0\");\r\n\r\n  const [processingTime, setProcessingTime] = useState(\"00:00:00\");\r\n  const [notes, setNotes] = useState(\"\");\r\n\r\n  const [showInputModal1, setShowInputModal1] = useState(false);\r\n  const [showInputModal2, setShowInputModal2] = useState(false);\r\n  const [showInputModal3, setShowInputModal3] = useState(false);\r\n  const [showInputModal4, setShowInputModal4] = useState(false);\r\n\r\n  const titles1 = [\r\n    \"base_plat11\",\r\n    \"20199266_fwd_fuze_line\",\r\n    \"20199367_aft_fuz_line\",\r\n    \"1265394_fit_chrg_tube\",\r\n    \"1252629_washer_lock_iternal_tooth2\",\r\n    \"4902493_retainer_fuz_liner_aft\",\r\n    \"1123646_nut_fit_charg_tube2\",\r\n    \"20199361_fwd_chrg_tube\",\r\n    \"20199361_030_aft_charg_tube\",\r\n  ];\r\n\r\n  const [values1, setValues1] = useState([\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n  ]);\r\n\r\n  const titles2 = [\r\n    \"4512424_cap_shipping\",\r\n    \"nas1149f0832p_flat_washer8\",\r\n    \"nas568_41_hex_head_bolt8\",\r\n    \"x20173251_lug_shipping2\",\r\n    \"20199362_charge_tube_plug\",\r\n    \"nasm90725_31_screw_cap_hex_head2\",\r\n    \"ms35338_45_washer_lock_sprg4\",\r\n    \"mil_dtl_450_bituminous\",\r\n    \"as3582_236_o_ring_small2\",\r\n  ];\r\n\r\n  const [values2, setValues2] = useState([\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n  ]);\r\n\r\n  const titles3 = [\r\n    \"923as694_o_ring_rubber\",\r\n    \"ms51964_69_set_screw1\",\r\n    \"a_a_208_ink_marking_stencil\",\r\n    \"mil_prf_63460_gun_oil\",\r\n    \"mil_prf_16173_corrision_resistant_grease\",\r\n    \"sae_as8660_silicone_lubricant\",\r\n    \"mil_prf_680_degreasing_solvent\",\r\n    \"shipping_plugs2\",\r\n  ];\r\n\r\n  const [values3, setValues3] = useState([\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n  ]);\r\n\r\n  const titles4 = [\r\n    \"job_at\",\r\n    \"screw_lot6\",\r\n    \"threadlock_271_lot\",\r\n    \"set_screw_lot_6\",\r\n    \"ams_s_8802_lot\",\r\n    \"two_part_polysulfie_sealant\",\r\n  ];\r\n\r\n  const [values4, setValues4] = useState([\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n    \"0.0\",\r\n  ]);\r\n\r\n  const [intervalId, setIntervalID] = useState(null);\r\n  const [tick, setTick] = useState(false);\r\n  const timer = () => setTick((t) => !t);\r\n  const [isStarted, setIsStarted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setGoodParts(appData.shiftGoodParts);\r\n    setBadParts(appData.shiftBadParts);\r\n  }, [appDataStore.shiftGoodParts, appDataStore.shiftBadParts]);\r\n\r\n  const updateGoodParts = (value) => {\r\n    appData.shiftGoodParts = parseInt(value);\r\n    dispatch(setAppDataStore(appData));\r\n  };\r\n\r\n  const updateBadParts = (value) => {\r\n    appData.shiftBadParts = parseInt(value);\r\n    dispatch(setAppDataStore(appData));\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isStarted) {\r\n      setProcessingTime(\r\n        moment(processingTime, \"HH:mm:ss\").add(1, \"seconds\").format(\"HH:mm:ss\")\r\n      );\r\n    }\r\n  }, [tick]);\r\n\r\n  const onPartId = (value) => {\r\n    setPartID(value);\r\n    resetTimers();\r\n    getPartInfo(value);\r\n  };\r\n\r\n  const resetTimers = () => {\r\n    setNotes(\"\");\r\n    setProcessingTime(\"00:00:00\");\r\n    setIsStarted(false);\r\n\r\n    const updatedValues1 = values1.map((number, i) => {\r\n      if (i === 0) {\r\n        return \"\";\r\n      }\r\n      return number;\r\n    });\r\n    setValues1(updatedValues1);\r\n\r\n    const updatedValue4 = values4.map((number, i) => {\r\n      if (i === 0) {\r\n        return \"\";\r\n      }\r\n      return number;\r\n    });\r\n    setValues4(updatedValue4);\r\n  };\r\n\r\n  const onStartClick = () => {\r\n    if (!isStarted) {\r\n      // Clear Old Timer if exists\r\n      if (intervalId) {\r\n        clearInterval(intervalId);\r\n      }\r\n\r\n      setIntervalID(setInterval(timer, 1000));\r\n      setIsStarted(true);\r\n    }\r\n  };\r\n\r\n  const onStopClick = () => {\r\n    clearInterval(intervalId);\r\n    setIsStarted(false);\r\n    reportTimes();\r\n  };\r\n\r\n  const getPartInfo = (value) => {\r\n    if (value === \"\") {\r\n      return;\r\n    }\r\n    let param = {\r\n      customer_id: factoryData.accountId,\r\n      part_id: value,\r\n    };\r\n    dispatch(isSpinning(true));\r\n    apiCallForGetBlu136Assembly(param)\r\n      .then((res) => {\r\n        dispatch(isSpinning(false));\r\n        let stationInfo = res[\"station\"];\r\n        setProcessingTime(secondToTime(stationInfo[\"processing_time\"]));\r\n        setValues1([\r\n          stationInfo[\"base_plat11\"],\r\n          stationInfo[\"20199266_fwd_fuze_line\"],\r\n          stationInfo[\"20199367_aft_fuz_line\"],\r\n          stationInfo[\"1265394_fit_chrg_tube\"],\r\n          stationInfo[\"1252629_washer_lock_iternal_tooth2\"],\r\n          stationInfo[\"4902493_retainer_fuz_liner_aft\"],\r\n          stationInfo[\"1123646_nut_fit_charg_tube2\"],\r\n          stationInfo[\"20199361_fwd_chrg_tube\"],\r\n          stationInfo[\"20199361_030_aft_charg_tube\"],\r\n        ]);\r\n\r\n        setValues2([\r\n          stationInfo[\"4512424_cap_shipping\"],\r\n          stationInfo[\"nas1149f0832p_flat_washer8\"],\r\n          stationInfo[\"nas568_41_hex_head_bolt8\"],\r\n          stationInfo[\"x20173251_lug_shipping2\"],\r\n          stationInfo[\"20199362_charge_tube_plug\"],\r\n          stationInfo[\"nasm90725_31_screw_cap_hex_head2\"],\r\n          stationInfo[\"ms35338_45_washer_lock_sprg4\"],\r\n          stationInfo[\"mil_dtl_450_bituminous\"],\r\n          stationInfo[\"as3582_236_o_ring_small2\"],\r\n        ]);\r\n\r\n        setValues3([\r\n          stationInfo[\"923as694_o_ring_rubber\"],\r\n          stationInfo[\"ms51964_69_set_screw1\"],\r\n          stationInfo[\"a_a_208_ink_marking_stencil\"],\r\n          stationInfo[\"mil_prf_63460_gun_oil\"],\r\n          stationInfo[\"mil_prf_16173_corrision_resistant_grease\"],\r\n          stationInfo[\"sae_as8660_silicone_lubricant\"],\r\n          stationInfo[\"mil_prf_680_degreasing_solvent\"],\r\n          stationInfo[\"shipping_plugs2\"],\r\n        ]);\r\n\r\n        setValues4([\r\n          stationInfo[\"job_at\"],\r\n          stationInfo[\"screw_lot6\"],\r\n          stationInfo[\"threadlock_271_lot\"],\r\n          stationInfo[\"set_screw_lot_6\"],\r\n          stationInfo[\"ams_s_8802_lot\"],\r\n          stationInfo[\"two_part_polysulfie_sealant\"],\r\n        ]);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(isSpinning(false));\r\n        //message.error(\"Fail to get times!\");\r\n      });\r\n  };\r\n\r\n  const reportTimes = () => {\r\n    if (partID === \"\") {\r\n      message.warn(\"Please input Part ID to save times.\");\r\n      return;\r\n    }\r\n\r\n    if (factoryData.accountId === \"\") {\r\n      message.warn(\"Please login with customer id\");\r\n      return;\r\n    }\r\n\r\n    if (appData.machineName === \"\") {\r\n      message.warn(\"Please input machine name in settings page\");\r\n      return;\r\n    }\r\n\r\n    let param = {\r\n      customer_id: factoryData.accountId,\r\n      machine_id: appData.machineName,\r\n      created_at: moment().format(\"YYYY-MM-DD HH:mm:ss\") + \".000000\",\r\n      timestamp: Date.now(),\r\n      operator: userData.username_full,\r\n      part_id: partID,\r\n      date: moment().format(\"MM/DD/YYYY\"),\r\n      time: moment().format(\"HH:mm:ss\"),\r\n      processing_time: timeToSecond(processingTime),\r\n      p_base_plat11: values1[0],\r\n      p_20199266_fwd_fuze_line: values1[1],\r\n      p_20199367_aft_fuz_line: values1[2],\r\n      p_1265394_fit_chrg_tube: values1[3],\r\n      p_1252629_washer_lock_iternal_tooth2: values1[4],\r\n      p_4902493_retainer_fuz_liner_aft: values1[5],\r\n      p_1123646_nut_fit_charg_tube2: values1[6],\r\n      p_20199361_fwd_chrg_tube: values1[7],\r\n      p_20199361_030_aft_charg_tube: values1[8],\r\n      p_4512424_cap_shipping: values2[0],\r\n      p_nas1149f0832p_flat_washer8: values2[1],\r\n      p_nas568_41_hex_head_bolt8: values2[2],\r\n      p_x20173251_lug_shipping2: values2[3],\r\n      p_20199362_charge_tube_plug: values2[4],\r\n      p_nasm90725_31_screw_cap_hex_head2: values2[5],\r\n      p_ms35338_45_washer_lock_sprg4: values2[6],\r\n      p_mil_dtl_450_bituminous: values2[7],\r\n      p_as3582_236_o_ring_small2: values2[8],\r\n      p_923as694_o_ring_rubber: values3[0],\r\n      p_ms51964_69_set_screw1: values3[1],\r\n      p_a_a_208_ink_marking_stencil: values3[2],\r\n      p_mil_prf_63460_gun_oil: values3[3],\r\n      p_mil_prf_16173_corrision_resistant_grease: values3[4],\r\n      p_sae_as8660_silicone_lubricant: values3[5],\r\n      p_mil_prf_680_degreasing_solvent: values3[6],\r\n      p_shipping_plugs2: values3[7],\r\n      p_job_at: values4[0],\r\n      p_screw_lot6: values4[1],\r\n      p_threadlock_271_lot: values4[2],\r\n      p_set_screw_lot_6: values4[3],\r\n      p_ams_s_8802_lot: values4[4],\r\n      p_two_part_polysulfie_sealant: values4[5],\r\n    };\r\n\r\n    dispatch(isSpinning(true));\r\n    apiCallForPostBlu136Assembly(param)\r\n      .then((res) => {\r\n        dispatch(isSpinning(false));\r\n        message.success(\"Success to report times!\");\r\n      })\r\n      .catch((err) => {\r\n        dispatch(isSpinning(false));\r\n        message.error(\"Fail to report times!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"assembly136-station-layout\">\r\n      <InputModeModal\r\n        title={\"Please Select Input Mode\"}\r\n        showModal={showInputMode}\r\n        setShowModal={setShowInputMode}\r\n        setShowInput={setShowPartID}\r\n      />\r\n      <PartIDModal\r\n        showModal={showPartID}\r\n        setShowModal={setShowPartID}\r\n        partID={partID}\r\n        setPartID={onPartId}\r\n      />\r\n      <GoodBadModal\r\n        goodParts={goodParts}\r\n        badParts={badParts}\r\n        setGoodParts={updateGoodParts}\r\n        setBadParts={updateBadParts}\r\n        showModal={showGoodBadModal}\r\n        setShowModal={setShowGoodBadModal}\r\n      />\r\n      <TextInputArrayModal\r\n        showModal={showInputModal1}\r\n        setShowModal={setShowInputModal1}\r\n        values={values1}\r\n        setValues={setValues1}\r\n        titles={titles1}\r\n        title={\"Assembly Usage 1\"}\r\n        subTitle={\"Please input Assembly Usage 1.\"}\r\n        span={8}\r\n      />\r\n      <TextInputArrayModal\r\n        showModal={showInputModal2}\r\n        setShowModal={setShowInputModal2}\r\n        values={values2}\r\n        setValues={setValues2}\r\n        titles={titles2}\r\n        title={\"Assembly Usage 2\"}\r\n        subTitle={\"Please input Assembly Usage 2.\"}\r\n        span={8}\r\n      />\r\n      <TextInputArrayModal\r\n        showModal={showInputModal3}\r\n        setShowModal={setShowInputModal3}\r\n        values={values3}\r\n        setValues={setValues3}\r\n        titles={titles3}\r\n        title={\"Assembly Usage 3\"}\r\n        subTitle={\"Please input Assembly Usage 3.\"}\r\n        span={8}\r\n      />\r\n      <TextInputArrayModal\r\n        showModal={showInputModal4}\r\n        setShowModal={setShowInputModal4}\r\n        values={values4}\r\n        setValues={setValues4}\r\n        titles={titles4}\r\n        title={\"Tail Fairing\"}\r\n        subTitle={\"Please input Tail Fairing.\"}\r\n        span={8}\r\n      />\r\n      <div className=\"assembly136-station-title\">\r\n        {\"ASSEMBLY STATION - BLU 136\"}\r\n      </div>\r\n      <div className=\"assembly136-station-top-left\">\r\n        <div className=\"assembly136-station-part-id\">\r\n          <PartIDInputLayout\r\n            partID={partID}\r\n            setPartID={onPartId}\r\n            setShowInputMode={setShowInputMode}\r\n          />\r\n        </div>\r\n        <div className=\"assembly136-station-user-info\">\r\n          <UserInfoLayout />\r\n        </div>\r\n      </div>\r\n      <div className=\"assembly136-station-top-right\">\r\n        <Radio.Group\r\n          // onChange={updateValue}\r\n          value={inputMode}\r\n          className=\"assembly136-station-option\"\r\n          onChange={(e) => {\r\n            setInputMode(e.target.value);\r\n          }}\r\n        >\r\n          <Row align={\"middle\"} style={{ marginTop: \"10px\" }}>\r\n            <Col span={24}>\r\n              <Radio value={\"0\"} style={{ color: \"white\" }}>\r\n                Barcode\r\n              </Radio>\r\n            </Col>\r\n            <Col span={24}>\r\n              <Radio value={\"1\"} style={{ color: \"white\" }}>\r\n                Manual\r\n              </Radio>\r\n            </Col>\r\n          </Row>\r\n        </Radio.Group>\r\n      </div>\r\n      <div className=\"assembly136-station-content\">\r\n        <Row>\r\n          <Col span={12}>\r\n            <CurrentPartProcessingTimeWidget\r\n              time={processingTime}\r\n              setTime={setProcessingTime}\r\n              onStartClick={onStartClick}\r\n              onStopClick={onStopClick}\r\n            />\r\n          </Col>\r\n          <Col span={12} style={{ paddingLeft: \"5px\" }}>\r\n            <Row>\r\n              <Col span={12}>\r\n                <GoodBadWidget\r\n                  type={0}\r\n                  value={goodParts}\r\n                  setValue={updateGoodParts}\r\n                  setShowModal={setShowGoodBadModal}\r\n                />\r\n              </Col>\r\n              <Col span={12}>\r\n                <GoodBadWidget\r\n                  type={1}\r\n                  value={badParts}\r\n                  setValue={updateBadParts}\r\n                  setShowModal={setShowGoodBadModal}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <div className=\"assembly136-station-info\">\r\n          <div className=\"assembly136-station-info-title\">\r\n            {\"Assembly Info\"}\r\n          </div>\r\n          <Row align={\"middle\"} className=\"assembly136-station-info-content\">\r\n            <Col\r\n              style={{ textAlign: \"center\" }}\r\n              span={6}\r\n              onClick={() => {\r\n                setShowInputModal1(true);\r\n              }}\r\n            >\r\n              <div className=\"assembly136-station-info-button\">\r\n                {\"Assembly Usage1\"}\r\n              </div>\r\n            </Col>\r\n            <Col\r\n              span={6}\r\n              onClick={() => {\r\n                setShowInputModal2(true);\r\n              }}\r\n            >\r\n              <div className=\"assembly136-station-info-button\">\r\n                {\"Assembly Usage2\"}\r\n              </div>\r\n            </Col>\r\n            <Col\r\n              span={6}\r\n              onClick={() => {\r\n                setShowInputModal3(true);\r\n              }}\r\n            >\r\n              <div className=\"assembly136-station-info-button\">\r\n                {\"Assembly Usage3\"}\r\n              </div>\r\n            </Col>\r\n            <Col\r\n              span={6}\r\n              onClick={() => {\r\n                setShowInputModal4(true);\r\n              }}\r\n            >\r\n              <div className=\"assembly136-station-info-button\">\r\n                {\"Tail Fairing\"}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssemblyStation136Layout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\CleaningStationLayout\\CleaningStationLayout.js",["490","491"],"import { Col, Row, message } from \"antd\";\r\nimport CurrentPartNotesWidget from \"components/CurrentPartNotesWidget/CurrentPartNotesWidget\";\r\nimport CurrentPartProcessingTimeWidget from \"components/CurrentPartProcessingTimeWidget/CurrentPartProcessingTimeWidget\";\r\nimport GoodBadModal from \"components/GoodBadModal/GoodBadModal\";\r\nimport GoodBadWidget from \"components/GoodBadWidget/GoodBadWidget\";\r\nimport InputModeModal from \"layouts/InputModeModal/InputModeModal\";\r\nimport PartIDInputLayout from \"layouts/PartIDInputLayout/PartIDInputLayout\";\r\nimport PartIDModal from \"layouts/PartIDModal/PartIDModal\";\r\nimport UserInfoLayout from \"layouts/UserInfoLayout/UserInfoLayout\";\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isSpinning, setAppDataStore } from \"redux/actions/appActions\";\r\nimport {\r\n  apiCallForGetCleaningStation,\r\n  apiCallForPostCleaningStation,\r\n} from \"services/apiCall\";\r\nimport { appData, secondToTime, timeToSecond, userData, factoryData } from \"services/global\";\r\nimport \"./CleaningStationLayout.css\";\r\n\r\nconst CleaningStationLayout = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { appDataStore } = useSelector((x) => x.appDataStore);\r\n  const [showInputMode, setShowInputMode] = useState(false);\r\n  const [showPartID, setShowPartID] = useState(false);\r\n  const [partID, setPartID] = useState(\"\");\r\n  const [processingTime, setProcessingTime] = useState(\"00:00:00\");\r\n  const [notes, setNotes] = useState(\"\");\r\n\r\n  const [goodParts, setGoodParts] = useState(\"0\");\r\n  const [badParts, setBadParts] = useState(\"0\");\r\n  const [showGoodBadModal, setShowGoodBadModal] = useState(false);\r\n\r\n  const [intervalId, setIntervalID] = useState(null);\r\n  const [tick, setTick] = useState(false);\r\n  const timer = () => setTick((t) => !t);\r\n  const [isStarted, setIsStarted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setGoodParts(appData.shiftGoodParts);\r\n    setBadParts(appData.shiftBadParts);\r\n  }, [appDataStore.shiftGoodParts, appDataStore.shiftBadParts]);\r\n\r\n  const updateGoodParts = (value) => {\r\n    appData.shiftGoodParts = parseInt(value);\r\n    dispatch(setAppDataStore(appData));\r\n  };\r\n\r\n  const updateBadParts = (value) => {\r\n    appData.shiftBadParts = parseInt(value);\r\n    dispatch(setAppDataStore(appData));\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isStarted) {\r\n      setProcessingTime(\r\n        moment(processingTime, \"HH:mm:ss\").add(1, \"seconds\").format(\"HH:mm:ss\")\r\n      );\r\n    }\r\n  }, [tick]);\r\n\r\n  const onPartId = (value) => {\r\n    setPartID(value);\r\n    resetTimers();\r\n    getPartInfo(value);\r\n  };\r\n\r\n  const resetTimers = () => {\r\n    setNotes(\"\");\r\n    setProcessingTime(\"00:00:00\");\r\n    setIsStarted(false);\r\n  };\r\n\r\n  const onStartClick = () => {\r\n    if (!isStarted) {\r\n      setIntervalID(setInterval(timer, 1000));\r\n      setIsStarted(true);\r\n    }\r\n  };\r\n\r\n  const onStopClick = () => {\r\n    clearInterval(intervalId);\r\n    setIsStarted(false);\r\n    reportTimes();\r\n  };\r\n\r\n  const getPartInfo = (value) => {\r\n    if (value === \"\") {\r\n      return;\r\n    }\r\n    let param = {\r\n      customer_id: factoryData.accountId,\r\n      part_id: value,\r\n    };\r\n    dispatch(isSpinning(true));\r\n    apiCallForGetCleaningStation(param)\r\n      .then((res) => {\r\n        dispatch(isSpinning(false));\r\n        let stationInfo = res[\"station\"];\r\n        setProcessingTime(secondToTime(stationInfo[\"processing_time\"]));\r\n        setNotes(stationInfo[\"notes\"]);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(isSpinning(false));\r\n        //message.error(\"Fail to get times!\");\r\n      });\r\n  };\r\n\r\n  const reportTimes = () => {\r\n    if (partID === \"\") {\r\n      message.warn(\"Please input Part ID to save times.\");\r\n      return;\r\n    }\r\n\r\n    if (factoryData.accountId === \"\") {\r\n      message.warn(\"Please login with customer id\");\r\n      return;\r\n    }\r\n\r\n    if (appData.machineName === \"\") {\r\n      message.warn(\"Please input machine name in settings page\");\r\n      return;\r\n    }\r\n\r\n    let param = {\r\n      customer_id: factoryData.accountId,\r\n      machine_id: appData.machineName,\r\n      created_at: moment().format(\"YYYY-MM-DD HH:mm:ss\") + \".000000\",\r\n      timestamp: Date.now(),\r\n      operator: userData.username_full,\r\n      part_id: partID,\r\n      date: moment().format(\"MM/DD/YYYY\"),\r\n      time: moment().format(\"HH:mm:ss\"),\r\n      processing_time: timeToSecond(processingTime),\r\n      notes: notes,\r\n    };\r\n\r\n    dispatch(isSpinning(true));\r\n    apiCallForPostCleaningStation(param)\r\n      .then((res) => {\r\n        dispatch(isSpinning(false));\r\n        message.success(\"Success to report times!\");\r\n      })\r\n      .catch((err) => {\r\n        dispatch(isSpinning(false));\r\n        message.error(\"Fail to report times!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"cleaning-station-layout\">\r\n      <InputModeModal\r\n        title={\"Please Select Input Mode\"}\r\n        showModal={showInputMode}\r\n        setShowModal={setShowInputMode}\r\n        setShowInput={setShowPartID}\r\n      />\r\n      <PartIDModal\r\n        showModal={showPartID}\r\n        setShowModal={setShowPartID}\r\n        partID={partID}\r\n        setPartID={onPartId}\r\n      />\r\n      <GoodBadModal\r\n        goodParts={goodParts}\r\n        badParts={badParts}\r\n        setGoodParts={updateGoodParts}\r\n        setBadParts={updateBadParts}\r\n        showModal={showGoodBadModal}\r\n        setShowModal={setShowGoodBadModal}\r\n      />\r\n      <div className=\"cleaning-station-title\">{\"CLEANING STATION\"}</div>\r\n      <div className=\"cleaning-station-part-id\">\r\n        <PartIDInputLayout\r\n          partID={partID}\r\n          setPartID={onPartId}\r\n          setShowInputMode={setShowInputMode}\r\n        />\r\n      </div>\r\n      <div className=\"cleaning-station-user-info\">\r\n        <UserInfoLayout />\r\n      </div>\r\n      <div className=\"cleaning-station-content\">\r\n        <Row>\r\n          <Col span={12}>\r\n            <CurrentPartProcessingTimeWidget\r\n              time={processingTime}\r\n              setTime={setProcessingTime}\r\n              onStartClick={onStartClick}\r\n              onStopClick={onStopClick}\r\n            />\r\n          </Col>\r\n          <Col span={12} style={{ paddingLeft: \"5px\" }}>\r\n            <CurrentPartNotesWidget notes={notes} setNotes={setNotes} />\r\n            <Row style={{ marginTop: \"20px\" }}>\r\n              <Col span={12}>\r\n                <GoodBadWidget\r\n                  type={0}\r\n                  value={goodParts}\r\n                  setValue={updateGoodParts}\r\n                  setShowModal={setShowGoodBadModal}\r\n                />\r\n              </Col>\r\n              <Col span={12}>\r\n                <GoodBadWidget\r\n                  type={1}\r\n                  value={badParts}\r\n                  setValue={updateBadParts}\r\n                  setShowModal={setShowGoodBadModal}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CleaningStationLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\BlastStationLayout\\BlastStationLayout.js",["492","493"],"import { Col, Row, message } from \"antd\";\r\nimport CurrentPartProcessingTimeWidget from \"components/CurrentPartProcessingTimeWidget/CurrentPartProcessingTimeWidget\";\r\nimport GoodBadModal from \"components/GoodBadModal/GoodBadModal\";\r\nimport GoodBadWidget from \"components/GoodBadWidget/GoodBadWidget\";\r\nimport UsageWidget from \"components/UsageWidget/UsageWidget\";\r\nimport InputModeModal from \"layouts/InputModeModal/InputModeModal\";\r\nimport PartIDInputLayout from \"layouts/PartIDInputLayout/PartIDInputLayout\";\r\nimport PartIDModal from \"layouts/PartIDModal/PartIDModal\";\r\nimport UserInfoLayout from \"layouts/UserInfoLayout/UserInfoLayout\";\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isSpinning, setAppDataStore } from \"redux/actions/appActions\";\r\nimport { apiCallForGetBlastStation, apiCallForPostBlastStation } from \"services/apiCall\";\r\nimport { appData, secondToTime, timeToSecond, userData, factoryData } from \"services/global\";\r\nimport \"./BlastStationLayout.css\";\r\n\r\nconst BlastStationLayout = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { appDataStore } = useSelector((x) => x.appDataStore);\r\n  const [showInputMode, setShowInputMode] = useState(false);\r\n  const [showPartID, setShowPartID] = useState(false);\r\n  const [partID, setPartID] = useState(\"\");\r\n  const [processingTime, setProcessingTime] = useState(\"00:00:00\");\r\n\r\n  const [before, setBefore] = useState(0);\r\n  const [after, setAfter] = useState(0);\r\n  const [used, setUsed] = useState(0);\r\n\r\n  const [goodParts, setGoodParts] = useState(\"0\");\r\n  const [badParts, setBadParts] = useState(\"0\");\r\n  const [showGoodBadModal, setShowGoodBadModal] = useState(false);\r\n\r\n  const [intervalId, setIntervalID] = useState(null);\r\n  const [tick, setTick] = useState(false);\r\n  const timer = () => setTick((t) => !t);\r\n  const [isStarted, setIsStarted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setGoodParts(appData.shiftGoodParts);\r\n    setBadParts(appData.shiftBadParts);\r\n  }, [appDataStore.shiftGoodParts, appDataStore.shiftBadParts]);\r\n\r\n  useEffect(() => {\r\n    setUsed(before - after);\r\n  }, [before, after]);\r\n\r\n  const updateGoodParts = (value) => {\r\n    appData.shiftGoodParts = parseInt(value);\r\n    dispatch(setAppDataStore(appData));\r\n  };\r\n\r\n  const updateBadParts = (value) => {\r\n    appData.shiftBadParts = parseInt(value);\r\n    dispatch(setAppDataStore(appData));\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isStarted) {\r\n      setProcessingTime(\r\n        moment(processingTime, \"HH:mm:ss\").add(1, \"seconds\").format(\"HH:mm:ss\")\r\n      );\r\n    }\r\n  }, [tick]);\r\n\r\n\r\n  const onPartId = (value) => {\r\n    setPartID(value);\r\n    resetTimers();\r\n    getPartInfo(value);\r\n  };\r\n\r\n  const resetTimers = () => {\r\n    setBefore(\"\");\r\n    setAfter(\"\");\r\n    setUsed(\"\");\r\n    setProcessingTime(\"00:00:00\");\r\n    setIsStarted(false);\r\n  };\r\n\r\n  const onStartClick = () => {\r\n    if (!isStarted) {\r\n\r\n      // Clear Old Timer if exists\r\n      if (intervalId) {\r\n        clearInterval(intervalId);\r\n      }\r\n\r\n      setIntervalID(setInterval(timer, 1000));\r\n      setIsStarted(true);\r\n    }\r\n  };\r\n\r\n  const onStopClick = () => {\r\n    clearInterval(intervalId);\r\n    setIsStarted(false);\r\n    reportTimes();\r\n  };\r\n\r\n  const getPartInfo = (value) => {\r\n    if (value === \"\") {\r\n      return;\r\n    }\r\n    let param = {\r\n      customer_id: factoryData.accountId,\r\n      part_id: value,\r\n    };\r\n    dispatch(isSpinning(true));\r\n    apiCallForGetBlastStation(param)\r\n      .then((res) => {\r\n        dispatch(isSpinning(false));\r\n        let stationInfo = res[\"station\"];\r\n        setProcessingTime(secondToTime(stationInfo[\"processing_time\"]));\r\n        setBefore(stationInfo[\"media_wt_before\"]);\r\n        setAfter(stationInfo[\"media_wt_after\"]);\r\n        setUsed(stationInfo[\"media_used\"]);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(isSpinning(false));\r\n        //message.error(\"Fail to get times!\");\r\n      });\r\n  };\r\n\r\n  const reportTimes = () => {\r\n    if (partID === \"\") {\r\n      message.warn(\"Please input Part ID to save times.\");\r\n      return;\r\n    }\r\n\r\n    if (factoryData.accountId === \"\") {\r\n      message.warn(\"Please login with customer id\");\r\n      return;\r\n    }\r\n\r\n    if (appData.machineName === \"\") {\r\n      message.warn(\"Please input machine name in settings page\");\r\n      return;\r\n    }\r\n\r\n    let param = {\r\n      customer_id: factoryData.accountId,\r\n      machine_id: appData.machineName,\r\n      created_at: moment().format(\"YYYY-MM-DD HH:mm:ss\") + \".000000\",\r\n      timestamp: Date.now(),\r\n      operator: userData.username_full,\r\n      part_id: partID,\r\n      date: moment().format(\"MM/DD/YYYY\"),\r\n      time: moment().format(\"HH:mm:ss\"),\r\n      processing_time: timeToSecond(processingTime),\r\n      media_wt_before: before,\r\n      media_wt_after: after,\r\n      media_used: used,\r\n    };\r\n\r\n    dispatch(isSpinning(true));\r\n    apiCallForPostBlastStation(param)\r\n      .then((res) => {\r\n        dispatch(isSpinning(false));\r\n        message.success(\"Success to report times!\");\r\n      })\r\n      .catch((err) => {\r\n        dispatch(isSpinning(false));\r\n        message.error(\"Fail to report times!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"blast-station-layout\">\r\n      <InputModeModal\r\n        title={\"Please Select Input Mode\"}\r\n        showModal={showInputMode}\r\n        setShowModal={setShowInputMode}\r\n        setShowInput={setShowPartID}\r\n      />\r\n      <PartIDModal\r\n        showModal={showPartID}\r\n        setShowModal={setShowPartID}\r\n        partID={partID}\r\n        setPartID={onPartId}\r\n      />\r\n      <GoodBadModal\r\n        goodParts={goodParts}\r\n        badParts={badParts}\r\n        setGoodParts={updateGoodParts}\r\n        setBadParts={updateBadParts}\r\n        showModal={showGoodBadModal}\r\n        setShowModal={setShowGoodBadModal}\r\n      />\r\n      <div className=\"blast-station-title\">{\"BLAST STATION\"}</div>\r\n      <div className=\"blast-station-part-id\">\r\n        <PartIDInputLayout\r\n          partID={partID}\r\n          setPartID={onPartId}\r\n          setShowInputMode={setShowInputMode}\r\n        />\r\n      </div>\r\n      <div className=\"blast-station-user-info\">\r\n        <UserInfoLayout />\r\n      </div>\r\n      <div className=\"blast-station-content\">\r\n        <Row>\r\n          <Col span={12}>\r\n            <CurrentPartProcessingTimeWidget\r\n              time={processingTime}\r\n              setTime={setProcessingTime}\r\n              onStartClick={onStartClick}\r\n              onStopClick={onStopClick}\r\n            />\r\n          </Col>\r\n          <Col span={12} style={{ paddingLeft: \"5px\" }}>\r\n            <UsageWidget\r\n              title={\"Blast Media Usage\"}\r\n              unit={\"lbs\"}\r\n              before={before}\r\n              setBefore={setBefore}\r\n              after={after}\r\n              setAfter={setAfter}\r\n              used={used}\r\n              setUsed={setUsed}\r\n            />\r\n            <Row style={{ marginTop: \"20px\" }}>\r\n              <Col span={12}>\r\n                <GoodBadWidget\r\n                  type={0}\r\n                  value={goodParts}\r\n                  setValue={updateGoodParts}\r\n                  setShowModal={setShowGoodBadModal}\r\n                />\r\n              </Col>\r\n              <Col span={12}>\r\n                <GoodBadWidget\r\n                  type={1}\r\n                  value={badParts}\r\n                  setValue={updateBadParts}\r\n                  setShowModal={setShowGoodBadModal}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlastStationLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\AssemblyStation3Layout\\AssemblyStation3Layout.js",["494","495","496"],"import { Col, Radio, Row, message } from \"antd\";\r\nimport CurrentPartProcessingTimeWidget from \"components/CurrentPartProcessingTimeWidget/CurrentPartProcessingTimeWidget\";\r\nimport GoodBadModal from \"components/GoodBadModal/GoodBadModal\";\r\nimport GoodBadWidget from \"components/GoodBadWidget/GoodBadWidget\";\r\nimport InputModeModal from \"layouts/InputModeModal/InputModeModal\";\r\nimport PartIDInputLayout from \"layouts/PartIDInputLayout/PartIDInputLayout\";\r\nimport PartIDModal from \"layouts/PartIDModal/PartIDModal\";\r\nimport UserInfoLayout from \"layouts/UserInfoLayout/UserInfoLayout\";\r\nimport { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport \"./AssemblyStation3Layout.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isSpinning, setAppDataStore } from \"redux/actions/appActions\";\r\nimport {\r\n  appData,\r\n  secondToTime,\r\n  timeToSecond,\r\n  userData,\r\n  factoryData,\r\n} from \"services/global\";\r\nimport {\r\n  apiCallForGetAssembly3Station,\r\n  apiCallForPostAssembly3Station,\r\n} from \"services/apiCall\";\r\nimport TextInputArrayModal from \"components/TextInputArrayModal/TextInputArrayModal\";\r\n\r\nconst AssemblyStation3Layout = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { appDataStore } = useSelector((x) => x.appDataStore);\r\n  const [showInputMode, setShowInputMode] = useState(false);\r\n  const [showPartID, setShowPartID] = useState(false);\r\n  const [partID, setPartID] = useState(\"\");\r\n\r\n  const [goodParts, setGoodParts] = useState(\"0\");\r\n  const [badParts, setBadParts] = useState(\"0\");\r\n  const [showGoodBadModal, setShowGoodBadModal] = useState(false);\r\n\r\n  const [inputMode, setInputMode] = useState(\"0\");\r\n  const [processingTime, setProcessingTime] = useState(\"00:00:00\");\r\n  const [notes, setNotes] = useState(\"\");\r\n\r\n  const [showInputModal, setShowInputModal] = useState(false);\r\n\r\n  const titles = [\r\n    \"mil_d_16791_non_ionic_detergent_lot\",\r\n    \"923as829_drive_lok_pins_lot\",\r\n    \"ams_s_8802_polysulfide_lot\",\r\n    \"4512421_base_plate_lt\",\r\n    \"4512422_abs_insert_lot\",\r\n    \"4512423_steel_insert_lot\",\r\n  ];\r\n\r\n  const [values, setValues] = useState([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]);\r\n\r\n  const [intervalId, setIntervalID] = useState(null);\r\n  const [tick, setTick] = useState(false);\r\n  const timer = () => setTick((t) => !t);\r\n  const [isStarted, setIsStarted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setGoodParts(appData.shiftGoodParts);\r\n    setBadParts(appData.shiftBadParts);\r\n  }, [appDataStore.shiftGoodParts, appDataStore.shiftBadParts]);\r\n\r\n  const updateGoodParts = (value) => {\r\n    appData.shiftGoodParts = parseInt(value);\r\n    dispatch(setAppDataStore(appData));\r\n  };\r\n\r\n  const updateBadParts = (value) => {\r\n    appData.shiftBadParts = parseInt(value);\r\n    dispatch(setAppDataStore(appData));\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isStarted) {\r\n      setProcessingTime(\r\n        moment(processingTime, \"HH:mm:ss\").add(1, \"seconds\").format(\"HH:mm:ss\")\r\n      );\r\n    }\r\n  }, [tick]);\r\n\r\n  const onPartId = (value) => {\r\n    setPartID(value);\r\n    resetTimers();\r\n    getPartInfo(value);\r\n  };\r\n\r\n  const resetTimers = () => {\r\n    setNotes(\"\");\r\n    setProcessingTime(\"00:00:00\");\r\n    setIsStarted(false);\r\n  };\r\n\r\n  const onStartClick = () => {\r\n    if (!isStarted) {\r\n      // Clear Old Timer if exists\r\n      if (intervalId) {\r\n        clearInterval(intervalId);\r\n      }\r\n\r\n      setIntervalID(setInterval(timer, 1000));\r\n      setIsStarted(true);\r\n    }\r\n  };\r\n\r\n  const onStopClick = () => {\r\n    clearInterval(intervalId);\r\n    setIsStarted(false);\r\n    reportTimes();\r\n  };\r\n\r\n  const getPartInfo = (value) => {\r\n    if (value === \"\") {\r\n      return;\r\n    }\r\n    let param = {\r\n      customer_id: factoryData.accountId,\r\n      part_id: value,\r\n    };\r\n    dispatch(isSpinning(true));\r\n    apiCallForGetAssembly3Station(param)\r\n      .then((res) => {\r\n        dispatch(isSpinning(false));\r\n        let stationInfo = res[\"station\"];\r\n        setProcessingTime(secondToTime(stationInfo[\"processing_time\"]));\r\n        setValues([\r\n          stationInfo[\"mil_d_16791_non_ionic_detergent_lot\"],\r\n          stationInfo[\"923as829_drive_lok_pins_lot\"],\r\n          stationInfo[\"ams_s_8802_polysulfide_lot\"],\r\n          stationInfo[\"4512421_base_plate_lt\"],\r\n          stationInfo[\"4512422_abs_insert_lot\"],\r\n          stationInfo[\"4512423_steel_insert_lot\"],\r\n        ]);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(isSpinning(false));\r\n        //message.error(\"Fail to get times!\");\r\n      });\r\n  };\r\n\r\n  const reportTimes = () => {\r\n    if (partID === \"\") {\r\n      message.warn(\"Please input Part ID to save times.\");\r\n      return;\r\n    }\r\n\r\n    if (factoryData.accountId === \"\") {\r\n      message.warn(\"Please login with customer id\");\r\n      return;\r\n    }\r\n\r\n    if (appData.machineName === \"\") {\r\n      message.warn(\"Please input machine name in settings page\");\r\n      return;\r\n    }\r\n\r\n    let param = {\r\n      customer_id: factoryData.accountId,\r\n      machine_id: appData.machineName,\r\n      created_at: moment().format(\"YYYY-MM-DD HH:mm:ss\") + \".000000\",\r\n      timestamp: Date.now(),\r\n      operator: userData.username_full,\r\n      part_id: partID,\r\n      date: moment().format(\"MM/DD/YYYY\"),\r\n      time: moment().format(\"HH:mm:ss\"),\r\n      processing_time: timeToSecond(processingTime),\r\n      p_mil_d_16791_non_ionic_detergent_lot: values[0],\r\n      p_923as829_drive_lok_pins_lot: values[1],\r\n      p_ams_s_8802_polysulfide_lot: values[2],\r\n      p_4512421_base_plate_lt: values[3],\r\n      p_4512422_abs_insert_lot: values[4],\r\n      p_4512423_steel_insert_lot: values[5],\r\n    };\r\n\r\n    dispatch(isSpinning(true));\r\n    apiCallForPostAssembly3Station(param)\r\n      .then((res) => {\r\n        dispatch(isSpinning(false));\r\n        message.success(\"Success to report times!\");\r\n      })\r\n      .catch((err) => {\r\n        dispatch(isSpinning(false));\r\n        message.error(\"Fail to report times!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"assembly3-station-layout\">\r\n      <InputModeModal\r\n        title={\"Please Select Input Mode\"}\r\n        showModal={showInputMode}\r\n        setShowModal={setShowInputMode}\r\n        setShowInput={setShowPartID}\r\n      />\r\n      <PartIDModal\r\n        showModal={showPartID}\r\n        setShowModal={setShowPartID}\r\n        partID={partID}\r\n        setPartID={onPartId}\r\n      />\r\n      <GoodBadModal\r\n        goodParts={goodParts}\r\n        badParts={badParts}\r\n        setGoodParts={updateGoodParts}\r\n        setBadParts={updateBadParts}\r\n        showModal={showGoodBadModal}\r\n        setShowModal={setShowGoodBadModal}\r\n      />\r\n      <TextInputArrayModal\r\n        showModal={showInputModal}\r\n        setShowModal={setShowInputModal}\r\n        values={values}\r\n        setValues={setValues}\r\n        titles={titles}\r\n        title={\"Assembly Usage\"}\r\n        subTitle={\"Please input Assembly Usage.\"}\r\n        span={8}\r\n      />\r\n      <div className=\"assembly3-station-title\">{\"SUB ASSEMBLY STATION\"}</div>\r\n      <div className=\"assembly3-station-top-left\">\r\n        <div className=\"assembly3-station-part-id\">\r\n          <PartIDInputLayout\r\n            partID={partID}\r\n            setPartID={onPartId}\r\n            setShowInputMode={setShowInputMode}\r\n          />\r\n        </div>\r\n        <div className=\"assembly3-station-user-info\">\r\n          <UserInfoLayout />\r\n        </div>\r\n      </div>\r\n      <div className=\"assembly3-station-top-right\">\r\n        <Radio.Group\r\n          // onChange={updateValue}\r\n          value={inputMode}\r\n          className=\"assembly3-station-option\"\r\n          onChange={(e) => {\r\n            setInputMode(e.target.value);\r\n          }}\r\n        >\r\n          <Row align={\"middle\"} style={{ marginTop: \"10px\" }}>\r\n            <Col span={24}>\r\n              <Radio value={\"0\"} style={{ color: \"white\" }}>\r\n                Barcode\r\n              </Radio>\r\n            </Col>\r\n            <Col span={24}>\r\n              <Radio value={\"1\"} style={{ color: \"white\" }}>\r\n                Manual\r\n              </Radio>\r\n            </Col>\r\n          </Row>\r\n        </Radio.Group>\r\n      </div>\r\n\r\n      <div className=\"assembly3-station-content\">\r\n        <Row>\r\n          <Col span={12}>\r\n            <CurrentPartProcessingTimeWidget\r\n              time={processingTime}\r\n              setTime={setProcessingTime}\r\n              onStartClick={onStartClick}\r\n              onStopClick={onStopClick}\r\n            />\r\n          </Col>\r\n          <Col span={12} style={{ paddingLeft: \"5px\" }}>\r\n            <Row>\r\n              <Col span={12}>\r\n                <GoodBadWidget\r\n                  type={0}\r\n                  value={goodParts}\r\n                  setValue={updateGoodParts}\r\n                  setShowModal={setShowGoodBadModal}\r\n                />\r\n              </Col>\r\n              <Col span={12}>\r\n                <GoodBadWidget\r\n                  type={1}\r\n                  value={badParts}\r\n                  setValue={updateBadParts}\r\n                  setShowModal={setShowGoodBadModal}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <div className=\"assembly3-station-info\">\r\n          <div className=\"assembly3-station-info-title\">{\"Assembly Info\"}</div>\r\n          <Row align={\"middle\"} className=\"assembly3-station-info-content\">\r\n            <Col\r\n              span={24}\r\n              style={{ cursor: \"default\" }}\r\n              onClick={() => {\r\n                setShowInputModal(true);\r\n              }}\r\n            >\r\n              <div className=\"assembly3-station-info-button\">\r\n                {\"Assembly Info Details\"}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssemblyStation3Layout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingsTopLayout\\SettingsTopLayout.js",["497","498"],"import { Col, Row } from \"antd\";\r\nimport \"./SettingsTopLayout.css\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setAppDataStore } from \"redux/actions/appActions\";\r\nimport { appData } from \"services/global\";\r\nimport backIcon from \"../../assets/icons/ic_back_arrow_w.png\";\r\n\r\nconst SettingsTopLayout = (props) => {\r\n  const { appDataStore } = useSelector((x) => x.appDataStore);\r\n  const { pages } = appDataStore;\r\n  const dispatch = useDispatch();\r\n  const onClickBack = () => {\r\n    let newPages = pages;\r\n    newPages.splice(-1);\r\n    appData.pages = newPages;\r\n    dispatch(setAppDataStore(appData));\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-top-layout\">\r\n      <Row>\r\n        <Col span={6}>\r\n          <div className=\"settings-top-layout-left\">\r\n            <a\r\n              className=\"settings-top-layout-menu-button\"\r\n              onClick={() => onClickBack()}\r\n            >\r\n              <img className=\"settings-top-layout-menu-icon\" src={backIcon} />\r\n            </a>\r\n\r\n            <div className=\"settings-top-layout-title-div\">\r\n              <span className=\"settings-top-layout-title\">{\"Settings\"}</span>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsTopLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingsServerInfoLayout\\SettingsServerInfoLayout.js",["499"],"import { Col, Row, message } from \"antd\";\r\nimport RadialInput from \"components/RadialInput/RadialInput\";\r\nimport TextInput from \"components/TextInput/TextInput\";\r\nimport { useState } from \"react\";\r\nimport \"./SettingsServerInfoLayout.css\";\r\n\r\nconst SettingsServerInfoLayout = (props) => {\r\n  const [useCustomServer, setUseCustomServer] = useState(false);\r\n  const [customServerInfo, setCustomServerInfo] = useState(\"192.168.1.36\");\r\n\r\n  return (\r\n    <div className=\"settings-server-info-layout\">\r\n      <Row align=\"middle\">\r\n        <Col span={24}>\r\n          <span className=\"settings-server-info-title\">Server Information</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"settings-server-info-content\" align={\"middle\"}>\r\n        <Col style={{ width: \"300px\" }}>\r\n          <RadialInput\r\n            value={useCustomServer}\r\n            title=\"User Custom Server\"\r\n            setValue={setUseCustomServer}\r\n          />\r\n        </Col>\r\n        {useCustomServer ? (\r\n          <Col style={{ width: \"300px\" }}>\r\n            <TextInput\r\n              value={customServerInfo}\r\n              title=\"Custom Server Info(domain or IP)\"\r\n              setValue={setCustomServerInfo}\r\n            />\r\n          </Col>\r\n        ) : (\r\n          <Col></Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsServerInfoLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingsInCycleSignalFromLayout\\SettingsInCycleSignalFromLayout.js",["500","501"],"import { Col, Radio, Row, message } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport \"./SettingsInCycleSignalFromLayout.css\";\r\n\r\nconst SettingsInCycleSignalFromLayout = (props) => {\r\n  const { appSetting, setAppSetting } = props;\r\n\r\n  const setInCycleSignalFrom = (value) => {\r\n    var newSetting = { ...appSetting, inCycleSignalFrom: value };\r\n    setAppSetting(newSetting);\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-in-cyle-layout\">\r\n      <Row align=\"middle\">\r\n        <Col span={24}>\r\n          <span className=\"settings-in-cyle-title\">In Cycle Signal From</span>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Radio.Group\r\n        // onChange={updateValue}\r\n        value={appSetting.inCycleSignalFrom}\r\n        className=\"app-setting-in-cyle-option\"\r\n        onChange={(e) => {\r\n          console.log(\"Selected Switch:\", e.target.value);\r\n          setInCycleSignalFrom(e.target.value);\r\n        }}\r\n      >\r\n        <Row>\r\n          <Col span={12}>\r\n            <Radio value={0} style={{ color: \"white\" }}>\r\n              PLC\r\n            </Radio>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Radio value={1} style={{ color: \"white\" }}>\r\n              Process Monitor\r\n            </Radio>\r\n          </Col>\r\n        </Row>\r\n      </Radio.Group>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsInCycleSignalFromLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingsAppInfoLayout\\SettingsAppInfoLayout.js",["502","503"],"import { Col, Row, message } from \"antd\";\r\nimport TextInput from \"components/TextInput/TextInput\";\r\nimport { useState } from \"react\";\r\nimport \"./SettingsAppInfoLayout.css\";\r\n\r\nconst SettingsAppInfoLayout = (props) => {\r\n  const [appVersion, setAppVersion] = useState(\"V8.75\");\r\n\r\n  const onEditJobID = () => {\r\n    message.info(\"onEditJobID Clicked\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-app-info-layout\">\r\n      <Row align=\"middle\">\r\n        <Col span={24}>\r\n          <span className=\"settings-app-info-title\">App Information</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"settings-app-info-content\" align={\"middle\"}>\r\n        <Col flex=\"200px\">\r\n          <TextInput\r\n            value={appVersion}\r\n            title=\"Current Version\"\r\n            disabled={true}\r\n          />\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          <span className=\"settings-app-version-desc\">\r\n            Your version is up to date.\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsAppInfoLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingTempDataSourceLayout\\SettingTempDataSourceLayout.js",["504","505","506","507","508","509","510"],"import { useSelector } from \"react-redux\";\r\nimport \"./SettingTempDataSourceLayout.css\";\r\nimport { PlayCircleFilled } from \"@ant-design/icons\";\r\nimport { Col, Radio, Row, message } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { Parser } from \"html-to-react\";\r\nimport TextInput from \"components/TextInput/TextInput\";\r\nimport RadialInput from \"components/RadialInput/RadialInput\";\r\n\r\nconst SettingTempDataSourceLayout = (props) => {\r\n  const { appSetting, setAppSetting } = props;\r\n\r\n  const TempDataSources = [\r\n    { value: 0, title: \"Manual Entry\" },\r\n    { value: 1, title: \"llot Link\" },\r\n    { value: 2, title: \"PLC\" },\r\n  ];\r\n\r\n  const tempDataSourceOptions = TempDataSources.map((tdSource) => {\r\n    return (\r\n      <Col\r\n        className=\"app-setting-temp_data_source-option-item\"\r\n        span={8}\r\n        key={TempDataSources.indexOf(tdSource)}\r\n      >\r\n        <Radio value={tdSource.value} style={{ color: \"white\" }}>\r\n          {tdSource.title}\r\n        </Radio>\r\n      </Col>\r\n    );\r\n  });\r\n\r\n  const setTemperatureDataSource = (value) => {\r\n    var newSetting = { ...appSetting, temperatureDataSource: value };\r\n    //newSetting[field] = value;\r\n    //setAppSetting({ ...newSetting });\r\n    setAppSetting(newSetting);\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-temp_data_source-layout\">\r\n      <Row align=\"middle\">\r\n        <Col span={24}>\r\n          <span className=\"settings-temp_data_source-title\">\r\n            Temperature Data Source\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Radio.Group\r\n        // onChange={updateValue}\r\n        value={appSetting.temperatureDataSource}\r\n        className=\"app-setting-temp_data_source-option\"\r\n        onChange={(e) => {\r\n          setTemperatureDataSource(e.target.value);\r\n        }}\r\n      >\r\n        <Row>{tempDataSourceOptions}</Row>\r\n      </Radio.Group>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingTempDataSourceLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingGanttChartLayout\\SettingGanttChartLayout.js",["511"],"import { Col, Row } from \"antd\";\r\nimport OptionInput from \"components/OptionInput/OptionInput\";\r\nimport { useState } from \"react\";\r\nimport SettingGanttChartCalcLayout from \"./SettingGanttChartCalcLayout/SettingGanttChartCalcLayout\";\r\nimport \"./SettingGanttChartLayout.css\";\r\n\r\nconst SettingGanttChartLayout = (props) => {\r\n  const { appSetting, setAppSetting } = props;\r\n  \r\n  const setGanttChartSettings = (field, value) => {\r\n    var newSetting = { ...appSetting };\r\n    newSetting[field] = value;\r\n    setAppSetting({ ...newSetting });\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-gantt-chart-layout\">\r\n      <Row align=\"middle\">\r\n        <Col span={24}>\r\n          <span className=\"settings-gantt-chart-title\">\r\n            {\"Gantt Chart Settings\"}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n      <div className=\"settings-gantt-chart-content\">\r\n        <Row>\r\n          <Col span={12}>\r\n            <OptionInput\r\n              span={24}\r\n              initValue={appSetting}\r\n              field=\"gantt_chart_display\"\r\n              updateValue={setGanttChartSettings}\r\n              title={[\r\n                \"Show gantt data from 00:00 to 23:00\",\r\n                \"Show gantt data from 00:00 to current time\",\r\n                \"Show Daily Goal Chart\",\r\n              ]}\r\n            />\r\n          </Col>\r\n          {appSetting[\"gantt_chart_display\"] === \"2\" && (\r\n            <Col span={12}>\r\n              <SettingGanttChartCalcLayout\r\n                appSetting={appSetting}\r\n                setAppSetting={setAppSetting}\r\n              />\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingGanttChartLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingProcessMonitorLayout\\SettingProcessMonitorLayout.js",["512"],"import { Col, Radio, Row, message } from \"antd\";\r\nimport \"./SettingProcessMonitorLayout.css\";\r\n\r\nconst SettingProcessMonitorLayout = (props) => {\r\n  const { appSetting, setAppSetting } = props;\r\n\r\n  const processMonitorTypes = [\r\n    { value: 0, title: \"None\" },\r\n    { value: 1, title: \"Time Logger\" },\r\n    { value: 2, title: \"Cleaning Station\" },\r\n    { value: 3, title: \"Blast Station\" },\r\n    { value: 4, title: \"Paint Station\" },\r\n    { value: 5, title: \"Assembly Station 137\" },\r\n    { value: 6, title: \"Assembly Station 136\" },\r\n    { value: 7, title: \"Assembly Station 3\" },\r\n    { value: 8, title: \"Quality\" },\r\n  ];\r\n\r\n  const setProcessType = (value) => {\r\n    var newSetting = { ...appSetting, process: value };\r\n    setAppSetting(newSetting);\r\n  };\r\n\r\n  const processMonitorTypeOptions = processMonitorTypes.map((pmType) => {\r\n    return (\r\n      <Col\r\n        className=\"app-setting-process-monitor-option-item\"\r\n        span={6}\r\n        key={processMonitorTypes.indexOf(pmType)}\r\n      >\r\n        <Radio value={pmType.value} style={{ color: \"white\" }}>\r\n          {pmType.title}\r\n        </Radio>\r\n      </Col>\r\n    );\r\n  });\r\n\r\n  const onEditJobID = () => {\r\n    message.info(\"onEditJobID Clicked\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-process-monitor-layout\">\r\n      <Row align=\"middle\">\r\n        <Col span={24}>\r\n          <span className=\"settings-process-monitor-title\">\r\n            Choose Type For Process Monitor\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Radio.Group\r\n        // onChange={updateValue}\r\n        value={appSetting.process}\r\n        className=\"app-setting-process-monitor-option\"\r\n        onChange={(e) => {\r\n          setProcessType(e.target.value);\r\n        }}\r\n      >\r\n        <Row>{processMonitorTypeOptions}</Row>\r\n      </Radio.Group>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingProcessMonitorLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingTimeLayout\\SettingTimeLayout.js",["513"],"import { Col, Row } from \"antd\";\r\nimport TextInputGroup from \"components/TextInputGroup/TextInputGroup\";\r\nimport { useState } from \"react\";\r\nimport \"./SettingTimeLayout.css\";\r\n\r\nconst SettingTimeLayout = (props) => {\r\n  const { appSetting, setAppSetting } = props;\r\n  // const [ appSetting, setAppSetting ] = useState({\r\n  //   time_stop: \"00:01:30\",\r\n  //   time_production: \"08:00:00\",\r\n  // });\r\n\r\n  if (!appSetting.hasOwnProperty(\"time_stop\")) {\r\n    setAppSetting({ ...appSetting, time_stop: \"00:01:30\" });\r\n  }\r\n\r\n  if (!appSetting.hasOwnProperty(\"time_production\")) {\r\n    setAppSetting({ ...appSetting, time_production: \"08:00:00\" });\r\n  }\r\n\r\n  const commafy = (num) => {\r\n    var str = num.toString().split(\".\");\r\n    if (str[0].length >= 5) {\r\n      str[0] = str[0].replace(/(\\d)(?=(\\d{3})+$)/g, \"$1,\");\r\n    }\r\n    if (str[1] && str[1].length >= 5) {\r\n      str[1] = str[1].replace(/(\\d{3})/g, \"$1 \");\r\n    }\r\n    return str.join(\".\");\r\n  };\r\n\r\n  const getSecondFromTime = (time) => {\r\n    var timeList = time.split(\":\");\r\n    var hr = isNaN(parseInt(timeList[0])) ? 0 : parseInt(timeList[0]);\r\n    var min = isNaN(parseInt(timeList[1])) ? 0 : parseInt(timeList[1]);\r\n    var sec = isNaN(parseInt(timeList[2])) ? 0 : parseInt(timeList[2]);\r\n    return hr * 3600 + min * 60 + sec;\r\n  };\r\n\r\n  const setTimeSettings = (field, value) => {\r\n    var newSetting = { ...appSetting };\r\n    newSetting[field] = value;\r\n    setAppSetting({ ...newSetting });\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-time-layout\">\r\n      <Row align=\"middle\">\r\n        <Col span={24}>\r\n          <span className=\"settings-time-title\">Time Settings</span>\r\n        </Col>\r\n      </Row>\r\n      <div className=\"settings-time-content\">\r\n        <Row>\r\n          <Col span={12}>\r\n            <TextInputGroup\r\n              initValue={appSetting}\r\n              field=\"time_stop\"\r\n              updateValue={setTimeSettings}\r\n              title={`Stop Time Limit (${commafy(\r\n                getSecondFromTime(appSetting.time_stop)\r\n              )} s)`}\r\n              isCenter={true}\r\n              input_type=\"time-setting\"\r\n            />\r\n          </Col>\r\n          <Col span={12}>\r\n            <TextInputGroup\r\n              initValue={appSetting}\r\n              field=\"time_production\"\r\n              updateValue={setTimeSettings}\r\n              title={\"Planned Production Time\"}\r\n              isCenter={true}\r\n              input_type=\"time-setting\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingTimeLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingDowntimeLayout\\SettingDowntimeLayout.js",["514"],"import { Col, Row } from \"antd\";\r\nimport TextInputGroup from \"components/TextInputGroup/TextInputGroup\";\r\nimport { useState } from \"react\";\r\nimport \"./SettingDowntimeLayout.css\";\r\n\r\nconst SettingDowntimeLayout = (props) => {\r\n  const { appSetting, setAppSetting } = props;\r\n\r\n  const downtimeSettingsTitles = [\r\n    { key: \"downtime_reason1\", title: \"Downtune Reason1\" },\r\n    { key: \"downtime_reason2\", title: \"Downtune Reason2\" },\r\n    { key: \"downtime_reason3\", title: \"Downtune Reason3\" },\r\n    { key: \"downtime_reason4\", title: \"Downtune Reason4\" },\r\n    { key: \"downtime_reason5\", title: \"Downtune Reason5\" },\r\n    { key: \"downtime_reason6\", title: \"Downtune Reason6\" },\r\n    { key: \"downtime_reason7\", title: \"Downtune Reason7\" },\r\n    { key: \"downtime_reason8\", title: \"Downtune Reason8\" },\r\n  ];\r\n\r\n  const setDowntimeTitle = (field, value) => {\r\n    var newSetting = { ...appSetting, [field]: value };\r\n    //newSetting[field] = value;\r\n    //setAppSetting({ ...newSetting });\r\n    setAppSetting(newSetting);\r\n  };\r\n\r\n  const downtimeSettingsTextInputs = downtimeSettingsTitles.map((dTitle) => {\r\n    return (\r\n      <Col className=\"app-setting-downtime-item\" span={6} key={dTitle.key}>\r\n        <TextInputGroup\r\n          initValue={appSetting}\r\n          title={dTitle.title}\r\n          field={dTitle.key}\r\n          updateValue={setDowntimeTitle}\r\n        />\r\n      </Col>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"settings-downtime-layout\">\r\n      <Row align=\"middle\">\r\n        <Col span={24}>\r\n          <span className=\"settings-downtime-title\">Downtime Settings</span>\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n        {downtimeSettingsTextInputs}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingDowntimeLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingAuxDataLayout\\SettingAuxDataLayout.js",["515"],"import { Col, Row } from \"antd\";\r\nimport TextInputGroup from \"components/TextInputGroup/TextInputGroup\";\r\nimport { useState } from \"react\";\r\nimport \"./SettingAuxDataLayout.css\";\r\n\r\nconst SettingAuxDataLayout = (props) => {\r\n  const { appSetting, setAppSetting } = props;\r\n\r\n  const auxDataTitles = [\r\n    { key: \"auxData1\", title: \"Aux1Data\" },\r\n    { key: \"auxData2\", title: \"Aux2Data\" },\r\n    { key: \"auxData3\", title: \"Aux3Data\" },\r\n  ];\r\n\r\n  const setAuxSettings = (field, value) => {\r\n    var newSetting = { ...appSetting };\r\n    newSetting[field] = value;\r\n    setAppSetting(newSetting);\r\n  };\r\n\r\n  const auxDataTextInputs = auxDataTitles.map((dTitle) => {\r\n    return (\r\n      <Col span={8} key={dTitle.key}>\r\n        <TextInputGroup\r\n          initValue={appSetting}\r\n          title={dTitle.title}\r\n          field={dTitle.key}\r\n          updateValue={setAuxSettings}\r\n        />\r\n      </Col>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"settings-auxData-layout\">\r\n      <Row align=\"middle\">\r\n        <Col span={24}>\r\n          <span className=\"settings-auxData-title\">AuxData Title Settings</span>\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n        {auxDataTextInputs}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingAuxDataLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingCycleStopAlertLayout\\SettingCycleStopAlertLayout.js",["516","517"],"import { Col, Row, message } from \"antd\";\r\nimport RadialInputGroup from \"components/RadialInputGroup/RadialInputGroup\";\r\nimport TextInputGroup from \"components/TextInputGroup/TextInputGroup\";\r\nimport TextWithIcon from \"components/TextWithIcon/TextWithIcon\";\r\nimport CycleAlertInfoModal from \"layouts/CycleAlertInfo/CycleAlertInfoModal\";\r\nimport { useState } from \"react\";\r\nimport cycleStopAlertIcon from \"../../assets/icons/ic_machine_name.png\";\r\nimport \"./SettingCycleStopAlertLayout.css\";\r\n\r\nconst SettingCycleStopAlertLayout = (props) => {\r\n  const { appSetting, setAppSetting } = props;\r\n  // const [appSetting, setAppSetting] = useState({\r\n  //   cycle_send_alert: \"0\",\r\n  //   cycle_email1: \"aa@aa.com\",\r\n  //   cycle_email2: \"\",\r\n  //   cycle_email3: \"\",\r\n  // });\r\n\r\n  const [cycleAlertInfoModal, setCycleAlertInfoModal] = useState(false);\r\n\r\n  const setCycleStopSettings = (field, value) => {\r\n    var newSetting = { ...appSetting };\r\n    newSetting[field] = value;\r\n    setAppSetting({ ...newSetting });\r\n  };\r\n\r\n  const emailValidation = (fieldName, value) => {\r\n    if (value === \"\") return true;\r\n    if (\r\n      /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\r\n        value\r\n      )\r\n    ) {\r\n      return true;\r\n    }\r\n    message.error(`Please enter a valid email for ${fieldName}`);\r\n    return false;\r\n  };\r\n\r\n  const timeValidation = (fieldName, value) => {\r\n    var timeList = value.split(\":\");\r\n    if (\r\n      timeList.length != 3 ||\r\n      isNaN(parseInt(timeList[0])) ||\r\n      isNaN(parseInt(timeList[1])) ||\r\n      isNaN(parseInt(timeList[2])) ||\r\n      parseInt(timeList[1]) >= 60 ||\r\n      parseInt(timeList[2]) >= 60\r\n    ) {\r\n      message.error(`Please enter a valid time for ${fieldName}`);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const validate_info = (values) => {\r\n    var res = true;\r\n\r\n    res = timeValidation(\"Stop Time Limit\", values.time_stop);\r\n    if (res === false) return false;\r\n    res = timeValidation(\"Planned Production Time\", values.time_production);\r\n    if (res === false) return false;\r\n\r\n    res = emailValidation(\"Alert Email1\", values.cycle_email1);\r\n    if (res === false) return false;\r\n    res = emailValidation(\"Alert Email2\", values.cycle_email2);\r\n    if (res === false) return false;\r\n    res = emailValidation(\"Alert Email3\", values.cycle_email3);\r\n    if (res === false) return false;\r\n\r\n    return res;\r\n  };\r\n\r\n  const onClickInfoIcon = () => {\r\n    setCycleAlertInfoModal(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-cycle-stop-alert-layout\">\r\n      <CycleAlertInfoModal\r\n        cycleAlertInfoModal={cycleAlertInfoModal}\r\n        setCycleAlertInfoModal={setCycleAlertInfoModal}\r\n      />\r\n      <Row align=\"middle\" className=\"settings-cycle-stop-alert-title\">\r\n        <Col span={24}>\r\n          <TextWithIcon\r\n            text={\"Cyle Stop Alert\"}\r\n            icon={cycleStopAlertIcon}\r\n            marginLeft={\"30px\"}\r\n            iconSize={\"35px\"}\r\n            fontSize={\"21px\"}\r\n            iconBottom={\"2px\"}\r\n            iconClick={onClickInfoIcon}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <div className=\"settings-cycle-stop-alert-content\">\r\n        <Row>\r\n          <Col span={6}>\r\n            <RadialInputGroup\r\n              initValue={appSetting}\r\n              field=\"cycle_send_alert\"\r\n              updateValue={setCycleStopSettings}\r\n              title={\"Send Alert\"}\r\n            />\r\n          </Col>\r\n          <Col span={6}>\r\n            <TextInputGroup\r\n              initValue={appSetting}\r\n              field=\"cycle_email1\"\r\n              updateValue={setCycleStopSettings}\r\n              title={\"Alert Email 1\"}\r\n              input_type=\"email\"\r\n            />\r\n          </Col>\r\n          <Col span={6}>\r\n            <TextInputGroup\r\n              initValue={appSetting}\r\n              field=\"cycle_email2\"\r\n              updateValue={setCycleStopSettings}\r\n              title={\"Alert Email 2\"}\r\n              input_type=\"email\"\r\n            />\r\n          </Col>\r\n          <Col span={6}>\r\n            <TextInputGroup\r\n              initValue={appSetting}\r\n              field=\"cycle_email3\"\r\n              updateValue={setCycleStopSettings}\r\n              title={\"Alert Email 3\"}\r\n              input_type=\"email\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingCycleStopAlertLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingShiftTimeLayout\\SettingShiftTimeLayout.js",["518","519","520","521"],"import { useSelector } from \"react-redux\";\r\nimport \"./SettingShiftTimeLayout.css\";\r\nimport { Col, Radio, Row, message } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport TextInputGroup from \"components/TextInputGroup/TextInputGroup\";\r\nimport { shiftSettingInfo } from \"services/global\";\r\n\r\nconst SettingShiftTimeLayout = (props) => {\r\n  const { appSetting, setAppSetting } = props;\r\n  // const [appSetting, setAppSetting] = useState({\r\n  //   shift1_ppt: \"00:00:30\",\r\n  //   shift2_ppt: \"05:00:00\",\r\n  //   shift3_ppt: \"05:00:00\",\r\n  // });\r\n\r\n  const setShiftPPTSettings = (field, value) => {\r\n    var newSetting = { ...appSetting };\r\n    newSetting[field] = value;\r\n    setAppSetting({ ...newSetting });\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-shift-time-layout\">\r\n      <Row align=\"middle\">\r\n        <Col span={24}>\r\n          <span className=\"settings-shift-time-title\">\r\n            Shifts Planned Production Time Settings\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n      <div className=\"settings-shift-time-content\">\r\n        <Row>\r\n          <Col span={8}>\r\n            <TextInputGroup\r\n              initValue={appSetting}\r\n              field=\"shift1_ppt\"\r\n              updateValue={setShiftPPTSettings}\r\n              title={\r\n                shiftSettingInfo[0] === \"\" || shiftSettingInfo[0] === undefined\r\n                  ? \"Shift1\"\r\n                  : `Shift1 (${shiftSettingInfo[0]})`\r\n              }\r\n              isCenter={true}\r\n              input_type=\"time-setting\"\r\n            />\r\n          </Col>\r\n          <Col span={8}>\r\n            <TextInputGroup\r\n              initValue={appSetting}\r\n              field=\"shift2_ppt\"\r\n              updateValue={setShiftPPTSettings}\r\n              title={\r\n                shiftSettingInfo[1] === \"\" || shiftSettingInfo[1] === undefined\r\n                  ? \"Shift2\"\r\n                  : `Shift2 (${shiftSettingInfo[1]})`\r\n              }\r\n              isCenter={true}\r\n              input_type=\"time-setting\"\r\n            />\r\n          </Col>\r\n          <Col span={8}>\r\n            <TextInputGroup\r\n              initValue={appSetting}\r\n              field=\"shift3_ppt\"\r\n              updateValue={setShiftPPTSettings}\r\n              title={\r\n                shiftSettingInfo[2] === \"\" || shiftSettingInfo[2] === undefined\r\n                  ? \"Shift3\"\r\n                  : `Shift3 (${shiftSettingInfo[2]})`\r\n              }\r\n              isCenter={true}\r\n              input_type=\"time-setting\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingShiftTimeLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\MaintenanceTopLayout\\MaintenanceTopLayout.js",["522","523"],"import { Col, Row } from \"antd\";\r\nimport \"./MaintenanceTopLayout.css\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setAppDataStore } from \"redux/actions/appActions\";\r\nimport { appData } from \"services/global\";\r\nimport backIcon from \"../../assets/icons/ic_back_arrow_w.png\";\r\n\r\n\r\n\r\nconst MaintenanceTopLayout = (props) => {\r\n  const { appDataStore } = useSelector((x) => x.appDataStore);\r\n  const { pages } = appDataStore;\r\n  const dispatch = useDispatch();\r\n  const onClickBack = () => {\r\n    let newPages = pages;\r\n    newPages.splice(-1);\r\n    appData.pages = newPages;\r\n    dispatch(setAppDataStore(appData));\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"maintenance-top-layout\">\r\n      <Row>\r\n        <Col span={6}>\r\n          <div className=\"maintenance-top-layout-left\">\r\n            <a\r\n              className=\"maintenance-top-layout-menu-button\"\r\n              onClick={() => onClickBack()}\r\n            >\r\n              <img\r\n                className=\"maintenance-top-layout-menu-icon\"\r\n                src={backIcon}\r\n              />\r\n            </a>\r\n\r\n            <div className=\"maintenance-top-layout-title-div\">\r\n              <span className=\"maintenance-top-layout-title\">\r\n                {\"Maintenance\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaintenanceTopLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingCSLockLayout\\SettingCSLockLayout.js",["524"],"import { Col, Row } from \"antd\";\r\nimport RadialInputGroup from \"components/RadialInputGroup/RadialInputGroup\";\r\nimport { useState } from \"react\";\r\nimport \"./SettingCSLockLayout.css\";\r\n\r\nconst SettingCSLockLayout = (props) => {\r\n  const { appSetting, setAppSetting } = props;\r\n\r\n  const setCSLockSettings = (field, value) => {\r\n    var newSetting = { ...appSetting };\r\n    newSetting[field] = value;\r\n    setAppSetting({ ...newSetting });\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-cslock-layout\">\r\n      <Row align=\"middle\">\r\n        <Col span={24}>\r\n          <span className=\"settings-cslock-title\">CSLock Settings</span>\r\n        </Col>\r\n      </Row>\r\n      <div className=\"settings-cslock-content\">\r\n        <Row>\r\n          <Col span={12}>\r\n            <RadialInputGroup\r\n              initValue={appSetting}\r\n              field=\"cslock_cycle\"\r\n              updateValue={setCSLockSettings}\r\n              title={\"Use Cycle Start Interlock\"}\r\n            />\r\n          </Col>\r\n          <Col span={12}>\r\n            <RadialInputGroup\r\n              initValue={appSetting}\r\n              field=\"cslock_reverse\"\r\n              updateValue={setCSLockSettings}\r\n              title={\"CSLock Normally Open\"}\r\n            />\r\n          </Col>\r\n          <Col span={12}>\r\n            <RadialInputGroup\r\n              initValue={appSetting}\r\n              field=\"cslock_guest\"\r\n              updateValue={setCSLockSettings}\r\n              title={\"Quest Lock\"}\r\n            />\r\n          </Col>\r\n          <Col span={12}>\r\n            <RadialInputGroup\r\n              initValue={appSetting}\r\n              field=\"cslock_alert\"\r\n              updateValue={setCSLockSettings}\r\n              title={\"Enable Alert Sount\"}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingCSLockLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingAutomaticCounterLayout\\SettingAutomaticCounterLayout.js",["525"],"import { Col, Row } from \"antd\";\r\nimport RadialInputGroup from \"components/RadialInputGroup/RadialInputGroup\";\r\nimport SliderInput from \"components/SliderInput/SliderInput\";\r\nimport TextInputGroup from \"components/TextInputGroup/TextInputGroup\";\r\nimport { useState } from \"react\";\r\nimport \"./SettingAutomaticCounterLayout.css\";\r\n\r\nconst SettingAutomaticCounterLayout = (props) => {\r\n  const { appSetting, setAppSetting } = props;\r\n  // const [appSetting, setAppSetting] = useState({\r\n  //   automatic_part: \"0\",\r\n  //   automatic_min_time: \"10\",\r\n  //   automatic_part_per_cycle: \"1\",\r\n  // });\r\n\r\n  const setAppSettings = (field, value) => {\r\n    var newSetting = { ...appSetting };\r\n    newSetting[field] = value;\r\n    setAppSetting({ ...newSetting });\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-automatic-parts-counter-layout\">\r\n      <Row align=\"middle\">\r\n        <Col span={24}>\r\n          <span className=\"settings-automatic-parts-counter-title\">\r\n            {\"Automatic Parts Counter\"}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n      <div className=\"settings-automatic-parts-counter-content\">\r\n        <Row>\r\n          <Col span={6}>\r\n            <RadialInputGroup\r\n              initValue={appSetting}\r\n              field=\"automatic_part\"\r\n              updateValue={setAppSettings}\r\n              title={\"Automatic Count\"}\r\n            />\r\n          </Col>\r\n          <Col span={12}>\r\n            <SliderInput\r\n              initValue={appSetting}\r\n              field=\"automatic_min_time\"\r\n              updateValue={setAppSettings}\r\n              title={`Min Elapsed Cycle Time(${appSetting.automatic_min_time}s)`}\r\n            />\r\n          </Col>\r\n          <Col span={6}>\r\n            <TextInputGroup\r\n              initValue={appSetting}\r\n              field=\"automatic_part_per_cycle\"\r\n              updateValue={setAppSettings}\r\n              title={\"Parts per cycle\"}\r\n              input_type=\"number\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingAutomaticCounterLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingMachineInfoLayout\\SettingMachineInfoLayout.js",["526"],"import { Col, Row } from \"antd\";\r\nimport TextInput from \"components/TextInput/TextInput\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport deviceBluetoothIcon from \"../../assets/icons/ic_device_bluetooth.png\";\r\nimport deviceSelectIcon from \"../../assets/icons/ic_device_select.png\";\r\nimport machinenNameIcon from \"../../assets/icons/ic_machine_name.png\";\r\nimport AccountIDModal from \"./AccountIDModal/AccountIDModal\";\r\nimport \"./SettingMachineInfoLayout.css\";\r\n\r\nconst SettingMachineInfoLayout = (props) => {\r\n  const { appSetting, setAppSetting } = props;\r\n  const { factoryDataStore } = useSelector((x) => x.factoryDataStore);\r\n  const [showAccountID, setShowAccountID] = useState(false);\r\n  const [deviceAddress, setDeviceAddress] = useState(\"79:56:CE:25:30:55\");\r\n\r\n  const { accountId } = factoryDataStore;\r\n\r\n  const onClickBlueTooth = () => {};\r\n\r\n  const onClickAccountId = () => {\r\n    setShowAccountID(true);\r\n  };\r\n\r\n  const setMachineName = (value) => {\r\n    var newSetting = { ...appSetting, machineName: value };\r\n    setAppSetting(newSetting);\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-machine-info-layout\">\r\n      <AccountIDModal\r\n        showModal={showAccountID}\r\n        setShowModal={setShowAccountID}\r\n      />\r\n      <Row align=\"middle\">\r\n        <Col span={24}>\r\n          <span className=\"settings-machine-info-title\">\r\n            Machine Information\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"settings-machine-info-content\" align={\"middle\"}>\r\n        <Col span={12}>\r\n          <div>\r\n            <TextInput\r\n              title={\"Machine Name\"}\r\n              value={appSetting.machineName}\r\n              setValue={setMachineName}\r\n            />\r\n            <img\r\n              src={machinenNameIcon}\r\n              className=\"app-setting-machine-info-icon\"\r\n              alt=\"machine-name\"\r\n            />\r\n          </div>\r\n        </Col>\r\n\r\n        {/* This is not used */}\r\n        <Col span={8} style={{ paddingLeft: \"20px\", display:\"none\" }}>\r\n          <div onClick={onClickBlueTooth}>\r\n            <TextInput\r\n              title={\"Device Address\"}\r\n              value={deviceAddress}\r\n              setValue={setDeviceAddress}\r\n              disabled={true}\r\n            />\r\n            <img\r\n              src={deviceBluetoothIcon}\r\n              className=\"app-setting-machine-info-icon\"\r\n              alt=\"bluetooth\"\r\n            />\r\n          </div>\r\n        </Col>\r\n\r\n        <Col span={12} style={{ paddingLeft: \"20px\" }}>\r\n          <div onClick={onClickAccountId}>\r\n            <TextInput title={\"Account ID\"} value={accountId} disabled={true} />\r\n            <img\r\n              src={deviceSelectIcon}\r\n              className=\"app-setting-machine-info-icon\"\r\n              alt=\"machine-setting\"\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingMachineInfoLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingMachineInfoLayout\\AccountIDModal\\AccountIDModal.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\SettingGanttChartLayout\\SettingGanttChartCalcLayout\\SettingGanttChartCalcLayout.js",["527","528","529"],"import { Select } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./SettingGanttChartCalcLayout.css\";\r\nimport TextInputGroup from \"components/TextInputGroup/TextInputGroup\";\r\nimport OptionInput from \"components/OptionInput/OptionInput\";\r\nimport { gdtFomulars } from \"services/CONSTANTS\"\r\n\r\nconst { Option } = Select;\r\n\r\nfunction SettingGanttChartCalcLayout(props) {\r\n  const { appSetting, setAppSetting } = props;\r\n  \r\n  const setGDTSettings = (field, value) => {\r\n    var newSetting = { ...appSetting };\r\n    newSetting[field] = value;\r\n    setAppSetting({ ...newSetting });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TextInputGroup\r\n        initValue={appSetting}\r\n        field=\"calc_chart_title\"\r\n        updateValue={setGDTSettings}\r\n        title=\"Title\"\r\n        input_type=\"text\"\r\n      />\r\n      <div className=\"settings-gantt-chart-calc-option-container\">\r\n        <div>Formula</div>\r\n        <Select\r\n          style={{ width: \"100%\" }}\r\n          popupClassName=\"settings-gantt-chart-calc-dropdown\"\r\n          value={appSetting[\"calc_chart_formula\"]}\r\n          onChange={(e) => setGDTSettings(\"calc_chart_formula\", e)}\r\n        >\r\n          {gdtFomulars.map((x) => {\r\n            return (\r\n              <Option\r\n                className=\"settings-gantt-chart-calc-dropdown-item\"\r\n                key={`formula-${x[\"id\"]}`}\r\n                value={x[\"id\"]}\r\n              >\r\n                {x[\"name\"]}\r\n              </Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      </div>\r\n\r\n      <div className=\"settings-gantt-chart-calc-option-container\">\r\n        <div>Parameter</div>\r\n        <Select\r\n          style={{ width: \"100%\" }}\r\n          className=\"page-changer-style\"\r\n          popupClassName=\"settings-gantt-chart-calc-dropdown\"\r\n          value={appSetting[\"calc_chart_option\"]}\r\n          onChange={(e) => setGDTSettings(\"calc_chart_option\", e)}\r\n        >\r\n          <Option\r\n            className=\"settings-gantt-chart-calc-dropdown-item\"\r\n            key={`option-0`}\r\n            value=\"0\"\r\n          >\r\n            None\r\n          </Option>\r\n\r\n          <Option\r\n            className=\"settings-gantt-chart-calc-dropdown-item\"\r\n            key={`option-1`}\r\n            value=\"1\"\r\n          >\r\n            Current Operator\r\n          </Option>\r\n\r\n          <Option\r\n            className=\"settings-gantt-chart-calc-dropdown-item\"\r\n            key={`option-2`}\r\n            value=\"2\"\r\n          >\r\n            Current Job ID\r\n          </Option>\r\n        </Select>\r\n      </div>\r\n\r\n      <TextInputGroup\r\n        initValue={appSetting}\r\n        field=\"calc_chart_unit\"\r\n        updateValue={setGDTSettings}\r\n        title=\"Display Units\"\r\n        input_type=\"text\"\r\n      />\r\n\r\n      <div className=\"settings-gantt-chart-calc-option-container\">\r\n        <OptionInput\r\n          span={12}\r\n          initValue={appSetting}\r\n          field=\"calc_chart_disp_mode\"\r\n          updateValue={setGDTSettings}\r\n          title={[\"Show Unit\", \"Show %\"]}\r\n        />\r\n      </div>\r\n\r\n      <TextInputGroup\r\n        initValue={appSetting}\r\n        field=\"calc_chart_max_value\"\r\n        updateValue={setGDTSettings}\r\n        title=\"Daily Target\"\r\n        input_type=\"number\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingGanttChartCalcLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\TankTimeWidget\\TankTimeWidget.js",["530","531"],"import { Col, Row } from \"antd\";\r\nimport editIcon from \"../../assets/icons/ic_jobid_edit.png\";\r\nimport \"./TankTimeWidget.css\";\r\n\r\nconst TankTimeWidget = (props) => {\r\n  const {\r\n    times,\r\n    setTimes,\r\n    index,\r\n    selectedTankIndex,\r\n    setSelectedTankIndex,\r\n    setShowTemperatureModal,\r\n    temps,\r\n    title,\r\n  } = props;\r\n\r\n  return (\r\n    <Row align={\"middle\"} className=\"time-logger-tank-time-layout\">\r\n      <Col flex=\"50px\">{title}</Col>\r\n      <Col\r\n        flex=\"auto\"\r\n        style={{\r\n          textAlign: \"center\",\r\n          color: index === selectedTankIndex ? \"red\" : \"white\",\r\n          cursor: \"default\",\r\n        }}\r\n        onClick={() => {\r\n          setSelectedTankIndex(index);\r\n        }}\r\n      >\r\n        {times[index]}\r\n      </Col>\r\n      <Col\r\n        flex=\"50px\"\r\n        style={{ color: \"red\", cursor:\"default\" }}\r\n        onClick={() => {\r\n          setShowTemperatureModal(true);\r\n        }}\r\n      >{`${temps[index]}°F`}</Col>\r\n      <Col flex=\"50px\">\r\n        <img\r\n          src={editIcon}\r\n          style={{ width: \"30px\", height: \"30px\" }}\r\n          onClick={() => {\r\n            setShowTemperatureModal(true);\r\n          }}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default TankTimeWidget;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\TextInputGroup\\TextInputGroup.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\RadialInputGroup\\RadialInputGroup.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\SliderInput\\SliderInput.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\CycleAlertInfo\\CycleAlertInfoModal.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\OptionInput\\OptionInput.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\TextInputArrayModal\\TextInputArrayModal.js",["532"],"import { Button, Col, Row } from \"antd\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./TextInputArrayModal.css\";\r\n\r\nfunction TextInputArrayModal(props) {\r\n  const authData = useSelector((x) => x.authService);\r\n  const {\r\n    showModal,\r\n    setShowModal,\r\n    values,\r\n    setValues,\r\n    titles,\r\n    title,\r\n    subTitle,\r\n    span,\r\n  } = props;\r\n\r\n  const [mValues, setMValues] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setMValues(values);\r\n  }, [values]);\r\n\r\n  const setTemperature = (index, value) => {\r\n    let tmpValues = [...mValues];\r\n    tmpValues[index] = value; //parseFloat(value);\r\n    setMValues(tmpValues);\r\n  };\r\n\r\n  const inputUI = mValues.map((temp, index) => {\r\n    return (\r\n      <Col span={span} key={\"key-\" + index}>\r\n        <div className=\"text-input-array-text-input-container\">\r\n          <div className=\"text-input-array-text-input-title\">\r\n            {titles[index]}\r\n          </div>\r\n          <input\r\n            className=\"text-input-array-text-input-value\"\r\n            value={temp}\r\n            onChange={(e) => setTemperature(index, e.target.value)}\r\n            type=\"text\"\r\n            style={{ outlineStyle: \"none\" }}\r\n          />\r\n        </div>\r\n      </Col>\r\n    );\r\n  });\r\n\r\n  useEffect(() => {\r\n    setMValues(values);\r\n  }, [values]);\r\n\r\n  const onCancel = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const onOK = () => {\r\n    setValues(mValues);\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        centered\r\n        open={showModal}\r\n        className=\"text-input-array-dialog-style\"\r\n        title={null}\r\n        onCancel={() => onCancel()}\r\n        closable={false}\r\n        maskClosable={false}\r\n        destroyOnClose={true}\r\n        header={null}\r\n        footer={null}\r\n      >\r\n        <div>\r\n          <Row align=\"middle\" className=\"text-input-array-dialog-top\">\r\n            <Col>\r\n              <span className=\"text-input-array-dialog-title\">{title}</span>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"text-input-array-dialog-content\">\r\n            <Col span={24} style={{ textAlign: \"center\" }}>\r\n              <span className=\"text-input-array-dialog-input-desc\">\r\n                {subTitle}\r\n              </span>\r\n            </Col>\r\n            <Col span={24}>\r\n              <Row>{inputUI}</Row>\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n              <Button\r\n                className=\"text-input-array-dialog-button\"\r\n                style={{ marginRight: \"5px\" }}\r\n                onClick={onCancel}\r\n                type=\"primary\"\r\n              >\r\n                {\"Cancel\"}\r\n              </Button>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Button\r\n                className=\"text-input-array-dialog-button\"\r\n                style={{ marginLeft: \"5px\" }}\r\n                onClick={onOK}\r\n                type=\"primary\"\r\n              >\r\n                {\"Ok\"}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextInputArrayModal;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\PartIDModal\\PartIDModal.js",["533"],"import { Button, Col, Row } from \"antd\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./PartIDModal.css\";\r\n\r\nfunction PartIDModal(props) {\r\n  const authData = useSelector((x) => x.authService);\r\n  const { showModal, setShowModal, partID, setPartID } = props;\r\n  const [pID, setPID] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setPID(partID);\r\n  }, [partID]);\r\n\r\n  const onCancel = () => {\r\n    setPID(partID)\r\n    setShowModal(false);\r\n  };\r\n\r\n  const onOK = () => {\r\n    setPartID(pID);\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        centered\r\n        open={showModal}\r\n        className=\"part-id-dialog-style\"\r\n        title={null}\r\n        onCancel={() => onCancel()}\r\n        closable={false}\r\n        maskClosable={false}\r\n        destroyOnClose={true}\r\n        header={null}\r\n        footer={null}\r\n      >\r\n        <div>\r\n          <Row align=\"middle\" className=\"part-id-dialog-top\">\r\n            <Col>\r\n              <span className=\"part-id-dialog-title\">Part ID Input</span>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"part-id-dialog-content\">\r\n            <Col span={24} style={{ textAlign: \"center\" }}>\r\n              <span className=\"part-id-dialog-input-desc\">\r\n                Please Input Part ID\r\n              </span>\r\n            </Col>\r\n            <Col span={24}>\r\n              <input\r\n                className=\"part-id-dialog-input\"\r\n                value={pID}\r\n                onChange={(e) => setPID(e.target.value)}\r\n                style={{ outlineStyle: \"none\" }}\r\n              />\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n              <Button\r\n                className=\"part-id-dialog-button\"\r\n                style={{ marginRight: \"5px\" }}\r\n                onClick={onCancel}\r\n                type=\"primary\"\r\n              >\r\n                {\"Cancel\"}\r\n              </Button>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Button\r\n                className=\"part-id-dialog-button\"\r\n                style={{ marginLeft: \"5px\" }}\r\n                onClick={onOK}\r\n                type=\"primary\"\r\n              >\r\n                {\"Ok\"}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PartIDModal;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\PartIDInputLayout\\PartIDInputLayout.js",["534"],"import { Col, Row, message } from \"antd\";\r\nimport logoutIcon from \"../../assets/icons/ic_logout_app.png\";\r\nimport qrCodeIcon from \"../../assets/icons/ic_qrcode_scan.png\";\r\nimport \"./PartIDInputLayout.css\";\r\n\r\nconst PartIDInputLayout = (props) => {\r\n  const { setShowInputMode, partID, setPartID } = props;\r\n\r\n  const onLogout = () => {\r\n    setPartID(\"\");\r\n  };\r\n\r\n  return (\r\n    <Row align={\"middle\"} className=\"part-id-input-layout\">\r\n      <Col flex={\"85px\"}>{\"Part ID : \"}</Col>\r\n      <Col flex={\"auto\"} style={{ cursor: \"default\" }}>\r\n        {partID}\r\n      </Col>\r\n      <Col\r\n        flex={\"50px\"}\r\n        style={{ textAlign: \"right\" }}\r\n        onClick={() => {\r\n          setShowInputMode(true);\r\n        }}\r\n      >\r\n        <img\r\n          src={qrCodeIcon}\r\n          style={{ width: \"30px\", height: \"30px\" }}\r\n          alt=\"qrcode\"\r\n        />\r\n      </Col>\r\n      <Col\r\n        flex={\"50px\"}\r\n        style={{ textAlign: \"right\" }}\r\n        onClick={() => {\r\n          onLogout();\r\n        }}\r\n      >\r\n        <img\r\n          src={logoutIcon}\r\n          style={{ width: \"30px\", height: \"30px\" }}\r\n          alt=\"logout\"\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default PartIDInputLayout;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\CurrentPartProcessingTimeWidget\\CurrentPartProcessingTimeWidget.js",["535","536"],"import { Col, Row } from \"antd\";\r\nimport \"./CurrentPartProcessingTimeWidget.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst CurrentPartProcessingTimeWidget = (props) => {\r\n  const {time, setTime, onStartClick, onStopClick} = props;\r\n\r\n  return (\r\n    <div className=\"current-part-processing-time-layout\">\r\n      <div className=\"current-part-processing-time-title\">\r\n        {\"Current Part Processing Time\"}\r\n      </div>\r\n      <Row align={\"middle\"} style={{ height: \"80px\" }}>\r\n        <Col\r\n          flex=\"120px\"\r\n          className=\"current-part-processing-time-start-button\"\r\n          onClick={() => {\r\n            onStartClick();\r\n          }}\r\n        >\r\n          {\"Start\"}\r\n        </Col>\r\n        <Col flex=\"auto\" className=\"current-part-processing-time-value\">\r\n          {time}\r\n        </Col>\r\n        <Col\r\n          flex=\"120px\"\r\n          className=\"current-part-processing-time-stop-button\"\r\n          onClick={() => {\r\n            onStopClick();\r\n          }}\r\n        >\r\n          {\"Stop\"}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentPartProcessingTimeWidget;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\UsageWidget\\UsageWidget.js",["537","538"],"import { Col, Row } from \"antd\";\r\nimport \"./UsageWidget.css\";\r\nimport { useState } from \"react\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\n\r\nconst UsageWidget = (props) => {\r\n  const { title, before, setBefore, after, setAfter, used, setUsed, unit } = props;\r\n  \r\n  return (\r\n    <div className=\"usage-layout\">\r\n      <div className=\"usage-title\">{title}</div>\r\n      <Row align={\"middle\"} style={{ height: \"80px\" }}>\r\n        <Col span={8} className=\"usage-input\">\r\n          {\"Before\"}\r\n          <div>\r\n            <div className=\"usage-value\">\r\n              <input\r\n                className=\"text-input\"\r\n                value={before}\r\n                type=\"number\"\r\n                onChange={(e) => setBefore(e.target.value)}\r\n                style={{ outlineStyle: \"none\" }}\r\n              />\r\n            </div>\r\n            <div className=\"usage-unit\">{unit}</div>\r\n          </div>\r\n        </Col>\r\n        <Col span={8} className=\"usage-input\">\r\n          {\"After\"}\r\n          <div>\r\n            <div className=\"usage-value\">\r\n              <input\r\n                className=\"text-input\"\r\n                value={after}\r\n                type=\"number\"\r\n                onChange={(e) => setAfter(e.target.value)}\r\n                style={{ outlineStyle: \"none\" }}\r\n              />\r\n            </div>\r\n            <div className=\"usage-unit\">{unit}</div>\r\n          </div>\r\n        </Col>\r\n        <Col span={8} className=\"usage-input\">\r\n          {\"Used\"}\r\n          <div>\r\n            <div className=\"usage-value\">\r\n              <input\r\n                className=\"text-input\"\r\n                value={used}\r\n                type=\"number\"\r\n                onChange={(e) => setUsed(e.target.value)}\r\n                style={{ outlineStyle: \"none\" }}\r\n              />\r\n            </div>\r\n            <div className=\"usage-unit\">{unit}</div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsageWidget;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\CurrentPartNotesWidget\\CurrentPartNotesWidget.js",["539"],"import TextArea from \"antd/lib/input/TextArea\";\r\nimport { useState } from \"react\";\r\nimport \"./CurrentPartNotesWidget.css\";\r\n\r\nconst CurrentPartNotesWidget = (props) => {\r\n  const { notes, setNotes } = props;\r\n  return (\r\n    <div className=\"current-part-notes-layout\">\r\n      <div className=\"current-part-notes-title\">{\"Current Part Notes\"}</div>\r\n      <TextArea\r\n        className=\"current-part-notes-textarea\"\r\n        rows={3}\r\n        max\r\n        placeholder=\"Add Notes Here\"\r\n        value={notes}\r\n        onChange={(e) => {\r\n          setNotes(e.target.value);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentPartNotesWidget;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\AmbientPaintWidget\\AmbientPaintWidget.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\layouts\\RejectReasonsModal\\RejectReasonsModal.js",["540","541"],"import { Button, Col, Row } from \"antd\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./RejectReasonsModal.css\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\n\r\nfunction RejectReasonsModal(props) {\r\n  const { showModal, setShowModal, titles, setTitles, index } = props;\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setTitle(titles[index]);\r\n  }, [titles, index]);\r\n\r\n  const onCancel = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const onOK = () => {\r\n    let newTitles = titles;\r\n    newTitles[index] = title;\r\n    setTitles(newTitles);\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        centered\r\n        open={showModal}\r\n        className=\"reject-reason-title-dialog-style\"\r\n        title={null}\r\n        onCancel={() => onCancel()}\r\n        closable={false}\r\n        maskClosable={false}\r\n        destroyOnClose={true}\r\n        header={null}\r\n        footer={null}\r\n      >\r\n        <div>\r\n          <Row align=\"middle\" className=\"reject-reason-title-dialog-top\">\r\n            <Col>\r\n              <span className=\"reject-reason-title-dialog-title\">\r\n                {\"Edit Title\"}\r\n              </span>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"reject-reason-title-dialog-content\">\r\n            <Col span={24} style={{ textAlign: \"center\" }}>\r\n              <span className=\"reject-reason-title-dialog-input-desc\">\r\n                {\"Please Input Title\"}\r\n              </span>\r\n            </Col>\r\n            <Col span={24}>\r\n              <input\r\n                className=\"reject-reason-title-dialog-input\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                style={{ outlineStyle: \"none\" }}\r\n              />\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n              <Button\r\n                className=\"reject-reason-title-dialog-button\"\r\n                style={{ marginRight: \"5px\" }}\r\n                onClick={onCancel}\r\n                type=\"primary\"\r\n              >\r\n                {\"Cancel\"}\r\n              </Button>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Button\r\n                className=\"reject-reason-title-dialog-button\"\r\n                style={{ marginLeft: \"5px\" }}\r\n                onClick={onOK}\r\n                type=\"primary\"\r\n              >\r\n                {\"Ok\"}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RejectReasonsModal;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\RecordPhosphateTestInfoModal\\RecordPhosphateTestInfoModal.js",["542","543","544","545"],"import { Button, Col, Row, Radio, message } from \"antd\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport { DatePicker, TimePicker} from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport moment from 'moment';\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isSpinning, setAppDataStore } from \"redux/actions/appActions\";\r\nimport { apiCallForRecordPhosphateTestInfo } from \"services/apiCall\";\r\nimport { appData, userData, factoryData } from \"services/global\";\r\n\r\nimport \"./RecordPhosphateTestInfoModal.css\";\r\n\r\nfunction RecordPhosphateTestInfo(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { showModal, setShowModal, partID } = props;\r\n\r\n  const dateFormat = 'MM/DD/YYYY';\r\n  const timeFormat = 'HH:mm:ss';\r\n  \r\n  // Use moment\r\n  const currentDate = moment();\r\n  const formattedDate = currentDate.format(dateFormat);\r\n  const formattedTime = currentDate.format(timeFormat);\r\n  console.log('Init Date:', formattedDate);\r\n  console.log('Init Time:', formattedTime);\r\n\r\n  const [rDate, setRDate] = useState(formattedDate);\r\n  const [rTime, setRTime] = useState(formattedTime);\r\n\r\n  useEffect(() => {\r\n    setRDate(formattedDate)\r\n    setRTime(formattedTime)\r\n  });\r\n\r\n  const handleDateChange = (date, dateString) => {\r\n    setRDate(dateString);\r\n    console.log('Selected Date:', dateString);\r\n  };\r\n\r\n  const handleTimeChange = (time, timeString) => {\r\n    setRTime(timeString);\r\n    console.log('Selected Time:', timeString);\r\n  };\r\n\r\n  const [weight, setWeight] = useState(\"0\");\r\n  const [optionWaterBreak, setOptionWaterBreak] = useState(\"-1\");\r\n\r\n  const onCancel = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const onOK = () => {\r\n    reportData()\r\n  };\r\n\r\n  const reportData = () => {\r\n\r\n    if (factoryData.accountId === \"\") {\r\n      message.warn(\"Please login with customer id\");\r\n      return;\r\n    }\r\n\r\n    if (appData.machineName === \"\") {\r\n      message.warn(\"Please input machine name in settings page\");\r\n      return;\r\n    }\r\n\r\n    if (partID === \"\") {\r\n      message.warn(\"Please input Part ID.\");\r\n      return;\r\n    }\r\n\r\n    let param = {\r\n      customer_id: factoryData.accountId,\r\n      machine_id: appData.machineName,\r\n      operator: userData.username_full,\r\n      part_id: partID,\r\n      created_at: moment().format(\"YYYY-MM-DD HH:mm:ss\") + \".000000\",\r\n      timestamp: Date.now(),\r\n      date: rDate,\r\n      time: rTime,\r\n      weight: weight,\r\n      water_break: optionWaterBreak === \"0\" ? \"Pass\" : (optionWaterBreak === \"1\" ? \"Fail\" : \"\"),\r\n    };\r\n\r\n    dispatch(isSpinning(true));\r\n    apiCallForRecordPhosphateTestInfo(param)\r\n      .then((res) => {\r\n        setShowModal(false);\r\n        dispatch(isSpinning(false));\r\n        message.success(\"Success to save test info!\");\r\n      })\r\n      .catch((err) => {\r\n        setShowModal(false);\r\n        dispatch(isSpinning(false));\r\n        message.error(\"Fail to report data!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        centered\r\n        open={showModal}\r\n        className=\"record-phosphate-testinfo-dialog-style\"\r\n        title={null}\r\n        onCancel={() => onCancel()}\r\n        closable={false}\r\n        maskClosable={false}\r\n        destroyOnClose={true}\r\n        header={null}\r\n        footer={null}\r\n      >\r\n        <div>\r\n          <Row align=\"middle\" className=\"record-phosphate-testinfo-dialog-top\">\r\n            <Col>\r\n              <span className=\"record-phosphate-testinfo-dialog-title\">\r\n                {\"Record Phosphate Test Info\"}\r\n              </span>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"record-phosphate-testinfo-dialog-content\">\r\n            <Col span={8}>\r\n              <div className=\"record-phosphate-testinfo-input-container left-aligned\">\r\n                <div className=\"record-phosphate-testinfo-input-title\">\r\n                  {\"Testing Date\"}\r\n                </div>\r\n                <DatePicker defaultValue={currentDate} format={dateFormat} onChange={handleDateChange}/>\r\n              </div>\r\n            </Col>\r\n\r\n            <Col span={8}>\r\n              <div className=\"record-phosphate-testinfo-input-container left-aligned\">\r\n                <div className=\"record-phosphate-testinfo-input-title\">\r\n                  {\"Time\"}\r\n                </div>\r\n                <TimePicker defaultValue={currentDate} format={timeFormat} onChange={handleTimeChange}/>\r\n              </div>\r\n            </Col>\r\n\r\n            <Col span={8}>\r\n              <div className=\"record-phosphate-testinfo-input-container\">\r\n                <div className=\"record-phosphate-testinfo-input-title\">\r\n                  {\"Weight\"}\r\n                </div>\r\n                <input\r\n                  className=\"record-phosphate-testinfo-input-value\"\r\n                  value={weight}\r\n                  onChange={(e) => setWeight(e.target.value)}\r\n                  type=\"number\"\r\n                  step=\"0.1\"\r\n                  min='0'\r\n                  max='100000'\r\n                  style={{ outlineStyle: \"none\" }}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"record-phosphate-testinfo-dialog-content\">\r\n            <Col span={24}>\r\n              <div className=\"record-phosphate-testinfo-input-container\">\r\n                <div className=\"record-phosphate-testinfo-input-title left-aligned\">\r\n                  {\"Water Break\"}\r\n                </div>\r\n                <Radio.Group\r\n                  // onChange={updateValue}\r\n                  value={optionWaterBreak}\r\n                  className=\"app-setting-in-cyle-option\"\r\n                  onChange={(e) => {\r\n                    setOptionWaterBreak(e.target.value);\r\n                  }}\r\n                >\r\n                  <Row>\r\n                    <Col span={12}>\r\n                      <Radio value={\"0\"} style={{ color: \"white\" }}>\r\n                        Pass\r\n                      </Radio>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                      <Radio value={\"1\"} style={{ color: \"white\" }}>\r\n                        Fail\r\n                      </Radio>\r\n                    </Col>\r\n                  </Row>\r\n                </Radio.Group>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"record-phosphate-testinfo-dialog-content\">\r\n            <Col span={12}>\r\n              <Button\r\n                className=\"record-phosphate-testinfo-dialog-button\"\r\n                style={{ marginRight: \"5px\" }}\r\n                onClick={onCancel}\r\n                type=\"primary\"\r\n              >\r\n                {\"Cancel\"}\r\n              </Button>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Button\r\n                className=\"record-phosphate-testinfo-dialog-button\"\r\n                style={{ marginLeft: \"5px\" }}\r\n                onClick={onOK}\r\n                type=\"primary\"\r\n              >\r\n                {\"Ok\"}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Use Date() function\r\n/*const currentDate = new Date();\r\nconst formattedDate = currentDate.toLocaleDateString('en-US', {\r\n  year: 'numeric',\r\n  month: '2-digit',\r\n  day: '2-digit'\r\n});\r\nconst hours = String(currentDate.getHours()).padStart(2, \"0\");\r\nconst minutes = String(currentDate.getMinutes()).padStart(2, \"0\");\r\nconst seconds = String(currentDate.getSeconds()).padStart(2, \"0\");\r\nconst formattedTime = '${hours}:${minutes}:${seconds}';\r\nconsole.log('Selected Date:', formattedDate);\r\nconsole.log('Selected Time:', formattedTime);*/\r\n\r\nexport default RecordPhosphateTestInfo;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\redux\\reducers\\factoryReducer.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\redux\\actions\\factoryActions.js",[],"F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\pages\\MachineStatus\\MachineStatus.js",["546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562"],"// @flow strict\r\n\r\nimport { message, Button, Col, Divider, Input, Row, Drawer } from \"antd\";\r\nimport { useAuth } from \"navigation/ProvideAuth\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./MachineStatus.css\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport MachineStatusButton from \"components/MachineStatusButton/MachineStatusButton\";\r\nimport { STATUS_COLORS } from \"services/CONSTANTS\";\r\nimport { appData, isValidTime, setAppData } from \"services/global\";\r\nimport { setAppDataStore } from \"redux/actions/appActions\";\r\n\r\nfunction MachineStatus(props) {\r\n  const dispatch = useDispatch();\r\n  const [isBusy, setIsBusy] = useState(false);\r\n  const [elapsedIdleTime, setElapsedIdleTime] = useState(\"00:10:05\");\r\n  const [statusTime, setStausTime] = useState(\"00:04:05\");\r\n  const [selectedStatus, setSelectedStatus] = useState(\"Clear Chips\");\r\n\r\n  const history = useHistory();\r\n\r\n  const onClick = () => {};\r\n\r\n  return (\r\n    <div className=\"machine-status-page\">\r\n      <Row align=\"middle\" className=\"machine-status-top\">\r\n        <Col span={24}>\r\n          <span className=\"machine-status-title\">\r\n            Elapsed Idle Time : {elapsedIdleTime}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n\r\n      <div className=\"machine-status-content\">\r\n        <Row className=\"machine-status-button-row\">\r\n          <Col span={12} style={{ width: \"100%\", height: \"100%\" }}>\r\n            <MachineStatusButton\r\n              status={STATUS_COLORS[0][\"status\"]}\r\n              selectedStatus={selectedStatus}\r\n              statusTime={statusTime}\r\n              setSelectedStatus={setSelectedStatus}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={12} style={{ width: \"100%\", height: \"100%\" }}>\r\n            <MachineStatusButton\r\n              marginLeft={\"10px\"}\r\n              status={STATUS_COLORS[1][\"status\"]}\r\n              selectedStatus={selectedStatus}\r\n              statusTime={statusTime}\r\n              setSelectedStatus={setSelectedStatus}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"machine-status-button-row\">\r\n          <Col span={12} style={{ width: \"100%\", height: \"100%\" }}>\r\n            <MachineStatusButton\r\n              status={STATUS_COLORS[2][\"status\"]}\r\n              selectedStatus={selectedStatus}\r\n              statusTime={statusTime}\r\n              setSelectedStatus={setSelectedStatus}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={12} style={{ width: \"100%\", height: \"100%\" }}>\r\n            <MachineStatusButton\r\n              marginLeft={\"10px\"}\r\n              status={STATUS_COLORS[3][\"status\"]}\r\n              selectedStatus={selectedStatus}\r\n              statusTime={statusTime}\r\n              setSelectedStatus={setSelectedStatus}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"machine-status-button-row\">\r\n          <Col span={12} style={{ width: \"100%\", height: \"100%\" }}>\r\n            <MachineStatusButton\r\n              status={STATUS_COLORS[4][\"status\"]}\r\n              selectedStatus={selectedStatus}\r\n              statusTime={statusTime}\r\n              setSelectedStatus={setSelectedStatus}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={12} style={{ width: \"100%\", height: \"100%\" }}>\r\n            <MachineStatusButton\r\n              marginLeft={\"10px\"}\r\n              status={STATUS_COLORS[5][\"status\"]}\r\n              selectedStatus={selectedStatus}\r\n              statusTime={statusTime}\r\n              setSelectedStatus={setSelectedStatus}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"machine-status-button-row\">\r\n          <Col span={12} style={{ width: \"100%\", height: \"100%\" }}>\r\n            <MachineStatusButton\r\n              status={STATUS_COLORS[6][\"status\"]}\r\n              selectedStatus={selectedStatus}\r\n              statusTime={statusTime}\r\n              setSelectedStatus={setSelectedStatus}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={12} style={{ width: \"100%\", height: \"100%\" }}>\r\n            <MachineStatusButton\r\n              marginLeft={\"10px\"}\r\n              status={STATUS_COLORS[7][\"status\"]}\r\n              selectedStatus={selectedStatus}\r\n              statusTime={statusTime}\r\n              setSelectedStatus={setSelectedStatus}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n      <Row\r\n        align=\"middle\"\r\n        className=\"machine-status-close\"\r\n        onClick={() => {\r\n          let newPages = [...appData.pages];\r\n          newPages.splice(-1);\r\n          appData.pages = [... newPages];\r\n          dispatch(setAppDataStore(appData));\r\n        }}\r\n      >\r\n        <Col span={24}>\r\n          <span className=\"machine-status-close-text\">Close</span>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MachineStatus;\r\n","F:\\Home\\ITSMMS\\MMS-WebMobile\\mms-react\\src\\components\\MachineStatusButton\\MachineStatusButton.js",["563","564","565","566"],"// @flow strict\r\n\r\nimport { Col, Input, Row, message } from \"antd\";\r\nimport React from \"react\";\r\nimport \"./MachineStatusButton.css\";\r\n\r\nfunction MachineStatusButton(props) {\r\n  const {\r\n    statusTime,\r\n    setStausTime,\r\n    selectedStatus,\r\n    setSelectedStatus,\r\n    status,\r\n    marginLeft,\r\n    marginRight,\r\n  } = props;\r\n\r\n  const onClick = () => {\r\n    setSelectedStatus(status)\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      className=\"machine-status-button\"\r\n      style={{\r\n        backgroundColor:\r\n          status === selectedStatus\r\n            ? \"rgba(206, 15, 253, 0.7)\"\r\n            : \"rgba(255, 255, 255, 0.6)\",\r\n        marginLeft: marginLeft !== undefined ? marginLeft : \"0px\",\r\n      }}\r\n      align=\"middle\"\r\n      onClick={()=>onClick()}\r\n    >\r\n      <Col span={24} style={{ textAlign: \"center\" }}>\r\n        <div style={{ display: \"block\" }}>\r\n          <div\r\n            className=\"machine-status-text\"\r\n            style={{\r\n              color: status === selectedStatus ? \"white\" : \"black\",\r\n            }}\r\n            align=\"middle\"\r\n          >\r\n            {status}\r\n          </div>\r\n          <div\r\n            className=\"machine-status-text\"\r\n            style={{\r\n              color: status === selectedStatus ? \"white\" : \"black\",\r\n            }}\r\n            align=\"middle\"\r\n          >\r\n            {statusTime}\r\n          </div>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default MachineStatusButton;\r\n",{"ruleId":"567","replacedBy":"568"},{"ruleId":"569","replacedBy":"570"},{"ruleId":"571","severity":1,"message":"572","line":29,"column":6,"nodeType":"573","endLine":29,"endColumn":18,"suggestions":"574"},{"ruleId":"575","severity":1,"message":"576","line":6,"column":9,"nodeType":"577","messageId":"578","endLine":6,"endColumn":17},{"ruleId":"571","severity":1,"message":"572","line":54,"column":6,"nodeType":"573","endLine":54,"endColumn":8,"suggestions":"579"},{"ruleId":"571","severity":1,"message":"580","line":43,"column":6,"nodeType":"573","endLine":43,"endColumn":8,"suggestions":"581"},{"ruleId":"575","severity":1,"message":"582","line":24,"column":10,"nodeType":"577","messageId":"578","endLine":24,"endColumn":18},{"ruleId":"571","severity":1,"message":"583","line":39,"column":6,"nodeType":"573","endLine":74,"endColumn":4,"suggestions":"584"},{"ruleId":"575","severity":1,"message":"585","line":25,"column":16,"nodeType":"577","messageId":"578","endLine":25,"endColumn":23},{"ruleId":"575","severity":1,"message":"586","line":3,"column":20,"nodeType":"577","messageId":"578","endLine":3,"endColumn":27},{"ruleId":"575","severity":1,"message":"587","line":23,"column":24,"nodeType":"577","messageId":"578","endLine":23,"endColumn":39},{"ruleId":"575","severity":1,"message":"588","line":24,"column":27,"nodeType":"577","messageId":"578","endLine":24,"endColumn":45},{"ruleId":"575","severity":1,"message":"589","line":27,"column":18,"nodeType":"577","messageId":"578","endLine":27,"endColumn":27},{"ruleId":"590","severity":1,"message":"591","line":49,"column":9,"nodeType":"592","endLine":49,"endColumn":80},{"ruleId":"593","severity":1,"message":"594","line":50,"column":11,"nodeType":"592","endLine":50,"endColumn":66},{"ruleId":"593","severity":1,"message":"594","line":70,"column":11,"nodeType":"592","endLine":70,"endColumn":84},{"ruleId":"575","severity":1,"message":"595","line":8,"column":22,"nodeType":"577","messageId":"578","endLine":8,"endColumn":34},{"ruleId":"575","severity":1,"message":"595","line":8,"column":22,"nodeType":"577","messageId":"578","endLine":8,"endColumn":34},{"ruleId":"575","severity":1,"message":"596","line":14,"column":22,"nodeType":"577","messageId":"578","endLine":14,"endColumn":35},{"ruleId":"575","severity":1,"message":"597","line":16,"column":28,"nodeType":"577","messageId":"578","endLine":16,"endColumn":47},{"ruleId":"575","severity":1,"message":"598","line":17,"column":26,"nodeType":"577","messageId":"578","endLine":17,"endColumn":43},{"ruleId":"575","severity":1,"message":"599","line":19,"column":35,"nodeType":"577","messageId":"578","endLine":19,"endColumn":61},{"ruleId":"575","severity":1,"message":"582","line":6,"column":10,"nodeType":"577","messageId":"578","endLine":6,"endColumn":18},{"ruleId":"575","severity":1,"message":"600","line":17,"column":9,"nodeType":"577","messageId":"578","endLine":17,"endColumn":23},{"ruleId":"575","severity":1,"message":"601","line":18,"column":26,"nodeType":"577","messageId":"578","endLine":18,"endColumn":30},{"ruleId":"593","severity":1,"message":"594","line":46,"column":9,"nodeType":"592","endLine":49,"endColumn":11},{"ruleId":"593","severity":1,"message":"594","line":57,"column":9,"nodeType":"592","endLine":60,"endColumn":11},{"ruleId":"593","severity":1,"message":"594","line":68,"column":9,"nodeType":"592","endLine":71,"endColumn":11},{"ruleId":"593","severity":1,"message":"594","line":79,"column":9,"nodeType":"592","endLine":82,"endColumn":11},{"ruleId":"593","severity":1,"message":"594","line":90,"column":9,"nodeType":"592","endLine":93,"endColumn":11},{"ruleId":"593","severity":1,"message":"594","line":101,"column":9,"nodeType":"592","endLine":104,"endColumn":11},{"ruleId":"593","severity":1,"message":"594","line":42,"column":11,"nodeType":"592","endLine":50,"endColumn":13},{"ruleId":"593","severity":1,"message":"594","line":63,"column":11,"nodeType":"592","endLine":71,"endColumn":13},{"ruleId":"575","severity":1,"message":"582","line":6,"column":10,"nodeType":"577","messageId":"578","endLine":6,"endColumn":18},{"ruleId":"575","severity":1,"message":"582","line":8,"column":10,"nodeType":"577","messageId":"578","endLine":8,"endColumn":18},{"ruleId":"575","severity":1,"message":"602","line":2,"column":10,"nodeType":"577","messageId":"578","endLine":2,"endColumn":18},{"ruleId":"590","severity":1,"message":"591","line":27,"column":13,"nodeType":"592","endLine":30,"endColumn":14},{"ruleId":"593","severity":1,"message":"594","line":31,"column":15,"nodeType":"592","endLine":34,"endColumn":17},{"ruleId":"575","severity":1,"message":"586","line":1,"column":23,"nodeType":"577","messageId":"578","endLine":1,"endColumn":30},{"ruleId":"575","severity":1,"message":"603","line":9,"column":9,"nodeType":"577","messageId":"578","endLine":9,"endColumn":17},{"ruleId":"575","severity":1,"message":"604","line":7,"column":23,"nodeType":"577","messageId":"578","endLine":7,"endColumn":34},{"ruleId":"571","severity":1,"message":"605","line":93,"column":6,"nodeType":"573","endLine":93,"endColumn":8,"suggestions":"606"},{"ruleId":"571","severity":1,"message":"607","line":106,"column":6,"nodeType":"573","endLine":106,"endColumn":12,"suggestions":"608"},{"ruleId":"575","severity":1,"message":"609","line":35,"column":10,"nodeType":"577","messageId":"578","endLine":35,"endColumn":15},{"ruleId":"571","severity":1,"message":"605","line":102,"column":6,"nodeType":"573","endLine":102,"endColumn":8,"suggestions":"610"},{"ruleId":"571","severity":1,"message":"611","line":110,"column":6,"nodeType":"573","endLine":110,"endColumn":12,"suggestions":"612"},{"ruleId":"571","severity":1,"message":"605","line":119,"column":6,"nodeType":"573","endLine":119,"endColumn":8,"suggestions":"613"},{"ruleId":"571","severity":1,"message":"611","line":127,"column":6,"nodeType":"573","endLine":127,"endColumn":12,"suggestions":"614"},{"ruleId":"571","severity":1,"message":"615","line":89,"column":6,"nodeType":"573","endLine":89,"endColumn":8,"suggestions":"616"},{"ruleId":"571","severity":1,"message":"617","line":93,"column":33,"nodeType":"618","endLine":93,"endColumn":34},{"ruleId":"619","severity":1,"message":"620","line":163,"column":30,"nodeType":"621","messageId":"622","endLine":163,"endColumn":32},{"ruleId":"575","severity":1,"message":"609","line":42,"column":10,"nodeType":"577","messageId":"578","endLine":42,"endColumn":15},{"ruleId":"571","severity":1,"message":"605","line":161,"column":6,"nodeType":"573","endLine":161,"endColumn":8,"suggestions":"623"},{"ruleId":"571","severity":1,"message":"611","line":169,"column":6,"nodeType":"573","endLine":169,"endColumn":12,"suggestions":"624"},{"ruleId":"571","severity":1,"message":"605","line":58,"column":6,"nodeType":"573","endLine":58,"endColumn":8,"suggestions":"625"},{"ruleId":"571","severity":1,"message":"611","line":66,"column":6,"nodeType":"573","endLine":66,"endColumn":12,"suggestions":"626"},{"ruleId":"571","severity":1,"message":"605","line":62,"column":6,"nodeType":"573","endLine":62,"endColumn":8,"suggestions":"627"},{"ruleId":"571","severity":1,"message":"611","line":70,"column":6,"nodeType":"573","endLine":70,"endColumn":12,"suggestions":"628"},{"ruleId":"575","severity":1,"message":"609","line":40,"column":10,"nodeType":"577","messageId":"578","endLine":40,"endColumn":15},{"ruleId":"571","severity":1,"message":"605","line":79,"column":6,"nodeType":"573","endLine":79,"endColumn":8,"suggestions":"629"},{"ruleId":"571","severity":1,"message":"611","line":87,"column":6,"nodeType":"573","endLine":87,"endColumn":12,"suggestions":"630"},{"ruleId":"590","severity":1,"message":"591","line":25,"column":13,"nodeType":"592","endLine":28,"endColumn":14},{"ruleId":"593","severity":1,"message":"594","line":29,"column":15,"nodeType":"592","endLine":29,"endColumn":79},{"ruleId":"575","severity":1,"message":"586","line":1,"column":20,"nodeType":"577","messageId":"578","endLine":1,"endColumn":27},{"ruleId":"575","severity":1,"message":"586","line":1,"column":27,"nodeType":"577","messageId":"578","endLine":1,"endColumn":34},{"ruleId":"575","severity":1,"message":"602","line":2,"column":10,"nodeType":"577","messageId":"578","endLine":2,"endColumn":18},{"ruleId":"575","severity":1,"message":"631","line":7,"column":22,"nodeType":"577","messageId":"578","endLine":7,"endColumn":35},{"ruleId":"575","severity":1,"message":"632","line":9,"column":9,"nodeType":"577","messageId":"578","endLine":9,"endColumn":20},{"ruleId":"575","severity":1,"message":"604","line":1,"column":10,"nodeType":"577","messageId":"578","endLine":1,"endColumn":21},{"ruleId":"575","severity":1,"message":"633","line":3,"column":10,"nodeType":"577","messageId":"578","endLine":3,"endColumn":26},{"ruleId":"575","severity":1,"message":"586","line":4,"column":27,"nodeType":"577","messageId":"578","endLine":4,"endColumn":34},{"ruleId":"575","severity":1,"message":"602","line":5,"column":10,"nodeType":"577","messageId":"578","endLine":5,"endColumn":18},{"ruleId":"575","severity":1,"message":"634","line":6,"column":10,"nodeType":"577","messageId":"578","endLine":6,"endColumn":16},{"ruleId":"575","severity":1,"message":"635","line":7,"column":8,"nodeType":"577","messageId":"578","endLine":7,"endColumn":17},{"ruleId":"575","severity":1,"message":"636","line":8,"column":8,"nodeType":"577","messageId":"578","endLine":8,"endColumn":19},{"ruleId":"575","severity":1,"message":"602","line":3,"column":10,"nodeType":"577","messageId":"578","endLine":3,"endColumn":18},{"ruleId":"575","severity":1,"message":"632","line":38,"column":9,"nodeType":"577","messageId":"578","endLine":38,"endColumn":20},{"ruleId":"575","severity":1,"message":"602","line":3,"column":10,"nodeType":"577","messageId":"578","endLine":3,"endColumn":18},{"ruleId":"575","severity":1,"message":"602","line":3,"column":10,"nodeType":"577","messageId":"578","endLine":3,"endColumn":18},{"ruleId":"575","severity":1,"message":"602","line":3,"column":10,"nodeType":"577","messageId":"578","endLine":3,"endColumn":18},{"ruleId":"637","severity":1,"message":"638","line":43,"column":23,"nodeType":"639","messageId":"640","endLine":43,"endColumn":25},{"ruleId":"575","severity":1,"message":"641","line":56,"column":9,"nodeType":"577","messageId":"578","endLine":56,"endColumn":22},{"ruleId":"575","severity":1,"message":"604","line":1,"column":10,"nodeType":"577","messageId":"578","endLine":1,"endColumn":21},{"ruleId":"575","severity":1,"message":"642","line":3,"column":15,"nodeType":"577","messageId":"578","endLine":3,"endColumn":20},{"ruleId":"575","severity":1,"message":"586","line":3,"column":27,"nodeType":"577","messageId":"578","endLine":3,"endColumn":34},{"ruleId":"575","severity":1,"message":"602","line":4,"column":10,"nodeType":"577","messageId":"578","endLine":4,"endColumn":18},{"ruleId":"590","severity":1,"message":"591","line":28,"column":13,"nodeType":"592","endLine":31,"endColumn":14},{"ruleId":"593","severity":1,"message":"594","line":32,"column":15,"nodeType":"592","endLine":35,"endColumn":17},{"ruleId":"575","severity":1,"message":"602","line":3,"column":10,"nodeType":"577","messageId":"578","endLine":3,"endColumn":18},{"ruleId":"575","severity":1,"message":"602","line":5,"column":10,"nodeType":"577","messageId":"578","endLine":5,"endColumn":18},{"ruleId":"575","severity":1,"message":"643","line":3,"column":10,"nodeType":"577","messageId":"578","endLine":3,"endColumn":19},{"ruleId":"575","severity":1,"message":"643","line":2,"column":10,"nodeType":"577","messageId":"578","endLine":2,"endColumn":19},{"ruleId":"575","severity":1,"message":"602","line":2,"column":21,"nodeType":"577","messageId":"578","endLine":2,"endColumn":29},{"ruleId":"575","severity":1,"message":"604","line":3,"column":10,"nodeType":"577","messageId":"578","endLine":3,"endColumn":21},{"ruleId":"575","severity":1,"message":"644","line":8,"column":5,"nodeType":"577","messageId":"578","endLine":8,"endColumn":13},{"ruleId":"593","severity":1,"message":"594","line":41,"column":9,"nodeType":"592","endLine":47,"endColumn":11},{"ruleId":"575","severity":1,"message":"603","line":8,"column":9,"nodeType":"577","messageId":"578","endLine":8,"endColumn":17},{"ruleId":"575","severity":1,"message":"603","line":8,"column":9,"nodeType":"577","messageId":"578","endLine":8,"endColumn":17},{"ruleId":"575","severity":1,"message":"586","line":1,"column":20,"nodeType":"577","messageId":"578","endLine":1,"endColumn":27},{"ruleId":"575","severity":1,"message":"602","line":3,"column":10,"nodeType":"577","messageId":"578","endLine":3,"endColumn":18},{"ruleId":"575","severity":1,"message":"645","line":6,"column":16,"nodeType":"577","messageId":"578","endLine":6,"endColumn":23},{"ruleId":"575","severity":1,"message":"602","line":3,"column":10,"nodeType":"577","messageId":"578","endLine":3,"endColumn":18},{"ruleId":"575","severity":1,"message":"646","line":4,"column":8,"nodeType":"577","messageId":"578","endLine":4,"endColumn":16},{"ruleId":"575","severity":1,"message":"602","line":2,"column":10,"nodeType":"577","messageId":"578","endLine":2,"endColumn":18},{"ruleId":"575","severity":1,"message":"604","line":4,"column":10,"nodeType":"577","messageId":"578","endLine":4,"endColumn":21},{"ruleId":"575","severity":1,"message":"646","line":6,"column":8,"nodeType":"577","messageId":"578","endLine":6,"endColumn":16},{"ruleId":"575","severity":1,"message":"647","line":4,"column":8,"nodeType":"577","messageId":"578","endLine":4,"endColumn":13},{"ruleId":"575","severity":1,"message":"604","line":8,"column":23,"nodeType":"577","messageId":"578","endLine":8,"endColumn":34},{"ruleId":"575","severity":1,"message":"648","line":9,"column":22,"nodeType":"577","messageId":"578","endLine":9,"endColumn":37},{"ruleId":"571","severity":1,"message":"649","line":34,"column":3,"nodeType":"577","endLine":34,"endColumn":12,"suggestions":"650"},{"ruleId":"575","severity":1,"message":"586","line":3,"column":10,"nodeType":"577","messageId":"578","endLine":3,"endColumn":17},{"ruleId":"575","severity":1,"message":"651","line":3,"column":19,"nodeType":"577","messageId":"578","endLine":3,"endColumn":25},{"ruleId":"575","severity":1,"message":"652","line":3,"column":32,"nodeType":"577","messageId":"578","endLine":3,"endColumn":39},{"ruleId":"575","severity":1,"message":"653","line":3,"column":41,"nodeType":"577","messageId":"578","endLine":3,"endColumn":46},{"ruleId":"575","severity":1,"message":"654","line":3,"column":53,"nodeType":"577","messageId":"578","endLine":3,"endColumn":59},{"ruleId":"575","severity":1,"message":"655","line":4,"column":10,"nodeType":"577","messageId":"578","endLine":4,"endColumn":17},{"ruleId":"575","severity":1,"message":"643","line":6,"column":10,"nodeType":"577","messageId":"578","endLine":6,"endColumn":19},{"ruleId":"575","severity":1,"message":"604","line":7,"column":23,"nodeType":"577","messageId":"578","endLine":7,"endColumn":34},{"ruleId":"575","severity":1,"message":"656","line":12,"column":19,"nodeType":"577","messageId":"578","endLine":12,"endColumn":30},{"ruleId":"575","severity":1,"message":"657","line":12,"column":32,"nodeType":"577","messageId":"578","endLine":12,"endColumn":42},{"ruleId":"575","severity":1,"message":"658","line":17,"column":10,"nodeType":"577","messageId":"578","endLine":17,"endColumn":16},{"ruleId":"575","severity":1,"message":"659","line":17,"column":18,"nodeType":"577","messageId":"578","endLine":17,"endColumn":27},{"ruleId":"575","severity":1,"message":"660","line":18,"column":27,"nodeType":"577","messageId":"578","endLine":18,"endColumn":45},{"ruleId":"575","severity":1,"message":"661","line":19,"column":22,"nodeType":"577","messageId":"578","endLine":19,"endColumn":34},{"ruleId":"575","severity":1,"message":"662","line":22,"column":9,"nodeType":"577","messageId":"578","endLine":22,"endColumn":16},{"ruleId":"575","severity":1,"message":"663","line":24,"column":9,"nodeType":"577","messageId":"578","endLine":24,"endColumn":16},{"ruleId":"664","severity":1,"message":"665","line":128,"column":31,"nodeType":"666","messageId":"667","endLine":128,"endColumn":32,"fix":"668"},{"ruleId":"575","severity":1,"message":"653","line":3,"column":15,"nodeType":"577","messageId":"578","endLine":3,"endColumn":20},{"ruleId":"575","severity":1,"message":"586","line":3,"column":27,"nodeType":"577","messageId":"578","endLine":3,"endColumn":34},{"ruleId":"575","severity":1,"message":"661","line":10,"column":5,"nodeType":"577","messageId":"578","endLine":10,"endColumn":17},{"ruleId":"575","severity":1,"message":"669","line":15,"column":5,"nodeType":"577","messageId":"578","endLine":15,"endColumn":16},"no-native-reassign",["670"],"no-negated-in-lhs",["671"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["672"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar",["673"],"React Hook useEffect has missing dependencies: 'loadLSAppData', 'loadLSFactoryData', and 'loadLSUserData'. Either include them or remove the dependency array.",["674"],"'LS_ITEMS' is defined but never used.","React Hook useEffect has a missing dependency: 'appDataStore'. Either include it or remove the dependency array.",["675"],"'setPics' is assigned a value but never used.","'message' is defined but never used.","'setPlcConnected' is assigned a value but never used.","'setServerConnected' is assigned a value but never used.","'setStatus' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'setWrongList' is assigned a value but never used.","'setIdleStatus' is assigned a value but never used.","'setInCyleStatusTime' is assigned a value but never used.","'setIdleStatusTime' is assigned a value but never used.","'setUncategorizedStatusTime' is assigned a value but never used.","'reduceUserData' is assigned a value but never used.","'test' is assigned a value but never used.","'useState' is defined but never used.","'authData' is assigned a value but never used.","'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'intervalId'. Either include it or remove the dependency array.",["676"],"React Hook useEffect has missing dependencies: 'isStarted', 'selectedTankIndex', and 'times'. Either include them or remove the dependency array.",["677"],"'notes' is assigned a value but never used.",["678"],"React Hook useEffect has missing dependencies: 'isStarted' and 'processingTime'. Either include them or remove the dependency array. You can also do a functional update 'setProcessingTime(p => ...)' if you only need 'processingTime' in the 'setProcessingTime' call.",["679"],["680"],["681"],"React Hook useEffect has missing dependencies: 'getTemperatureData' and 'intervalId'. Either include them or remove the dependency array.",["682"],"Assignments to the 'timeLastTemperatureData' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["683"],["684"],["685"],["686"],["687"],["688"],["689"],["690"],"'setAppVersion' is assigned a value but never used.","'onEditJobID' is assigned a value but never used.","'PlayCircleFilled' is defined but never used.","'Parser' is defined but never used.","'TextInput' is defined but never used.","'RadialInput' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'validate_info' is assigned a value but never used.","'Radio' is defined but never used.","'useEffect' is defined but never used.","'setTimes' is assigned a value but never used.","'setTime' is assigned a value but never used.","'TextArea' is defined but never used.","'dayjs' is defined but never used.","'setAppDataStore' is defined but never used.","React Hook useEffect contains a call to 'setRDate'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [formattedDate, formattedTime] as a second argument to the useEffect Hook.",["691"],"'Button' is defined but never used.","'Divider' is defined but never used.","'Input' is defined but never used.","'Drawer' is defined but never used.","'useAuth' is defined but never used.","'isValidTime' is defined but never used.","'setAppData' is defined but never used.","'isBusy' is assigned a value but never used.","'setIsBusy' is assigned a value but never used.","'setElapsedIdleTime' is assigned a value but never used.","'setStausTime' is assigned a value but never used.","'history' is assigned a value but never used.","'onClick' is assigned a value but never used.","rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"692","text":"693"},"'marginRight' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"694","fix":"695"},{"desc":"696","fix":"697"},{"desc":"698","fix":"699"},{"desc":"700","fix":"701"},{"desc":"702","fix":"703"},{"desc":"704","fix":"705"},{"desc":"702","fix":"706"},{"desc":"707","fix":"708"},{"desc":"702","fix":"709"},{"desc":"707","fix":"710"},{"desc":"711","fix":"712"},{"desc":"702","fix":"713"},{"desc":"707","fix":"714"},{"desc":"702","fix":"715"},{"desc":"707","fix":"716"},{"desc":"702","fix":"717"},{"desc":"707","fix":"718"},{"desc":"702","fix":"719"},{"desc":"707","fix":"720"},{"desc":"721","fix":"722"},[4657,4658],"","Update the dependencies array to be: [dispatch, screenSize]",{"range":"723","text":"724"},"Update the dependencies array to be: [dispatch]",{"range":"725","text":"726"},"Update the dependencies array to be: [loadLSAppData, loadLSFactoryData, loadLSUserData]",{"range":"727","text":"728"},"Update the dependencies array to be: [appDataStore.machineName, appDataStore.downtime_reason1, appDataStore.downtime_reason2, appDataStore.downtime_reason3, appDataStore.downtime_reason4, appDataStore.downtime_reason5, appDataStore.downtime_reason6, appDataStore.downtime_reason7, appDataStore.downtime_reason8, appDataStore.cslock_cycle, appDataStore.cslock_reverse, appDataStore.cslock_guest, appDataStore.cslock_alert, appDataStore.time_stop, appDataStore.time_production, appDataStore.cycle_send_alert, appDataStore.cycle_email1, appDataStore.cycle_email2, appDataStore.cycle_email3, appDataStore.automatic_part, appDataStore.automatic_min_time, appDataStore.automatic_part_per_cycle, appDataStore.gantt_chart_display, appDataStore.calc_chart_title, appDataStore.calc_chart_formula, appDataStore.calc_chart_option, appDataStore.calc_chart_unit, appDataStore.calc_chart_disp_mode, appDataStore.calc_chart_max_value, appDataStore]",{"range":"729","text":"730"},"Update the dependencies array to be: [intervalId]",{"range":"731","text":"732"},"Update the dependencies array to be: [isStarted, selectedTankIndex, tick, times]",{"range":"733","text":"734"},{"range":"735","text":"732"},"Update the dependencies array to be: [isStarted, processingTime, tick]",{"range":"736","text":"737"},{"range":"738","text":"732"},{"range":"739","text":"737"},"Update the dependencies array to be: [getTemperatureData, intervalId]",{"range":"740","text":"741"},{"range":"742","text":"732"},{"range":"743","text":"737"},{"range":"744","text":"732"},{"range":"745","text":"737"},{"range":"746","text":"732"},{"range":"747","text":"737"},{"range":"748","text":"732"},{"range":"749","text":"737"},"Add dependencies array: [formattedDate, formattedTime]",{"range":"750","text":"751"},[1048,1060],"[dispatch, screenSize]",[1798,1800],"[dispatch]",[1532,1534],"[loadLSAppData, loadLSFactoryData, loadLSUserData]",[2282,3324],"[appDataStore.machineName, appDataStore.downtime_reason1, appDataStore.downtime_reason2, appDataStore.downtime_reason3, appDataStore.downtime_reason4, appDataStore.downtime_reason5, appDataStore.downtime_reason6, appDataStore.downtime_reason7, appDataStore.downtime_reason8, appDataStore.cslock_cycle, appDataStore.cslock_reverse, appDataStore.cslock_guest, appDataStore.cslock_alert, appDataStore.time_stop, appDataStore.time_production, appDataStore.cycle_send_alert, appDataStore.cycle_email1, appDataStore.cycle_email2, appDataStore.cycle_email3, appDataStore.automatic_part, appDataStore.automatic_min_time, appDataStore.automatic_part_per_cycle, appDataStore.gantt_chart_display, appDataStore.calc_chart_title, appDataStore.calc_chart_formula, appDataStore.calc_chart_option, appDataStore.calc_chart_unit, appDataStore.calc_chart_disp_mode, appDataStore.calc_chart_max_value, appDataStore]",[2509,2511],"[intervalId]",[2803,2809],"[isStarted, selectedTankIndex, tick, times]",[3536,3538],[3716,3722],"[isStarted, processingTime, tick]",[4054,4056],[4234,4240],[3186,3188],"[getTemperatureData, intervalId]",[4541,4543],[4721,4727],[2441,2443],[2621,2627],[2550,2552],[2730,2736],[2892,2894],[3072,3078],[1232,1232],", [formattedDate, formattedTime]"]